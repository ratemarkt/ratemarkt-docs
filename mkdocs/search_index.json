{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome to Ratemarkt Docs\n\n\nHere you can find plenty of documentation about Ratemarkt.\n\n\n\n\nWhat is Ratemarkt?\n\n\nFor a comprehensive introduction for Ratemarkt please visit \nRatemarkt Homepage\n first.\n\n\n\n\nGetting Started with Ratemark\n\n\nPlease choose the most suitable topic below you're looking for.\n\n\n\n\nUser's Guide\n Find out more about how to use every feature of Ratemarkt.\n\n\nApi Docs\n - Get integrated with Ratemarkt Client API.\n\n\nSDK Docs\n - Extend Ratemarkt Client API functionality using SDK.\n\n\nSupply Specs\n - Generic Supplier API Specs to take place as a Supplier in Ratemarkt\n\n\n\n\n\n\nRatemarkt Docs is under construction\n\n\nSorry for inconvenience but Ratemark Docs site is heavily under construction at the moment and many parts are still being prepared.\n\n\nOnly the \nApi Docs\n part is mostly done at the time being.\n\n\nSo stay tuned and check again later if you could not find something you're looking for. Or you might want to send us an email at \n for any kind of information.\n\n\n\n\nQuestions?\n\n\nWe'd love to help you in any case you get stuck with Ratemarkt.\nPlease first find answers to the most encountered questions in our \nF.A.Q\n page or reach us by using our \nSupport Center\n\n\nIf you like, you may drop us an email at", 
            "title": "Home"
        }, 
        {
            "location": "/#welcome-to-ratemarkt-docs", 
            "text": "Here you can find plenty of documentation about Ratemarkt.   What is Ratemarkt?  For a comprehensive introduction for Ratemarkt please visit  Ratemarkt Homepage  first.", 
            "title": "Welcome to Ratemarkt Docs"
        }, 
        {
            "location": "/#getting-started-with-ratemark", 
            "text": "Please choose the most suitable topic below you're looking for.   User's Guide  Find out more about how to use every feature of Ratemarkt.  Api Docs  - Get integrated with Ratemarkt Client API.  SDK Docs  - Extend Ratemarkt Client API functionality using SDK.  Supply Specs  - Generic Supplier API Specs to take place as a Supplier in Ratemarkt    Ratemarkt Docs is under construction  Sorry for inconvenience but Ratemark Docs site is heavily under construction at the moment and many parts are still being prepared.  Only the  Api Docs  part is mostly done at the time being.  So stay tuned and check again later if you could not find something you're looking for. Or you might want to send us an email at   for any kind of information.", 
            "title": "Getting Started with Ratemark"
        }, 
        {
            "location": "/#questions", 
            "text": "We'd love to help you in any case you get stuck with Ratemarkt.\nPlease first find answers to the most encountered questions in our  F.A.Q  page or reach us by using our  Support Center  If you like, you may drop us an email at", 
            "title": "Questions?"
        }, 
        {
            "location": "/users_guide/getting_started/", 
            "text": "Coming soon.", 
            "title": "Getting Started"
        }, 
        {
            "location": "/api_docs/getting_started/", 
            "text": "Getting Started\n\n\nWelcome to Ratemarkt Client API \n\n\nIntroduction\n\n\nRatemarkt Client API is a quite intuitive HTTP based JSON API designed to make it very easy to get integrated with Ratemarkt as a client.\n\n\nIt just requires a single API key put in HTTP headers to get authenticated and introduces only a few resources in total to get all the job done with ease.\n\n\nLocation\n\n\nRatemarkt API is currently located at \napi.ratemarkt.com\n domain under \nv1\n directory of which the directory name also denotes the current API version you use.\n\n\nAny API call requires a secure \nHTTPS\n connection (\nHTTP\n over \nSSL\n) and must be authenticated by using an API key to get granted for API resources.\n\n\nHere is the base url for any API call.\n\n\n1\nhttps://api.ratemarkt.com/v1/\n\n\n\n\n\n\nFor instance, you should call the url below for check hotels endpoint.\n\n\n1\nhttps://api.ratemarkt.com/v1/checkhotels\n\n\n\n\n\n\nAuthentication\n\n\nIn order to get autheticated against Ratemarkt API please see \nAuthentication\n page. Once you get authenticated you will be able to access the resources below.\n\n\nResources\n\n\nAll the API resources below accepts a JSON query object via HTTP post method for the sake of simplicity.\n\n\n\n    \n\n        \n\n        \n\n        \n\n    \n\n    \n\n        \n\n            \nName\n\n            \nResource Path\n\n            \nDescription\n\n        \n\n    \n\n    \n\n        \n\n            \nCheck Hotels\n\n            \n/checkhotels\n\n            \nGet availabile hotels by using a destination id or a list of hotel codes.\n\n        \n\n        \n\n            \nCheck Hotel\n\n            \n/checkhotel\n\n            \nSingle hotel availability for more recent data.\n\n        \n\n        \n\n            \nCheck Rate\n\n            \n/checkrate\n\n            \nSingle rate availability with the most recent data.\n\n        \n\n        \n\n            \nBook Rate\n\n            \n/bookrate\n\n            \nMake a booking from a selected rate by using its rate key.\n\n        \n\n        \n\n            \nCheck Booking\n\n            \n/checkbooking\n\n            \nQuery the booking status using either booking reference or client reference.\n\n        \n\n        \n\n            \nCancel Booking\n\n            \n/cancelbooking\n\n            \nCancel refered booking when desired.\n\n        \n\n    \n\n\n\n\n\nErrors\n\n\nTo see how Ratemarkt API handles exceptional situations and errors please refer to our \nErrors\n pages.\n\n\nClient Libraries\n\n\nAre you looking for a client library for your favorite programming language?\nThen you should take a look at our \nClient Libraries\n section .\n\n\nExample API Request / Response\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n$ curl -X POST -H \nAuthorization: Bearer \nYOUR_API_KEY_HERE\n https://api.ratemarkt.com/v1/checkrate -d\n{\n\n\n    \nrateKey\n: \n[Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|5pyO3Q|[jVOYrg|2|0]]\n\n\n}\n\n...\n\n{\n\n  \nhotel\n: \n{\n\n    \nhotelCode\n: \nd31d12\n,\n    \nhotelName\n: \nThe Marmara Taksim\n,\n    \ndestinationCode\n: \nc36ca9\n,\n    \ndestinationName\n: \nistanbul\n,\n    \ncountryCode\n: \nTR\n,\n    \nrates\n: \n[\n\n      \n{\n\n        \nrateType\n: \nNET\n,\n        \nrateKey\n: \n[Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|5pyO3Q|[jVOYrg|2|0]]\n,\n        \nnonrefundable\n: false,\n        \nboardType\n: \nRO\n,\n        \nboardName\n: \nRoom Only\n,\n        \nrate\n: \n591\n.19,\n        \ncurrency\n: \nEUR\n,\n        \nrooms\n: \n[\n\n          \n{\n\n            \nnumberOfAdults\n: \n2\n,\n            \nchildrenAges\n: \n[]\n,\n            \nroomDescription\n: \nDOUBLE DELUXE CITY VIEW\n,\n            \nsequence\n: \n1\n\n          \n}\n\n        \n]\n,\n        \ncancellationPolicies\n: \n[\n\n          \n{\n\n            \namount\n: \n175\n.95,\n            \nfromDate\n: \n2017-07-19T23:59:00+03:00\n\n          \n}\n\n        \n]\n,\n        \nremarks\n: \nCONTRACT VALID FOR JUNIOR ROOM TYPES .  Check-in hour 15:00 - .\n,\n        \ncommission\n: null,\n        \nhotelCurrency\n: null,\n        \nhotelRate\n: null\n      \n}\n\n    \n]\n\n  \n}\n\n\n}", 
            "title": "Getting Started"
        }, 
        {
            "location": "/api_docs/getting_started/#getting-started", 
            "text": "Welcome to Ratemarkt Client API", 
            "title": "Getting Started"
        }, 
        {
            "location": "/api_docs/getting_started/#introduction", 
            "text": "Ratemarkt Client API is a quite intuitive HTTP based JSON API designed to make it very easy to get integrated with Ratemarkt as a client.  It just requires a single API key put in HTTP headers to get authenticated and introduces only a few resources in total to get all the job done with ease.", 
            "title": "Introduction"
        }, 
        {
            "location": "/api_docs/getting_started/#location", 
            "text": "Ratemarkt API is currently located at  api.ratemarkt.com  domain under  v1  directory of which the directory name also denotes the current API version you use.  Any API call requires a secure  HTTPS  connection ( HTTP  over  SSL ) and must be authenticated by using an API key to get granted for API resources.  Here is the base url for any API call.  1 https://api.ratemarkt.com/v1/   For instance, you should call the url below for check hotels endpoint.  1 https://api.ratemarkt.com/v1/checkhotels", 
            "title": "Location"
        }, 
        {
            "location": "/api_docs/getting_started/#authentication", 
            "text": "In order to get autheticated against Ratemarkt API please see  Authentication  page. Once you get authenticated you will be able to access the resources below.", 
            "title": "Authentication"
        }, 
        {
            "location": "/api_docs/getting_started/#resources", 
            "text": "All the API resources below accepts a JSON query object via HTTP post method for the sake of simplicity.  \n     \n         \n         \n         \n     \n     \n         \n             Name \n             Resource Path \n             Description \n         \n     \n     \n         \n             Check Hotels \n             /checkhotels \n             Get availabile hotels by using a destination id or a list of hotel codes. \n         \n         \n             Check Hotel \n             /checkhotel \n             Single hotel availability for more recent data. \n         \n         \n             Check Rate \n             /checkrate \n             Single rate availability with the most recent data. \n         \n         \n             Book Rate \n             /bookrate \n             Make a booking from a selected rate by using its rate key. \n         \n         \n             Check Booking \n             /checkbooking \n             Query the booking status using either booking reference or client reference. \n         \n         \n             Cancel Booking \n             /cancelbooking \n             Cancel refered booking when desired.", 
            "title": "Resources"
        }, 
        {
            "location": "/api_docs/getting_started/#errors", 
            "text": "To see how Ratemarkt API handles exceptional situations and errors please refer to our  Errors  pages.", 
            "title": "Errors"
        }, 
        {
            "location": "/api_docs/getting_started/#client-libraries", 
            "text": "Are you looking for a client library for your favorite programming language?\nThen you should take a look at our  Client Libraries  section .", 
            "title": "Client Libraries"
        }, 
        {
            "location": "/api_docs/getting_started/#example-api-request-response", 
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43 $ curl -X POST -H  Authorization: Bearer  YOUR_API_KEY_HERE  https://api.ratemarkt.com/v1/checkrate -d {       rateKey :  [Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|5pyO3Q|[jVOYrg|2|0]]  } \n... { \n   hotel :  { \n     hotelCode :  d31d12 ,\n     hotelName :  The Marmara Taksim ,\n     destinationCode :  c36ca9 ,\n     destinationName :  istanbul ,\n     countryCode :  TR ,\n     rates :  [ \n       { \n         rateType :  NET ,\n         rateKey :  [Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|5pyO3Q|[jVOYrg|2|0]] ,\n         nonrefundable : false,\n         boardType :  RO ,\n         boardName :  Room Only ,\n         rate :  591 .19,\n         currency :  EUR ,\n         rooms :  [ \n           { \n             numberOfAdults :  2 ,\n             childrenAges :  [] ,\n             roomDescription :  DOUBLE DELUXE CITY VIEW ,\n             sequence :  1 \n           } \n         ] ,\n         cancellationPolicies :  [ \n           { \n             amount :  175 .95,\n             fromDate :  2017-07-19T23:59:00+03:00 \n           } \n         ] ,\n         remarks :  CONTRACT VALID FOR JUNIOR ROOM TYPES .  Check-in hour 15:00 - . ,\n         commission : null,\n         hotelCurrency : null,\n         hotelRate : null\n       } \n     ] \n   }  }", 
            "title": "Example API Request / Response"
        }, 
        {
            "location": "/api_docs/authentication/", 
            "text": "Authenitcation\n\n\nIntroduction\n\n\nIn order to get authenticated against Ratemarkt API you should first request an API Key from your Ratemarkt account holder.\n\n\n\n\nHow to Obtain an API Key\n\n\nPlease see \nClient Accounts\n at \nUser's Guide\n section on how to create a client account to generate API Key tied to that account.\n\n\n\n\n\n\nSecure you API Keys\n\n\nWhile the data on the network is transmitted over a secure connection to the Ratemarkt API servers, securing your API Keys in the wild is your own duty.\n\n\nPlease take care of your API keys and keep' em in highly secure environments otherwise attackers would get benefit from your keys on behalf of you once they capture them.\n\n\n\n\nOnce you obtain an API Key, the rest is quite easy though. Just put your API Key into your http headers while you make request to Ratemarkt API to able to get authenticated.\n\n\nExample\n\n\n1\n2\n$ curl -H \nAuthorization: Bearer \nYOUR_API_KEY_HERE\n\\\n    https://api.ratemarkt.com/v1/checkhotels\n -d\nREQUEST_BODY_JSON", 
            "title": "Authentication"
        }, 
        {
            "location": "/api_docs/authentication/#authenitcation", 
            "text": "", 
            "title": "Authenitcation"
        }, 
        {
            "location": "/api_docs/authentication/#introduction", 
            "text": "In order to get authenticated against Ratemarkt API you should first request an API Key from your Ratemarkt account holder.   How to Obtain an API Key  Please see  Client Accounts  at  User's Guide  section on how to create a client account to generate API Key tied to that account.    Secure you API Keys  While the data on the network is transmitted over a secure connection to the Ratemarkt API servers, securing your API Keys in the wild is your own duty.  Please take care of your API keys and keep' em in highly secure environments otherwise attackers would get benefit from your keys on behalf of you once they capture them.   Once you obtain an API Key, the rest is quite easy though. Just put your API Key into your http headers while you make request to Ratemarkt API to able to get authenticated.", 
            "title": "Introduction"
        }, 
        {
            "location": "/api_docs/authentication/#example", 
            "text": "1\n2 $ curl -H  Authorization: Bearer  YOUR_API_KEY_HERE \\\n    https://api.ratemarkt.com/v1/checkhotels  -d REQUEST_BODY_JSON", 
            "title": "Example"
        }, 
        {
            "location": "/api_docs/check_hotels/", 
            "text": "Check Hotels\n\n\nIntroduction\n\n\nYou can check for hotels available for any provided date range and pax information by specifying either a destination code or a list of hotel codes.\n\n\nThis resource is the first and the only required step before performing any booking but it is not the preferable way of doing because of higher probability of availability errors at the booking step.\n\n\n\n\nBeware of Availability Errors\n\n\nWe strongly recommend using \nCheck Hotel\n and \nCheck Rate\n resources for retrieving the most recent availability and price information for hotels to prevent availability failures at the time of booking.\n\n\n\n\nBecause of higher amount of traffic populated on this step, most suppliers and Ratemarkt itself by nature serves the most of the availability information from cache storages.\nServing from cache storages may cause outdated data being served and can be misleading for clients at the time of booking.\n\n\nSo it is highly recommended using further availability resources such as \nCheck Hotel\n and \nCheck Rate\n before proceeding to booking step in order to prevent booking failures caused by availability errors.\n\n\nDefinition\n\n\n1\nPOST https://api.ratemarkt.com/v1/checkhotels\n\n\n\n\n\n\nQuery Object\n\n\n\n    \n\n        \n\n        \n\n        \n\n        \n\n    \n\n    \n\n        \n\n            \nArgument\n\n            \nType\n\n            \nRequired\n\n            \nDescription\n\n        \n\n    \n\n    \n\n        \n\n            \ndestinationCode\n\n            \nstring\n\n            \noptional*\n\n            \nDestination code. \nPlease note that destination based querying is prohibited and can only be enabled in case of special support inquiries because of the inefficient nature of this kind of queries. Please use hotel code based querying instead.\n\n        \n\n        \n\n            \nhotelCodes\n\n            \nlist[string]\n\n            \noptional*\n\n            \nList of hotel codes. Up to max. 500 hotel codes per query is permitted.\n\n        \n\n        \n\n    \ncheckin\n\n    \nstring\n\n    \nyes\n\n    \nYYYY-MM-DD\n (ISO 8601) formatted date string. Eg. 2017-11-12\n\n\n\n\n\n    \ncheckout\n\n    \nstring\n\n    \nyes\n\n    \nYYYY-MM-DD\n (ISO 8601) formatted date string. Eg. 2017-11-15\n\n\n\n\n\n    \npaxes\n\n    \nlist[Pax]\n\n    \nyes\n\n    \nList of pax objects. Each pax object corresponds to a room. Multi room queries need more than one pax object.\n\n\n\n\n\n    \nPax.numberOfAdults\n\n    \ninteger\n\n    \nyes\n\n    \nNumber of adults requested.\n\n\n\n\n\n    \nPax.childrenAges\n\n    \nlist[integer]\n\n    \nyes\n\n    \nList of children requested specified by their ages.\n\n\n\n\n\n    \ncurrency\n\n    \nstring\n\n    \nyes\n\n    \nThree letter currency code (ISO-4217). **Please read the regarding note below.**\n\n\n\n\n\n    \nnationality\n\n    \nstring\n\n    \nyes\n\n    \nTwo letter country code (ISO 3166-1 alpha-2) for occupants passport nationality.\n\n\n\n\n\n\n\n\n\nAbout Optional* Arguments\n\n\nYou should provide either \ndestinationCode\n or \nhotelCodes\n argument to get your availability query work.\n\n\n\n\n\n\nPlease note the use of \ncurrency\n parameter\n\n\nNote that the \ncurrency\n parameter \nDOES NOT GUARANTEE\n the currency of rates returned by this resource.\nIt only should be used to tell Ratemarkt to avoid unnecessary currency changes in the backyard and do its best to return in desired currency if available.\n\n\nPlease check each rate's individual currency in any case before proceeding to next steps.\n\n\n\n\n\n\nBeware of Destination Based Queries\n\n\nSome popular travel destinations contain huge amount of hotels thus your queries may take much longer time then expected.\n\n\nWe strongly recommend hotel list based queries so that you can perform your queries for only the hotels you interested in and get back corresponding results in much shorter times rather than retrieving a bulk.\n\n\n\n\nExample Query Object\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n{\n\n  \nhotelCodes\n:\n \n[\n\n    \nd31d12\n,\n\n    \n69af45\n,\n\n    \n984767\n\n  \n],\n\n  \ncheckin\n:\n \n2017-07-22\n,\n\n  \ncheckout\n:\n \n2017-07-25\n,\n\n  \npaxes\n:\n \n[\n\n    \n{\n\n      \nchildrenAges\n:\n \n[],\n\n      \nnumberOfAdults\n:\n \n2\n\n    \n}\n\n  \n],\n\n  \ncurrency\n:\n \nUSD\n,\n\n  \nnationality\n:\n \nUS\n\n\n}\n\n\n\n\n\n\n\nResult Object\n\n\n\n    \n\n        \n\n        \n\n        \n\n        \n\n    \n\n    \n\n        \n\n            \nArgument\n\n            \nType\n\n            \nNullable\n\n            \nDescription\n\n        \n\n    \n\n    \n\n        \n\n            \nhotels\n\n            \nlist[Hotel]\n\n            \nno\n\n            \nList of available hotels\n\n        \n\n        \n\n    \nHotel.hotelCode\n\n    \nstring\n\n    \nno\n\n    \nUnique hotel identifier\n\n\n\n\n\n    \nHotel.hotelName\n\n    \nstring\n\n    \nno\n\n    \nHotel name\n\n\n\n\n\n    \nHotel.destinationCode\n\n    \nstring\n\n    \nno\n\n    \nUnique destination identifier\n\n\n\n\n\n    \nHotel.destinationName\n\n    \nstring\n\n    \nno\n\n    \nDestination name\n\n\n\n\n\n    \nHotel.countryCode\n\n    \nstring\n\n    \nno\n\n    \nTwo letter country code (ISO 3166-1 alpha-2)\n\n\n\n\n\n    \nHotel.rates\n\n    \nlist[Rate]\n\n    \nno\n\n    \nList of \nRate\n objects. Each rate corresponds to a hotel room combined with a service level which means a bookable product with a price for each hotel.\n\n\n\n\n\n    \nRate.rateType\n\n    \nstring\n\n    \nno\n\n    \nType of the rate. There are three types:\n        \n\n            \nNET\n: This type of rate can be selled by applying any margin on top of it.\n\n            \nSALE\n: Commissionable rate which should be selled exactly at the given rate.\n\n            \nDIRECT\n: Commissionable rate which the amount is payed directly to the hotelier by the occupants at the time of arrival. \n\n        \n\n        For commissionable rates, the amount of commission for the merchant is denoted at \nRate.commission\n field.\n    \n\n\n\n\n\n    \nRate.rateKey\n\n    \nstring\n\n    \nno\n\n    \nUnique identifier for each rate.\n\n\n\n\n\n    \nRate.nonrefundable\n\n    \nboolean\n\n    \nyes\n\n    \n\n        Flag denoting whether the rate is refundable or not. It means that if any nonrefundable rate is booked, cancellation of that booking won't be refunded in any cases.\n\n        Value can be \nnull\n in some cases so please refer to the corresponding \nRate.cancellation_policies\n field for that rate for money refunding policy at the time of cancellation.\n    \n\n\n\n\n\n    \nRate.boardType\n\n    \nstring\n\n    \nno\n\n    \nBoard type code of the rate. Possible value are\n\n        \n\n            \nRO\n: \nRoom Only\n\n            \nBB\n: \nBed And Breakfast\n\n            \nHB\n: \nHalf Board\n\n            \nFB\n: \nFull Board\n\n            \nAI\n: \nAll Inclusive\n\n        \n\n    \n\n\n\n\n\n    \nRate.boardName\n\n    \nstring\n\n    \nno\n\n    \nBoard type name of the rate. See \nRate.boardType\n field for possible values.\n\n\n\n\n\n    \nRate.rate\n\n    \ndecimal\n\n    \nno\n\n    \nTotal amount of the rate at given currency specified in \nRate.currency\n field.\n\n\n\n\n\n    \nRate.currency\n\n    \nstring\n\n    \nno\n\n    \nThree letter currency code (ISO-4217) of the total amount for the rate specified in \nRate.rate\n field\n\n\n\n\n\n    \nRate.rooms\n\n    \nlist[Room]\n\n    \nno\n\n    \n\n        List of \nRoom\n objects.\n    \n\n\n\n\n\n    \nRoom.numberOfAdults\n\n    \ninteger\n\n    \nno\n\n    \nMaximum number of adults can fit into this room\n\n\n\n\n\n    \nRoom.childrenAges\n\n    \nlist[integer]\n\n    \nno\n\n    \nChildren with specified ages can be accepted for this room.\n\n\n\n\n\n    \nRoom.roomDescription\n\n    \nstring\n\n    \nno\n\n    \nAny arbitrary description for this room which the hotelier specified.\n\n\n\n\n\n    \nRoom.sequence\n\n    \ninteger\n\n    \nno\n\n    \nRoom sequence identifier which is useful at the time of booking in order to specify which occupant set will be matched with which room.\n\n\n\n\n\n    \nRate.cancellationPolicies\n\n    \nlist[CancellationPolicy]\n\n    \nyes\n\n    \n\n        List of \nCancellationPolicy\n objects.\n\n        Cancellation policies indicates the amount of penalty charged and deducted from the total refund amount of the booking at the time of cancellation performed after the specified date and time.\n\n        Please note that, the value can be \nnull\n since not all the suppliers provide this data on \nCheck Hotels\n step. In these cases, you should use \nCheck Rate\n end point accordingly to able to retrieve cancellation policies.\n    \n\n\n\n\n\n    \nCancellationPolicy.amount\n\n    \ndecimal\n\n    \nno\n\n    \nPenalty amount in rate's currency specified in \nRate.currency\n field\n\n\n\n\n\n    \nCancellationPolicy.fromDate\n\n    \nstring\n\n    \nno\n\n    \nOffset date time string in \nYYYY-MM-DDThh:mmTZD\n (ISO 8601) format indicating from when the polciy applied.\n\n\n\n\n\n    \nRate.remarks\n\n    \nstring\n\n    \nyes\n\n    \nAny comments, warnings or policies applied by the hotel displayed here if available.\n\n\n\n\n\n    \nRate.commission\n\n    \ndecimal\n\n    \nyes\n\n    \nAmount of comission specified for commissionable rates.\n\n\n\n\n\n    \nRate.hotelRate\n\n    \ndecimal\n\n    \nyes\n\n    \n\n        Total amount of rate in hotelier's currency specified in \nhotelCurrency\n field which will be payed to the hotelier by the occupants at the time of arrival.\n        This field should not be \nnull\n when the \nRate.rateType\n is \nDIRECT\n\n    \n\n\n\n\n\n    \nRate.hotelCurrency\n\n    \nstring\n\n    \nyes\n\n    \nThree letter currency code (ISO-4217) of the total amount for the hotel rate specified in \nRate.hotelRate\n field\n\n\n\n\n\n\n\nExample Result Object\n\n\n  1\n  2\n  3\n  4\n  5\n  6\n  7\n  8\n  9\n 10\n 11\n 12\n 13\n 14\n 15\n 16\n 17\n 18\n 19\n 20\n 21\n 22\n 23\n 24\n 25\n 26\n 27\n 28\n 29\n 30\n 31\n 32\n 33\n 34\n 35\n 36\n 37\n 38\n 39\n 40\n 41\n 42\n 43\n 44\n 45\n 46\n 47\n 48\n 49\n 50\n 51\n 52\n 53\n 54\n 55\n 56\n 57\n 58\n 59\n 60\n 61\n 62\n 63\n 64\n 65\n 66\n 67\n 68\n 69\n 70\n 71\n 72\n 73\n 74\n 75\n 76\n 77\n 78\n 79\n 80\n 81\n 82\n 83\n 84\n 85\n 86\n 87\n 88\n 89\n 90\n 91\n 92\n 93\n 94\n 95\n 96\n 97\n 98\n 99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n{\n\n  \nhotels\n:\n \n[\n\n    \n{\n\n      \nhotelCode\n:\n \n69af45\n,\n\n      \nhotelName\n:\n \nThe Marmara Pera\n,\n\n      \ndestinationCode\n:\n \nc36ca9\n,\n\n      \ndestinationName\n:\n \nistanbul\n,\n\n      \ncountryCode\n:\n \nTR\n,\n\n      \nrates\n:\n \n[\n\n        \n{\n\n          \nrateType\n:\n \nNET\n,\n\n          \nrateKey\n:\n \n[Q9k|3|USD|US|[[2|[]]]]_[APS74Q|aa9F|NET|0|NWv9zw|[BugWBw|2|0]]\n,\n\n          \nnonrefundable\n:\n \ntrue\n,\n\n          \nboardType\n:\n \nRO\n,\n\n          \nboardName\n:\n \nRoom Only\n,\n\n          \nrate\n:\n \n165.83\n,\n\n          \ncurrency\n:\n \nUSD\n,\n\n          \nrooms\n:\n \n[\n\n            \n{\n\n              \nnumberOfAdults\n:\n \n2\n,\n\n              \nchildrenAges\n:\n \n[],\n\n              \nroomDescription\n:\n \nSuperior\n,\n\n              \nsequence\n:\n \n1\n\n            \n}\n\n          \n],\n\n          \ncancellationPolicies\n:\n \n[],\n\n          \nremarks\n:\n \nnull\n,\n\n          \ncommission\n:\n \nnull\n,\n\n          \nhotelCurrency\n:\n \nnull\n,\n\n          \nhotelRate\n:\n \nnull\n\n        \n},\n\n        \n{\n\n          \nrateType\n:\n \nNET\n,\n\n          \nrateKey\n:\n \n[Q9k|3|USD|US|[[2|[]]]]_[APS74Q|aa9F|NET|0|NWv9zw|[F108yA|2|0]]\n,\n\n          \nnonrefundable\n:\n \nfalse\n,\n\n          \nboardType\n:\n \nBB\n,\n\n          \nboardName\n:\n \nBed And Breakfast\n,\n\n          \nrate\n:\n \n189.52\n,\n\n          \ncurrency\n:\n \nUSD\n,\n\n          \nrooms\n:\n \n[\n\n            \n{\n\n              \nnumberOfAdults\n:\n \n2\n,\n\n              \nchildrenAges\n:\n \n[],\n\n              \nroomDescription\n:\n \nLeisure Superior\n,\n\n              \nsequence\n:\n \n1\n\n            \n}\n\n          \n],\n\n          \ncancellationPolicies\n:\n \n[],\n\n          \nremarks\n:\n \nnull\n,\n\n          \ncommission\n:\n \nnull\n,\n\n          \nhotelCurrency\n:\n \nnull\n,\n\n          \nhotelRate\n:\n \nnull\n\n        \n}\n\n      \n]\n\n    \n},\n\n    \n{\n\n      \nhotelCode\n:\n \nd31d12\n,\n\n      \nhotelName\n:\n \nThe Marmara Taksim\n,\n\n      \ndestinationCode\n:\n \nc36ca9\n,\n\n      \ndestinationName\n:\n \nistanbul\n,\n\n      \ncountryCode\n:\n \nTR\n,\n\n      \nrates\n:\n \n[\n\n        \n{\n\n          \nrateType\n:\n \nNET\n,\n\n          \nrateKey\n:\n \n[Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|5pyO3Q|[jVOYrg|2|0]]\n,\n\n          \nnonrefundable\n:\n \nfalse\n,\n\n          \nboardType\n:\n \nBB\n,\n\n          \nboardName\n:\n \nBed And Breakfast\n,\n\n          \nrate\n:\n \n689.24\n,\n\n          \ncurrency\n:\n \nEUR\n,\n\n          \nrooms\n:\n \n[\n\n            \n{\n\n              \nnumberOfAdults\n:\n \n2\n,\n\n              \nchildrenAges\n:\n \n[],\n\n              \nroomDescription\n:\n \nDOUBLE DELUXE CITY VIEW\n,\n\n              \nsequence\n:\n \n1\n\n            \n}\n\n          \n],\n\n          \ncancellationPolicies\n:\n \n[\n\n            \n{\n\n              \namount\n:\n \n205.13\n,\n\n              \nfromDate\n:\n \n2017-07-19T23:59:00+03:00\n\n            \n}\n\n          \n],\n\n          \nremarks\n:\n \nnull\n,\n\n          \ncommission\n:\n \nnull\n,\n\n          \nhotelCurrency\n:\n \nnull\n,\n\n          \nhotelRate\n:\n \nnull\n\n        \n},\n\n        \n{\n\n          \nrateType\n:\n \nNET\n,\n\n          \nrateKey\n:\n \n[Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|Prabrg|[Jn1lQw|2|0]]\n,\n\n          \nnonrefundable\n:\n \nfalse\n,\n\n          \nboardType\n:\n \nHB\n,\n\n          \nboardName\n:\n \nHalf Board\n,\n\n          \nrate\n:\n \n676.97\n,\n\n          \ncurrency\n:\n \nEUR\n,\n\n          \nrooms\n:\n \n[\n\n            \n{\n\n              \nnumberOfAdults\n:\n \n2\n,\n\n              \nchildrenAges\n:\n \n[],\n\n              \nroomDescription\n:\n \nDOUBLE DELUXE SEA VIEW\n,\n\n              \nsequence\n:\n \n1\n\n            \n}\n\n          \n],\n\n          \ncancellationPolicies\n:\n \n[\n\n            \n{\n\n              \namount\n:\n \n201.48\n,\n\n              \nfromDate\n:\n \n2017-07-19T23:59:00+03:00\n\n            \n}\n\n          \n],\n\n          \nremarks\n:\n \nnull\n,\n\n          \ncommission\n:\n \nnull\n,\n\n          \nhotelCurrency\n:\n \nnull\n,\n\n          \nhotelRate\n:\n \nnull\n\n        \n}\n\n      \n]\n\n    \n}\n\n  \n]\n\n\n}", 
            "title": "Check Hotels"
        }, 
        {
            "location": "/api_docs/check_hotels/#check-hotels", 
            "text": "", 
            "title": "Check Hotels"
        }, 
        {
            "location": "/api_docs/check_hotels/#introduction", 
            "text": "You can check for hotels available for any provided date range and pax information by specifying either a destination code or a list of hotel codes.  This resource is the first and the only required step before performing any booking but it is not the preferable way of doing because of higher probability of availability errors at the booking step.   Beware of Availability Errors  We strongly recommend using  Check Hotel  and  Check Rate  resources for retrieving the most recent availability and price information for hotels to prevent availability failures at the time of booking.   Because of higher amount of traffic populated on this step, most suppliers and Ratemarkt itself by nature serves the most of the availability information from cache storages.\nServing from cache storages may cause outdated data being served and can be misleading for clients at the time of booking.  So it is highly recommended using further availability resources such as  Check Hotel  and  Check Rate  before proceeding to booking step in order to prevent booking failures caused by availability errors.", 
            "title": "Introduction"
        }, 
        {
            "location": "/api_docs/check_hotels/#definition", 
            "text": "1 POST https://api.ratemarkt.com/v1/checkhotels", 
            "title": "Definition"
        }, 
        {
            "location": "/api_docs/check_hotels/#query-object", 
            "text": "Argument \n             Type \n             Required \n             Description \n         \n     \n     \n         \n             destinationCode \n             string \n             optional* \n             Destination code.  Please note that destination based querying is prohibited and can only be enabled in case of special support inquiries because of the inefficient nature of this kind of queries. Please use hotel code based querying instead. \n         \n         \n             hotelCodes \n             list[string] \n             optional* \n             List of hotel codes. Up to max. 500 hotel codes per query is permitted. \n         \n         \n     checkin \n     string \n     yes \n     YYYY-MM-DD  (ISO 8601) formatted date string. Eg. 2017-11-12   \n     checkout \n     string \n     yes \n     YYYY-MM-DD  (ISO 8601) formatted date string. Eg. 2017-11-15   \n     paxes \n     list[Pax] \n     yes \n     List of pax objects. Each pax object corresponds to a room. Multi room queries need more than one pax object.   \n     Pax.numberOfAdults \n     integer \n     yes \n     Number of adults requested.   \n     Pax.childrenAges \n     list[integer] \n     yes \n     List of children requested specified by their ages.   \n     currency \n     string \n     yes \n     Three letter currency code (ISO-4217). **Please read the regarding note below.**   \n     nationality \n     string \n     yes \n     Two letter country code (ISO 3166-1 alpha-2) for occupants passport nationality.     About Optional* Arguments  You should provide either  destinationCode  or  hotelCodes  argument to get your availability query work.    Please note the use of  currency  parameter  Note that the  currency  parameter  DOES NOT GUARANTEE  the currency of rates returned by this resource.\nIt only should be used to tell Ratemarkt to avoid unnecessary currency changes in the backyard and do its best to return in desired currency if available.  Please check each rate's individual currency in any case before proceeding to next steps.    Beware of Destination Based Queries  Some popular travel destinations contain huge amount of hotels thus your queries may take much longer time then expected.  We strongly recommend hotel list based queries so that you can perform your queries for only the hotels you interested in and get back corresponding results in much shorter times rather than retrieving a bulk.", 
            "title": "Query Object"
        }, 
        {
            "location": "/api_docs/check_hotels/#example-query-object", 
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17 { \n   hotelCodes :   [ \n     d31d12 , \n     69af45 , \n     984767 \n   ], \n   checkin :   2017-07-22 , \n   checkout :   2017-07-25 , \n   paxes :   [ \n     { \n       childrenAges :   [], \n       numberOfAdults :   2 \n     } \n   ], \n   currency :   USD , \n   nationality :   US  }", 
            "title": "Example Query Object"
        }, 
        {
            "location": "/api_docs/check_hotels/#result-object", 
            "text": "Argument \n             Type \n             Nullable \n             Description \n         \n     \n     \n         \n             hotels \n             list[Hotel] \n             no \n             List of available hotels \n         \n         \n     Hotel.hotelCode \n     string \n     no \n     Unique hotel identifier   \n     Hotel.hotelName \n     string \n     no \n     Hotel name   \n     Hotel.destinationCode \n     string \n     no \n     Unique destination identifier   \n     Hotel.destinationName \n     string \n     no \n     Destination name   \n     Hotel.countryCode \n     string \n     no \n     Two letter country code (ISO 3166-1 alpha-2)   \n     Hotel.rates \n     list[Rate] \n     no \n     List of  Rate  objects. Each rate corresponds to a hotel room combined with a service level which means a bookable product with a price for each hotel.   \n     Rate.rateType \n     string \n     no \n     Type of the rate. There are three types:\n         \n             NET : This type of rate can be selled by applying any margin on top of it. \n             SALE : Commissionable rate which should be selled exactly at the given rate. \n             DIRECT : Commissionable rate which the amount is payed directly to the hotelier by the occupants at the time of arrival.  \n         \n        For commissionable rates, the amount of commission for the merchant is denoted at  Rate.commission  field.\n       \n     Rate.rateKey \n     string \n     no \n     Unique identifier for each rate.   \n     Rate.nonrefundable \n     boolean \n     yes \n     \n        Flag denoting whether the rate is refundable or not. It means that if any nonrefundable rate is booked, cancellation of that booking won't be refunded in any cases. \n        Value can be  null  in some cases so please refer to the corresponding  Rate.cancellation_policies  field for that rate for money refunding policy at the time of cancellation.\n       \n     Rate.boardType \n     string \n     no \n     Board type code of the rate. Possible value are \n         \n             RO :  Room Only \n             BB :  Bed And Breakfast \n             HB :  Half Board \n             FB :  Full Board \n             AI :  All Inclusive \n         \n       \n     Rate.boardName \n     string \n     no \n     Board type name of the rate. See  Rate.boardType  field for possible values.   \n     Rate.rate \n     decimal \n     no \n     Total amount of the rate at given currency specified in  Rate.currency  field.   \n     Rate.currency \n     string \n     no \n     Three letter currency code (ISO-4217) of the total amount for the rate specified in  Rate.rate  field   \n     Rate.rooms \n     list[Room] \n     no \n     \n        List of  Room  objects.\n       \n     Room.numberOfAdults \n     integer \n     no \n     Maximum number of adults can fit into this room   \n     Room.childrenAges \n     list[integer] \n     no \n     Children with specified ages can be accepted for this room.   \n     Room.roomDescription \n     string \n     no \n     Any arbitrary description for this room which the hotelier specified.   \n     Room.sequence \n     integer \n     no \n     Room sequence identifier which is useful at the time of booking in order to specify which occupant set will be matched with which room.   \n     Rate.cancellationPolicies \n     list[CancellationPolicy] \n     yes \n     \n        List of  CancellationPolicy  objects. \n        Cancellation policies indicates the amount of penalty charged and deducted from the total refund amount of the booking at the time of cancellation performed after the specified date and time. \n        Please note that, the value can be  null  since not all the suppliers provide this data on  Check Hotels  step. In these cases, you should use  Check Rate  end point accordingly to able to retrieve cancellation policies.\n       \n     CancellationPolicy.amount \n     decimal \n     no \n     Penalty amount in rate's currency specified in  Rate.currency  field   \n     CancellationPolicy.fromDate \n     string \n     no \n     Offset date time string in  YYYY-MM-DDThh:mmTZD  (ISO 8601) format indicating from when the polciy applied.   \n     Rate.remarks \n     string \n     yes \n     Any comments, warnings or policies applied by the hotel displayed here if available.   \n     Rate.commission \n     decimal \n     yes \n     Amount of comission specified for commissionable rates.   \n     Rate.hotelRate \n     decimal \n     yes \n     \n        Total amount of rate in hotelier's currency specified in  hotelCurrency  field which will be payed to the hotelier by the occupants at the time of arrival.\n        This field should not be  null  when the  Rate.rateType  is  DIRECT \n       \n     Rate.hotelCurrency \n     string \n     yes \n     Three letter currency code (ISO-4217) of the total amount for the hotel rate specified in  Rate.hotelRate  field", 
            "title": "Result Object"
        }, 
        {
            "location": "/api_docs/check_hotels/#example-result-object", 
            "text": "1\n  2\n  3\n  4\n  5\n  6\n  7\n  8\n  9\n 10\n 11\n 12\n 13\n 14\n 15\n 16\n 17\n 18\n 19\n 20\n 21\n 22\n 23\n 24\n 25\n 26\n 27\n 28\n 29\n 30\n 31\n 32\n 33\n 34\n 35\n 36\n 37\n 38\n 39\n 40\n 41\n 42\n 43\n 44\n 45\n 46\n 47\n 48\n 49\n 50\n 51\n 52\n 53\n 54\n 55\n 56\n 57\n 58\n 59\n 60\n 61\n 62\n 63\n 64\n 65\n 66\n 67\n 68\n 69\n 70\n 71\n 72\n 73\n 74\n 75\n 76\n 77\n 78\n 79\n 80\n 81\n 82\n 83\n 84\n 85\n 86\n 87\n 88\n 89\n 90\n 91\n 92\n 93\n 94\n 95\n 96\n 97\n 98\n 99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120 { \n   hotels :   [ \n     { \n       hotelCode :   69af45 , \n       hotelName :   The Marmara Pera , \n       destinationCode :   c36ca9 , \n       destinationName :   istanbul , \n       countryCode :   TR , \n       rates :   [ \n         { \n           rateType :   NET , \n           rateKey :   [Q9k|3|USD|US|[[2|[]]]]_[APS74Q|aa9F|NET|0|NWv9zw|[BugWBw|2|0]] , \n           nonrefundable :   true , \n           boardType :   RO , \n           boardName :   Room Only , \n           rate :   165.83 , \n           currency :   USD , \n           rooms :   [ \n             { \n               numberOfAdults :   2 , \n               childrenAges :   [], \n               roomDescription :   Superior , \n               sequence :   1 \n             } \n           ], \n           cancellationPolicies :   [], \n           remarks :   null , \n           commission :   null , \n           hotelCurrency :   null , \n           hotelRate :   null \n         }, \n         { \n           rateType :   NET , \n           rateKey :   [Q9k|3|USD|US|[[2|[]]]]_[APS74Q|aa9F|NET|0|NWv9zw|[F108yA|2|0]] , \n           nonrefundable :   false , \n           boardType :   BB , \n           boardName :   Bed And Breakfast , \n           rate :   189.52 , \n           currency :   USD , \n           rooms :   [ \n             { \n               numberOfAdults :   2 , \n               childrenAges :   [], \n               roomDescription :   Leisure Superior , \n               sequence :   1 \n             } \n           ], \n           cancellationPolicies :   [], \n           remarks :   null , \n           commission :   null , \n           hotelCurrency :   null , \n           hotelRate :   null \n         } \n       ] \n     }, \n     { \n       hotelCode :   d31d12 , \n       hotelName :   The Marmara Taksim , \n       destinationCode :   c36ca9 , \n       destinationName :   istanbul , \n       countryCode :   TR , \n       rates :   [ \n         { \n           rateType :   NET , \n           rateKey :   [Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|5pyO3Q|[jVOYrg|2|0]] , \n           nonrefundable :   false , \n           boardType :   BB , \n           boardName :   Bed And Breakfast , \n           rate :   689.24 , \n           currency :   EUR , \n           rooms :   [ \n             { \n               numberOfAdults :   2 , \n               childrenAges :   [], \n               roomDescription :   DOUBLE DELUXE CITY VIEW , \n               sequence :   1 \n             } \n           ], \n           cancellationPolicies :   [ \n             { \n               amount :   205.13 , \n               fromDate :   2017-07-19T23:59:00+03:00 \n             } \n           ], \n           remarks :   null , \n           commission :   null , \n           hotelCurrency :   null , \n           hotelRate :   null \n         }, \n         { \n           rateType :   NET , \n           rateKey :   [Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|Prabrg|[Jn1lQw|2|0]] , \n           nonrefundable :   false , \n           boardType :   HB , \n           boardName :   Half Board , \n           rate :   676.97 , \n           currency :   EUR , \n           rooms :   [ \n             { \n               numberOfAdults :   2 , \n               childrenAges :   [], \n               roomDescription :   DOUBLE DELUXE SEA VIEW , \n               sequence :   1 \n             } \n           ], \n           cancellationPolicies :   [ \n             { \n               amount :   201.48 , \n               fromDate :   2017-07-19T23:59:00+03:00 \n             } \n           ], \n           remarks :   null , \n           commission :   null , \n           hotelCurrency :   null , \n           hotelRate :   null \n         } \n       ] \n     } \n   ]  }", 
            "title": "Example Result Object"
        }, 
        {
            "location": "/api_docs/check_hotel/", 
            "text": "Introduction\n\n\nCheck single hotel availability for any given date range and pax information. This method is intented to provide cacheless, most recent availability data for requested hotel. If the hotel has no any single rate for the query submitted, client receives not available error.\n\n\nDefinition\n\n\n1\nPOST https://api.ratemarkt.com/v1/checkhotel\n\n\n\n\n\n\nQuery Object\n\n\n\n    \n\n        \n\n        \n\n        \n\n        \n\n    \n\n    \n\n        \n\n            \nArgument\n\n            \nType\n\n            \nRequired\n\n            \nDescription\n\n        \n\n    \n\n    \n\n        \n\n            \nhotelCode\n\n            \nstring\n\n            \nyes\n\n            \nUnique hotel identifier\n\n        \n\n        \n\n    \ncheckin\n\n    \nstring\n\n    \nyes\n\n    \nYYYY-MM-DD\n (ISO 8601) formatted date string. Eg. 2017-11-12\n\n\n\n\n\n    \ncheckout\n\n    \nstring\n\n    \nyes\n\n    \nYYYY-MM-DD\n (ISO 8601) formatted date string. Eg. 2017-11-15\n\n\n\n\n\n    \npaxes\n\n    \nlist[Pax]\n\n    \nyes\n\n    \nList of pax objects. Each pax object corresponds to a room. Multi room queries need more than one pax object.\n\n\n\n\n\n    \nPax.numberOfAdults\n\n    \ninteger\n\n    \nyes\n\n    \nNumber of adults requested.\n\n\n\n\n\n    \nPax.childrenAges\n\n    \nlist[integer]\n\n    \nyes\n\n    \nList of children requested specified by their ages.\n\n\n\n\n\n    \ncurrency\n\n    \nstring\n\n    \nyes\n\n    \nThree letter currency code (ISO-4217). **Please read the regarding note below.**\n\n\n\n\n\n    \nnationality\n\n    \nstring\n\n    \nyes\n\n    \nTwo letter country code (ISO 3166-1 alpha-2) for occupants passport nationality.\n\n\n\n\n\n\n\n\n\nPlease note the use of \ncurrency\n parameter\n\n\nNote that the \ncurrency\n parameter \nDOES NOT GUARANTEE\n the currency of rates returned by this resource.\nIt only should be used to tell Ratemarkt to avoid unnecessary currency changes in the backyard and do its best to return in desired currency if available.\n\n\nPlease check each rate's individual currency in any case before proceeding to next steps.\n\n\n\n\nExample Query Object\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n{\n\n  \nhotelCode\n:\n \nd31d12\n,\n\n  \ncheckin\n:\n \n2017-07-22\n,\n\n  \ncheckout\n:\n \n2017-07-25\n,\n\n  \npaxes\n:\n \n[\n\n    \n{\n\n      \nnumberOfAdults\n:\n \n2\n,\n\n      \nchildrenAges\n:\n \n[]\n\n    \n}\n\n  \n],\n\n  \ncurrency\n:\n \nUSD\n,\n\n  \nnationality\n:\n \nUS\n\n\n}\n\n\n\n\n\n\n\nResult Object\n\n\n\n\nResult Object Hint\n\n\nWhile \nCheck Hotels\n resource returns a list of \nHotel\n objects, this resource also returns exactly the same \nHotel\n object as a single item.\n\n\nSo you may want to reuse the same json parser logic in your client application.\n\n\n\n\n\n    \n\n        \n\n        \n\n        \n\n        \n\n    \n\n    \n\n        \n\n            \nArgument\n\n            \nType\n\n            \nNullable\n\n            \nDescription\n\n        \n\n    \n\n    \n\n        \n\n    \nHotel.hotelCode\n\n    \nstring\n\n    \nno\n\n    \nUnique hotel identifier\n\n\n\n\n\n    \nHotel.hotelName\n\n    \nstring\n\n    \nno\n\n    \nHotel name\n\n\n\n\n\n    \nHotel.destinationCode\n\n    \nstring\n\n    \nno\n\n    \nUnique destination identifier\n\n\n\n\n\n    \nHotel.destinationName\n\n    \nstring\n\n    \nno\n\n    \nDestination name\n\n\n\n\n\n    \nHotel.countryCode\n\n    \nstring\n\n    \nno\n\n    \nTwo letter country code (ISO 3166-1 alpha-2)\n\n\n\n\n\n    \nHotel.rates\n\n    \nlist[Rate]\n\n    \nno\n\n    \nList of \nRate\n objects. Each rate corresponds to a hotel room combined with a service level which means a bookable product with a price for each hotel.\n\n\n\n\n\n    \nRate.rateType\n\n    \nstring\n\n    \nno\n\n    \nType of the rate. There are three types:\n        \n\n            \nNET\n: This type of rate can be selled by applying any margin on top of it.\n\n            \nSALE\n: Commissionable rate which should be selled exactly at the given rate.\n\n            \nDIRECT\n: Commissionable rate which the amount is payed directly to the hotelier by the occupants at the time of arrival. \n\n        \n\n        For commissionable rates, the amount of commission for the merchant is denoted at \nRate.commission\n field.\n    \n\n\n\n\n\n    \nRate.rateKey\n\n    \nstring\n\n    \nno\n\n    \nUnique identifier for each rate.\n\n\n\n\n\n    \nRate.nonrefundable\n\n    \nboolean\n\n    \nyes\n\n    \n\n        Flag denoting whether the rate is refundable or not. It means that if any nonrefundable rate is booked, cancellation of that booking won't be refunded in any cases.\n\n        Value can be \nnull\n in some cases so please refer to the corresponding \nRate.cancellation_policies\n field for that rate for money refunding policy at the time of cancellation.\n    \n\n\n\n\n\n    \nRate.boardType\n\n    \nstring\n\n    \nno\n\n    \nBoard type code of the rate. Possible value are\n\n        \n\n            \nRO\n: \nRoom Only\n\n            \nBB\n: \nBed And Breakfast\n\n            \nHB\n: \nHalf Board\n\n            \nFB\n: \nFull Board\n\n            \nAI\n: \nAll Inclusive\n\n        \n\n    \n\n\n\n\n\n    \nRate.boardName\n\n    \nstring\n\n    \nno\n\n    \nBoard type name of the rate. See \nRate.boardType\n field for possible values.\n\n\n\n\n\n    \nRate.rate\n\n    \ndecimal\n\n    \nno\n\n    \nTotal amount of the rate at given currency specified in \nRate.currency\n field.\n\n\n\n\n\n    \nRate.currency\n\n    \nstring\n\n    \nno\n\n    \nThree letter currency code (ISO-4217) of the total amount for the rate specified in \nRate.rate\n field\n\n\n\n\n\n    \nRate.rooms\n\n    \nlist[Room]\n\n    \nno\n\n    \n\n        List of \nRoom\n objects.\n    \n\n\n\n\n\n    \nRoom.numberOfAdults\n\n    \ninteger\n\n    \nno\n\n    \nMaximum number of adults can fit into this room\n\n\n\n\n\n    \nRoom.childrenAges\n\n    \nlist[integer]\n\n    \nno\n\n    \nChildren with specified ages can be accepted for this room.\n\n\n\n\n\n    \nRoom.roomDescription\n\n    \nstring\n\n    \nno\n\n    \nAny arbitrary description for this room which the hotelier specified.\n\n\n\n\n\n    \nRoom.sequence\n\n    \ninteger\n\n    \nno\n\n    \nRoom sequence identifier which is useful at the time of booking in order to specify which occupant set will be matched with which room.\n\n\n\n\n\n    \nRate.cancellationPolicies\n\n    \nlist[CancellationPolicy]\n\n    \nyes\n\n    \n\n        List of \nCancellationPolicy\n objects.\n\n        Cancellation policies indicates the amount of penalty charged and deducted from the total refund amount of the booking at the time of cancellation performed after the specified date and time.\n\n        Please note that, the value can be \nnull\n since not all the suppliers provide this data on \nCheck Hotels\n step. In these cases, you should use \nCheck Rate\n end point accordingly to able to retrieve cancellation policies.\n    \n\n\n\n\n\n    \nCancellationPolicy.amount\n\n    \ndecimal\n\n    \nno\n\n    \nPenalty amount in rate's currency specified in \nRate.currency\n field\n\n\n\n\n\n    \nCancellationPolicy.fromDate\n\n    \nstring\n\n    \nno\n\n    \nOffset date time string in \nYYYY-MM-DDThh:mmTZD\n (ISO 8601) format indicating from when the polciy applied.\n\n\n\n\n\n    \nRate.remarks\n\n    \nstring\n\n    \nyes\n\n    \nAny comments, warnings or policies applied by the hotel displayed here if available.\n\n\n\n\n\n    \nRate.commission\n\n    \ndecimal\n\n    \nyes\n\n    \nAmount of comission specified for commissionable rates.\n\n\n\n\n\n    \nRate.hotelRate\n\n    \ndecimal\n\n    \nyes\n\n    \n\n        Total amount of rate in hotelier's currency specified in \nhotelCurrency\n field which will be payed to the hotelier by the occupants at the time of arrival.\n        This field should not be \nnull\n when the \nRate.rateType\n is \nDIRECT\n\n    \n\n\n\n\n\n    \nRate.hotelCurrency\n\n    \nstring\n\n    \nyes\n\n    \nThree letter currency code (ISO-4217) of the total amount for the hotel rate specified in \nRate.hotelRate\n field\n\n\n\n\n\n\n\nExample Result Object\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n{\n\n  \nhotel\n:\n \n{\n\n    \nhotelCode\n:\n \nd31d12\n,\n\n    \nhotelName\n:\n \nThe Marmara Taksim\n,\n\n    \ndestinationCode\n:\n \nc36ca9\n,\n\n    \ndestinationName\n:\n \nistanbul\n,\n\n    \ncountryCode\n:\n \nTR\n,\n\n    \nrates\n:\n \n[\n\n      \n{\n\n        \nrateType\n:\n \nNET\n,\n\n        \nrateKey\n:\n \n[Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|Prabrg|[pNRg1w|2|0]]\n,\n\n        \nnonrefundable\n:\n \nfalse\n,\n\n        \nboardType\n:\n \nRO\n,\n\n        \nboardName\n:\n \nRoom Only\n,\n\n        \nrate\n:\n \n555.21\n,\n\n        \ncurrency\n:\n \nEUR\n,\n\n        \nrooms\n:\n \n[\n\n          \n{\n\n            \nnumberOfAdults\n:\n \n2\n,\n\n            \nchildrenAges\n:\n \n[],\n\n            \nroomDescription\n:\n \nDOUBLE CORNER CITY VIEW\n,\n\n            \nsequence\n:\n \n1\n\n          \n}\n\n        \n],\n\n        \ncancellationPolicies\n:\n \n[\n\n          \n{\n\n            \namount\n:\n \n165.24\n,\n\n            \nfromDate\n:\n \n2017-07-19T23:59:00+03:00\n\n          \n}\n\n        \n],\n\n        \nremarks\n:\n \nnull\n,\n\n        \ncommission\n:\n \nnull\n,\n\n        \nhotelCurrency\n:\n \nnull\n,\n\n        \nhotelRate\n:\n \nnull\n\n      \n},\n\n      \n{\n\n        \nrateType\n:\n \nNET\n,\n\n        \nrateKey\n:\n \n[Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|5pyO3Q|[pNRg1w|2|0]]\n,\n\n        \nnonrefundable\n:\n \nfalse\n,\n\n        \nboardType\n:\n \nRO\n,\n\n        \nboardName\n:\n \nRoom Only\n,\n\n        \nrate\n:\n \n631.78\n,\n\n        \ncurrency\n:\n \nEUR\n,\n\n        \nrooms\n:\n \n[\n\n          \n{\n\n            \nnumberOfAdults\n:\n \n2\n,\n\n            \nchildrenAges\n:\n \n[],\n\n            \nroomDescription\n:\n \nDOUBLE CORNER CITY VIEW\n,\n\n            \nsequence\n:\n \n1\n\n          \n}\n\n        \n],\n\n        \ncancellationPolicies\n:\n \n[\n\n          \n{\n\n            \namount\n:\n \n188.03\n,\n\n            \nfromDate\n:\n \n2017-07-19T23:59:00+03:00\n\n          \n}\n\n        \n],\n\n        \nremarks\n:\n \nnull\n,\n\n        \ncommission\n:\n \nnull\n,\n\n        \nhotelCurrency\n:\n \nnull\n,\n\n        \nhotelRate\n:\n \nnull\n\n      \n}\n\n    \n]\n\n  \n}\n\n\n}", 
            "title": "Check Hotel"
        }, 
        {
            "location": "/api_docs/check_hotel/#introduction", 
            "text": "Check single hotel availability for any given date range and pax information. This method is intented to provide cacheless, most recent availability data for requested hotel. If the hotel has no any single rate for the query submitted, client receives not available error.", 
            "title": "Introduction"
        }, 
        {
            "location": "/api_docs/check_hotel/#definition", 
            "text": "1 POST https://api.ratemarkt.com/v1/checkhotel", 
            "title": "Definition"
        }, 
        {
            "location": "/api_docs/check_hotel/#query-object", 
            "text": "Argument \n             Type \n             Required \n             Description \n         \n     \n     \n         \n             hotelCode \n             string \n             yes \n             Unique hotel identifier \n         \n         \n     checkin \n     string \n     yes \n     YYYY-MM-DD  (ISO 8601) formatted date string. Eg. 2017-11-12   \n     checkout \n     string \n     yes \n     YYYY-MM-DD  (ISO 8601) formatted date string. Eg. 2017-11-15   \n     paxes \n     list[Pax] \n     yes \n     List of pax objects. Each pax object corresponds to a room. Multi room queries need more than one pax object.   \n     Pax.numberOfAdults \n     integer \n     yes \n     Number of adults requested.   \n     Pax.childrenAges \n     list[integer] \n     yes \n     List of children requested specified by their ages.   \n     currency \n     string \n     yes \n     Three letter currency code (ISO-4217). **Please read the regarding note below.**   \n     nationality \n     string \n     yes \n     Two letter country code (ISO 3166-1 alpha-2) for occupants passport nationality.     Please note the use of  currency  parameter  Note that the  currency  parameter  DOES NOT GUARANTEE  the currency of rates returned by this resource.\nIt only should be used to tell Ratemarkt to avoid unnecessary currency changes in the backyard and do its best to return in desired currency if available.  Please check each rate's individual currency in any case before proceeding to next steps.", 
            "title": "Query Object"
        }, 
        {
            "location": "/api_docs/check_hotel/#example-query-object", 
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13 { \n   hotelCode :   d31d12 , \n   checkin :   2017-07-22 , \n   checkout :   2017-07-25 , \n   paxes :   [ \n     { \n       numberOfAdults :   2 , \n       childrenAges :   [] \n     } \n   ], \n   currency :   USD , \n   nationality :   US  }", 
            "title": "Example Query Object"
        }, 
        {
            "location": "/api_docs/check_hotel/#result-object", 
            "text": "Result Object Hint  While  Check Hotels  resource returns a list of  Hotel  objects, this resource also returns exactly the same  Hotel  object as a single item.  So you may want to reuse the same json parser logic in your client application.   \n     \n         \n         \n         \n         \n     \n     \n         \n             Argument \n             Type \n             Nullable \n             Description \n         \n     \n     \n         \n     Hotel.hotelCode \n     string \n     no \n     Unique hotel identifier   \n     Hotel.hotelName \n     string \n     no \n     Hotel name   \n     Hotel.destinationCode \n     string \n     no \n     Unique destination identifier   \n     Hotel.destinationName \n     string \n     no \n     Destination name   \n     Hotel.countryCode \n     string \n     no \n     Two letter country code (ISO 3166-1 alpha-2)   \n     Hotel.rates \n     list[Rate] \n     no \n     List of  Rate  objects. Each rate corresponds to a hotel room combined with a service level which means a bookable product with a price for each hotel.   \n     Rate.rateType \n     string \n     no \n     Type of the rate. There are three types:\n         \n             NET : This type of rate can be selled by applying any margin on top of it. \n             SALE : Commissionable rate which should be selled exactly at the given rate. \n             DIRECT : Commissionable rate which the amount is payed directly to the hotelier by the occupants at the time of arrival.  \n         \n        For commissionable rates, the amount of commission for the merchant is denoted at  Rate.commission  field.\n       \n     Rate.rateKey \n     string \n     no \n     Unique identifier for each rate.   \n     Rate.nonrefundable \n     boolean \n     yes \n     \n        Flag denoting whether the rate is refundable or not. It means that if any nonrefundable rate is booked, cancellation of that booking won't be refunded in any cases. \n        Value can be  null  in some cases so please refer to the corresponding  Rate.cancellation_policies  field for that rate for money refunding policy at the time of cancellation.\n       \n     Rate.boardType \n     string \n     no \n     Board type code of the rate. Possible value are \n         \n             RO :  Room Only \n             BB :  Bed And Breakfast \n             HB :  Half Board \n             FB :  Full Board \n             AI :  All Inclusive \n         \n       \n     Rate.boardName \n     string \n     no \n     Board type name of the rate. See  Rate.boardType  field for possible values.   \n     Rate.rate \n     decimal \n     no \n     Total amount of the rate at given currency specified in  Rate.currency  field.   \n     Rate.currency \n     string \n     no \n     Three letter currency code (ISO-4217) of the total amount for the rate specified in  Rate.rate  field   \n     Rate.rooms \n     list[Room] \n     no \n     \n        List of  Room  objects.\n       \n     Room.numberOfAdults \n     integer \n     no \n     Maximum number of adults can fit into this room   \n     Room.childrenAges \n     list[integer] \n     no \n     Children with specified ages can be accepted for this room.   \n     Room.roomDescription \n     string \n     no \n     Any arbitrary description for this room which the hotelier specified.   \n     Room.sequence \n     integer \n     no \n     Room sequence identifier which is useful at the time of booking in order to specify which occupant set will be matched with which room.   \n     Rate.cancellationPolicies \n     list[CancellationPolicy] \n     yes \n     \n        List of  CancellationPolicy  objects. \n        Cancellation policies indicates the amount of penalty charged and deducted from the total refund amount of the booking at the time of cancellation performed after the specified date and time. \n        Please note that, the value can be  null  since not all the suppliers provide this data on  Check Hotels  step. In these cases, you should use  Check Rate  end point accordingly to able to retrieve cancellation policies.\n       \n     CancellationPolicy.amount \n     decimal \n     no \n     Penalty amount in rate's currency specified in  Rate.currency  field   \n     CancellationPolicy.fromDate \n     string \n     no \n     Offset date time string in  YYYY-MM-DDThh:mmTZD  (ISO 8601) format indicating from when the polciy applied.   \n     Rate.remarks \n     string \n     yes \n     Any comments, warnings or policies applied by the hotel displayed here if available.   \n     Rate.commission \n     decimal \n     yes \n     Amount of comission specified for commissionable rates.   \n     Rate.hotelRate \n     decimal \n     yes \n     \n        Total amount of rate in hotelier's currency specified in  hotelCurrency  field which will be payed to the hotelier by the occupants at the time of arrival.\n        This field should not be  null  when the  Rate.rateType  is  DIRECT \n       \n     Rate.hotelCurrency \n     string \n     yes \n     Three letter currency code (ISO-4217) of the total amount for the hotel rate specified in  Rate.hotelRate  field", 
            "title": "Result Object"
        }, 
        {
            "location": "/api_docs/check_hotel/#example-result-object", 
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65 { \n   hotel :   { \n     hotelCode :   d31d12 , \n     hotelName :   The Marmara Taksim , \n     destinationCode :   c36ca9 , \n     destinationName :   istanbul , \n     countryCode :   TR , \n     rates :   [ \n       { \n         rateType :   NET , \n         rateKey :   [Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|Prabrg|[pNRg1w|2|0]] , \n         nonrefundable :   false , \n         boardType :   RO , \n         boardName :   Room Only , \n         rate :   555.21 , \n         currency :   EUR , \n         rooms :   [ \n           { \n             numberOfAdults :   2 , \n             childrenAges :   [], \n             roomDescription :   DOUBLE CORNER CITY VIEW , \n             sequence :   1 \n           } \n         ], \n         cancellationPolicies :   [ \n           { \n             amount :   165.24 , \n             fromDate :   2017-07-19T23:59:00+03:00 \n           } \n         ], \n         remarks :   null , \n         commission :   null , \n         hotelCurrency :   null , \n         hotelRate :   null \n       }, \n       { \n         rateType :   NET , \n         rateKey :   [Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|5pyO3Q|[pNRg1w|2|0]] , \n         nonrefundable :   false , \n         boardType :   RO , \n         boardName :   Room Only , \n         rate :   631.78 , \n         currency :   EUR , \n         rooms :   [ \n           { \n             numberOfAdults :   2 , \n             childrenAges :   [], \n             roomDescription :   DOUBLE CORNER CITY VIEW , \n             sequence :   1 \n           } \n         ], \n         cancellationPolicies :   [ \n           { \n             amount :   188.03 , \n             fromDate :   2017-07-19T23:59:00+03:00 \n           } \n         ], \n         remarks :   null , \n         commission :   null , \n         hotelCurrency :   null , \n         hotelRate :   null \n       } \n     ] \n   }  }", 
            "title": "Example Result Object"
        }, 
        {
            "location": "/api_docs/check_rate/", 
            "text": "Introduction\n\n\nCheck for single rate availability for a given rate key. This method is intended to provide the most recent availability data for any selected rate. You'd better check for a rate at least once just before proceeding to booking step.\n\n\nIf rate has gone at the time of query, client receives not available error.\n\n\nDefinition\n\n\n1\nPOST https://api.ratemarkt.com/v1/checkrate\n\n\n\n\n\n\nQuery Object\n\n\n\n    \n\n        \n\n        \n\n        \n\n        \n\n    \n\n    \n\n        \n\n            \nArgument\n\n            \nType\n\n            \nRequired\n\n            \nDescription\n\n        \n\n    \n\n    \n\n        \n\n            \nrateKey\n\n            \nstring\n\n            \nyes\n\n            \nUnique rate identifier\n\n        \n\n    \n\n\n\n\n\nExample Query Object\n\n\n1\n2\n3\n{\n\n  \nrateKey\n:\n \n[Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|Prabrg|[jVOYrg|2|0]]\n\n\n}\n\n\n\n\n\n\n\nResult Object\n\n\n\n\nResult Object Hint\n\n\nWhile \nCheck Hotel\n resource returns a \nHotel\n object, this resource also returns exactly the same \nHotel\n object except it holds only a single rate object in \nrates\n field.\n\n\nSo you may want to reuse the same json parser logic in your client application.\n\n\n\n\n\n    \n\n        \n\n        \n\n        \n\n        \n\n    \n\n    \n\n        \n\n            \nArgument\n\n            \nType\n\n            \nNullable\n\n            \nDescription\n\n        \n\n    \n\n    \n\n        \n\n    \nHotel.hotelCode\n\n    \nstring\n\n    \nno\n\n    \nUnique hotel identifier\n\n\n\n\n\n    \nHotel.hotelName\n\n    \nstring\n\n    \nno\n\n    \nHotel name\n\n\n\n\n\n    \nHotel.destinationCode\n\n    \nstring\n\n    \nno\n\n    \nUnique destination identifier\n\n\n\n\n\n    \nHotel.destinationName\n\n    \nstring\n\n    \nno\n\n    \nDestination name\n\n\n\n\n\n    \nHotel.countryCode\n\n    \nstring\n\n    \nno\n\n    \nTwo letter country code (ISO 3166-1 alpha-2)\n\n\n\n\n\n    \nHotel.rates\n\n    \nlist[Rate]\n\n    \nno\n\n    \nList of \nRate\n objects. Each rate corresponds to a hotel room combined with a service level which means a bookable product with a price for each hotel.\n\n\n\n\n\n    \nRate.rateType\n\n    \nstring\n\n    \nno\n\n    \nType of the rate. There are three types:\n        \n\n            \nNET\n: This type of rate can be selled by applying any margin on top of it.\n\n            \nSALE\n: Commissionable rate which should be selled exactly at the given rate.\n\n            \nDIRECT\n: Commissionable rate which the amount is payed directly to the hotelier by the occupants at the time of arrival. \n\n        \n\n        For commissionable rates, the amount of commission for the merchant is denoted at \nRate.commission\n field.\n    \n\n\n\n\n\n    \nRate.rateKey\n\n    \nstring\n\n    \nno\n\n    \nUnique identifier for each rate.\n\n\n\n\n\n    \nRate.nonrefundable\n\n    \nboolean\n\n    \nyes\n\n    \n\n        Flag denoting whether the rate is refundable or not. It means that if any nonrefundable rate is booked, cancellation of that booking won't be refunded in any cases.\n\n        Value can be \nnull\n in some cases so please refer to the corresponding \nRate.cancellation_policies\n field for that rate for money refunding policy at the time of cancellation.\n    \n\n\n\n\n\n    \nRate.boardType\n\n    \nstring\n\n    \nno\n\n    \nBoard type code of the rate. Possible value are\n\n        \n\n            \nRO\n: \nRoom Only\n\n            \nBB\n: \nBed And Breakfast\n\n            \nHB\n: \nHalf Board\n\n            \nFB\n: \nFull Board\n\n            \nAI\n: \nAll Inclusive\n\n        \n\n    \n\n\n\n\n\n    \nRate.boardName\n\n    \nstring\n\n    \nno\n\n    \nBoard type name of the rate. See \nRate.boardType\n field for possible values.\n\n\n\n\n\n    \nRate.rate\n\n    \ndecimal\n\n    \nno\n\n    \nTotal amount of the rate at given currency specified in \nRate.currency\n field.\n\n\n\n\n\n    \nRate.currency\n\n    \nstring\n\n    \nno\n\n    \nThree letter currency code (ISO-4217) of the total amount for the rate specified in \nRate.rate\n field\n\n\n\n\n\n    \nRate.rooms\n\n    \nlist[Room]\n\n    \nno\n\n    \n\n        List of \nRoom\n objects.\n    \n\n\n\n\n\n    \nRoom.numberOfAdults\n\n    \ninteger\n\n    \nno\n\n    \nMaximum number of adults can fit into this room\n\n\n\n\n\n    \nRoom.childrenAges\n\n    \nlist[integer]\n\n    \nno\n\n    \nChildren with specified ages can be accepted for this room.\n\n\n\n\n\n    \nRoom.roomDescription\n\n    \nstring\n\n    \nno\n\n    \nAny arbitrary description for this room which the hotelier specified.\n\n\n\n\n\n    \nRoom.sequence\n\n    \ninteger\n\n    \nno\n\n    \nRoom sequence identifier which is useful at the time of booking in order to specify which occupant set will be matched with which room.\n\n\n\n\n\n    \nRate.cancellationPolicies\n\n    \nlist[CancellationPolicy]\n\n    \nyes\n\n    \n\n        List of \nCancellationPolicy\n objects.\n\n        Cancellation policies indicates the amount of penalty charged and deducted from the total refund amount of the booking at the time of cancellation performed after the specified date and time.\n\n        Please note that, the value can be \nnull\n since not all the suppliers provide this data on \nCheck Hotels\n step. In these cases, you should use \nCheck Rate\n end point accordingly to able to retrieve cancellation policies.\n    \n\n\n\n\n\n    \nCancellationPolicy.amount\n\n    \ndecimal\n\n    \nno\n\n    \nPenalty amount in rate's currency specified in \nRate.currency\n field\n\n\n\n\n\n    \nCancellationPolicy.fromDate\n\n    \nstring\n\n    \nno\n\n    \nOffset date time string in \nYYYY-MM-DDThh:mmTZD\n (ISO 8601) format indicating from when the polciy applied.\n\n\n\n\n\n    \nRate.remarks\n\n    \nstring\n\n    \nyes\n\n    \nAny comments, warnings or policies applied by the hotel displayed here if available.\n\n\n\n\n\n    \nRate.commission\n\n    \ndecimal\n\n    \nyes\n\n    \nAmount of comission specified for commissionable rates.\n\n\n\n\n\n    \nRate.hotelRate\n\n    \ndecimal\n\n    \nyes\n\n    \n\n        Total amount of rate in hotelier's currency specified in \nhotelCurrency\n field which will be payed to the hotelier by the occupants at the time of arrival.\n        This field should not be \nnull\n when the \nRate.rateType\n is \nDIRECT\n\n    \n\n\n\n\n\n    \nRate.hotelCurrency\n\n    \nstring\n\n    \nyes\n\n    \nThree letter currency code (ISO-4217) of the total amount for the hotel rate specified in \nRate.hotelRate\n field\n\n\n\n\n\n\n\nExample Result Object\n\n\n\n\nHolding Single Rate \n\n\nNote that the hotel object contains only a single rate object which is queried by the given rate key.\n\n\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n{\n\n  \nhotel\n:\n \n{\n\n    \nhotelCode\n:\n \nd31d12\n,\n\n    \nhotelName\n:\n \nThe Marmara Taksim\n,\n\n    \ndestinationCode\n:\n \nc36ca9\n,\n\n    \ndestinationName\n:\n \nistanbul\n,\n\n    \ncountryCode\n:\n \nTR\n,\n\n    \nrates\n:\n \n[\n\n      \n{\n\n        \nrateType\n:\n \nNET\n,\n\n        \nrateKey\n:\n \n[Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|5pyO3Q|[VaYabg|2|0]]\n,\n\n        \nnonrefundable\n:\n \nfalse\n,\n\n        \nboardType\n:\n \nRO\n,\n\n        \nboardName\n:\n \nRoom Only\n,\n\n        \nrate\n:\n \n928.17\n,\n\n        \ncurrency\n:\n \nEUR\n,\n\n        \nrooms\n:\n \n[\n\n          \n{\n\n            \nnumberOfAdults\n:\n \n2\n,\n\n            \nchildrenAges\n:\n \n[],\n\n            \nroomDescription\n:\n \nDOUBLE CLUB SEA VIEW\n,\n\n            \nsequence\n:\n \n1\n\n          \n}\n\n        \n],\n\n        \ncancellationPolicies\n:\n \n[\n\n          \n{\n\n            \namount\n:\n \n276.24\n,\n\n            \nfromDate\n:\n \n2017-07-19T23:59:00+03:00\n\n          \n}\n\n        \n],\n\n        \nremarks\n:\n \nCONTRACT VALID FOR JUNIOR ROOM TYPES .  Check-in hour 15:00 - .\n,\n\n        \ncommission\n:\n \nnull\n,\n\n        \nhotelCurrency\n:\n \nnull\n,\n\n        \nhotelRate\n:\n \nnull\n\n      \n}\n\n    \n]\n\n  \n}\n\n\n}", 
            "title": "Check Rate"
        }, 
        {
            "location": "/api_docs/check_rate/#introduction", 
            "text": "Check for single rate availability for a given rate key. This method is intended to provide the most recent availability data for any selected rate. You'd better check for a rate at least once just before proceeding to booking step.  If rate has gone at the time of query, client receives not available error.", 
            "title": "Introduction"
        }, 
        {
            "location": "/api_docs/check_rate/#definition", 
            "text": "1 POST https://api.ratemarkt.com/v1/checkrate", 
            "title": "Definition"
        }, 
        {
            "location": "/api_docs/check_rate/#query-object", 
            "text": "Argument \n             Type \n             Required \n             Description \n         \n     \n     \n         \n             rateKey \n             string \n             yes \n             Unique rate identifier", 
            "title": "Query Object"
        }, 
        {
            "location": "/api_docs/check_rate/#example-query-object", 
            "text": "1\n2\n3 { \n   rateKey :   [Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|Prabrg|[jVOYrg|2|0]]  }", 
            "title": "Example Query Object"
        }, 
        {
            "location": "/api_docs/check_rate/#result-object", 
            "text": "Result Object Hint  While  Check Hotel  resource returns a  Hotel  object, this resource also returns exactly the same  Hotel  object except it holds only a single rate object in  rates  field.  So you may want to reuse the same json parser logic in your client application.   \n     \n         \n         \n         \n         \n     \n     \n         \n             Argument \n             Type \n             Nullable \n             Description \n         \n     \n     \n         \n     Hotel.hotelCode \n     string \n     no \n     Unique hotel identifier   \n     Hotel.hotelName \n     string \n     no \n     Hotel name   \n     Hotel.destinationCode \n     string \n     no \n     Unique destination identifier   \n     Hotel.destinationName \n     string \n     no \n     Destination name   \n     Hotel.countryCode \n     string \n     no \n     Two letter country code (ISO 3166-1 alpha-2)   \n     Hotel.rates \n     list[Rate] \n     no \n     List of  Rate  objects. Each rate corresponds to a hotel room combined with a service level which means a bookable product with a price for each hotel.   \n     Rate.rateType \n     string \n     no \n     Type of the rate. There are three types:\n         \n             NET : This type of rate can be selled by applying any margin on top of it. \n             SALE : Commissionable rate which should be selled exactly at the given rate. \n             DIRECT : Commissionable rate which the amount is payed directly to the hotelier by the occupants at the time of arrival.  \n         \n        For commissionable rates, the amount of commission for the merchant is denoted at  Rate.commission  field.\n       \n     Rate.rateKey \n     string \n     no \n     Unique identifier for each rate.   \n     Rate.nonrefundable \n     boolean \n     yes \n     \n        Flag denoting whether the rate is refundable or not. It means that if any nonrefundable rate is booked, cancellation of that booking won't be refunded in any cases. \n        Value can be  null  in some cases so please refer to the corresponding  Rate.cancellation_policies  field for that rate for money refunding policy at the time of cancellation.\n       \n     Rate.boardType \n     string \n     no \n     Board type code of the rate. Possible value are \n         \n             RO :  Room Only \n             BB :  Bed And Breakfast \n             HB :  Half Board \n             FB :  Full Board \n             AI :  All Inclusive \n         \n       \n     Rate.boardName \n     string \n     no \n     Board type name of the rate. See  Rate.boardType  field for possible values.   \n     Rate.rate \n     decimal \n     no \n     Total amount of the rate at given currency specified in  Rate.currency  field.   \n     Rate.currency \n     string \n     no \n     Three letter currency code (ISO-4217) of the total amount for the rate specified in  Rate.rate  field   \n     Rate.rooms \n     list[Room] \n     no \n     \n        List of  Room  objects.\n       \n     Room.numberOfAdults \n     integer \n     no \n     Maximum number of adults can fit into this room   \n     Room.childrenAges \n     list[integer] \n     no \n     Children with specified ages can be accepted for this room.   \n     Room.roomDescription \n     string \n     no \n     Any arbitrary description for this room which the hotelier specified.   \n     Room.sequence \n     integer \n     no \n     Room sequence identifier which is useful at the time of booking in order to specify which occupant set will be matched with which room.   \n     Rate.cancellationPolicies \n     list[CancellationPolicy] \n     yes \n     \n        List of  CancellationPolicy  objects. \n        Cancellation policies indicates the amount of penalty charged and deducted from the total refund amount of the booking at the time of cancellation performed after the specified date and time. \n        Please note that, the value can be  null  since not all the suppliers provide this data on  Check Hotels  step. In these cases, you should use  Check Rate  end point accordingly to able to retrieve cancellation policies.\n       \n     CancellationPolicy.amount \n     decimal \n     no \n     Penalty amount in rate's currency specified in  Rate.currency  field   \n     CancellationPolicy.fromDate \n     string \n     no \n     Offset date time string in  YYYY-MM-DDThh:mmTZD  (ISO 8601) format indicating from when the polciy applied.   \n     Rate.remarks \n     string \n     yes \n     Any comments, warnings or policies applied by the hotel displayed here if available.   \n     Rate.commission \n     decimal \n     yes \n     Amount of comission specified for commissionable rates.   \n     Rate.hotelRate \n     decimal \n     yes \n     \n        Total amount of rate in hotelier's currency specified in  hotelCurrency  field which will be payed to the hotelier by the occupants at the time of arrival.\n        This field should not be  null  when the  Rate.rateType  is  DIRECT \n       \n     Rate.hotelCurrency \n     string \n     yes \n     Three letter currency code (ISO-4217) of the total amount for the hotel rate specified in  Rate.hotelRate  field", 
            "title": "Result Object"
        }, 
        {
            "location": "/api_docs/check_rate/#example-result-object", 
            "text": "Holding Single Rate   Note that the hotel object contains only a single rate object which is queried by the given rate key.    1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38 { \n   hotel :   { \n     hotelCode :   d31d12 , \n     hotelName :   The Marmara Taksim , \n     destinationCode :   c36ca9 , \n     destinationName :   istanbul , \n     countryCode :   TR , \n     rates :   [ \n       { \n         rateType :   NET , \n         rateKey :   [Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|5pyO3Q|[VaYabg|2|0]] , \n         nonrefundable :   false , \n         boardType :   RO , \n         boardName :   Room Only , \n         rate :   928.17 , \n         currency :   EUR , \n         rooms :   [ \n           { \n             numberOfAdults :   2 , \n             childrenAges :   [], \n             roomDescription :   DOUBLE CLUB SEA VIEW , \n             sequence :   1 \n           } \n         ], \n         cancellationPolicies :   [ \n           { \n             amount :   276.24 , \n             fromDate :   2017-07-19T23:59:00+03:00 \n           } \n         ], \n         remarks :   CONTRACT VALID FOR JUNIOR ROOM TYPES .  Check-in hour 15:00 - . , \n         commission :   null , \n         hotelCurrency :   null , \n         hotelRate :   null \n       } \n     ] \n   }  }", 
            "title": "Example Result Object"
        }, 
        {
            "location": "/api_docs/book_rate/", 
            "text": "Introduction\n\n\nPerform booking by providing occupancy and payment information for any selected rate specified by the rate key.\n\n\nDefinition\n\n\n1\nPOST https://api.ratemarkt.com/v1/bookrate\n\n\n\n\n\n\nQuery Object\n\n\n\n    \n\n        \n\n        \n\n        \n\n        \n\n    \n\n    \n\n        \n\n            \nArgument\n\n            \nType\n\n            \nRequired\n\n            \nDescription\n\n        \n\n    \n\n    \n\n        \n\n            \nclientRef\n\n            \nstring\n\n            \nyes\n\n            \nUnique transaction identifier defined by client.\nIt is required for avoiding dupe bookings or querying missing bookings\n\n        \n\n        \n\n            \nholder\n\n            \nobject[Holder]\n\n            \nyes\n\n            \nHolder information who places the booking\n\n        \n\n        \n\n            \nHolder.firstName\n\n            \nstring\n\n            \nyes\n\n            \nHolder's first name\n\n        \n\n        \n\n            \nHolder.lastName\n\n            \nstring\n\n            \nyes\n\n            \nHolder's last name\n\n        \n\n        \n\n            \nHolder.email\n\n            \nstring\n\n            \nno\n\n            \nHolder's email address\n\n        \n\n        \n\n            \nHolder.phone\n\n            \nstring\n\n            \nno\n\n            \nHolder's phone number\n\n        \n\n        \n\n            \noccupancies\n\n            \nlist[Occupancy]\n\n            \nyes\n\n            \nInformation about the occupants those will accomodate at the booked rooms.\n\n        \n\n        \n\n            \nOccupancy.occupants\n\n            \nlist[Occupant]\n\n            \nyes\n\n            \n\n                List of \nOccupant\n objects.\n\n                The number of occupants can not be more the number of pax information of the matching room object.\n                Each occupant should be declared by their name and age information.\n            \n\n        \n\n        \n\n            \nOccupant.firstName\n\n            \nstring\n\n            \nyes\n\n            \nOccupant's first name\n\n        \n\n        \n\n            \nOccupant.lastName\n\n            \nstring\n\n            \nyes\n\n            \nOccupant's last name\n\n        \n\n        \n\n            \nOccupant.age\n\n            \ninteger\n\n            \nyes\n\n            \nOccupant's age\n\n        \n\n        \n\n            \nOccupant.occupantType\n\n            \nstring\n\n            \nyes\n\n            \n\n                Type of occupant. \n\n                It can either be the value of \nADULT\n or \nCHILD\n.\n            \n\n        \n\n        \n\n            \nOccupancy.room\n\n            \nobject[Room]\n\n            \nyes\n\n            \nRoom object containing the only value of its sequence number\n\n        \n\n        \n\n            \nRoom.sequence\n\n            \ninteger\n\n            \nyes\n\n            \nRoom's sequence number. It is required for matching occupancy information with a room\n\n        \n\n        \n\n            \ncreditCard\n\n            \nobject[CreditCard]\n\n            \nno\n\n            \nCredit card information used for either for \nDIRECT\n type rates or online payment required rates.\n\n        \n\n        \n\n            \nCreditCard.firstName\n\n            \nstring\n\n            \nyes\n\n            \nCard holder's first name\n\n        \n\n        \n\n            \nCreditCard.lastName\n\n            \nstring\n\n            \nyes\n\n            \nCard holder's last name\n\n        \n\n        \n\n            \nCreditCard.number\n\n            \nstring\n\n            \nyes\n\n            \n16 digit credit card number\n\n        \n\n        \n\n            \nCreditCard.year\n\n            \nstring\n\n            \nyes\n\n            \n4 digit year identifier. E.g 2025\n\n        \n\n        \n\n            \nCreditCard.month\n\n            \nstring\n\n            \nyes\n\n            \n2 digit year identifier. E.g 12\n\n        \n\n        \n\n            \nCreditCard.cvv\n\n            \nstring\n\n            \nyes\n\n            \nCredit card verification number\n\n        \n\n        \n\n            \nspecialRequest\n\n            \nstring\n\n            \nno\n\n            \nSpecial requests asked by the holder\n\n        \n\n    \n\n\n\n\n\nExample Query Object\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n{\n\n  \nrateKey\n:\n \n[Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|Prabrg|[jVOYrg|2|0]]\n,\n\n  \nclientRef\n:\n \nqwerty123456\n,\n\n  \nholder\n:\n \n{\n\n    \nemail\n:\n \njohndoe@example.org\n,\n\n    \nfirstName\n:\n \njohn\n,\n\n    \nlastName\n:\n \ndoe\n,\n\n    \nphone\n:\n \n+415050000000\n\n  \n},\n\n  \ncreditCard\n:\n \n{\n\n    \nfirstName\n:\n \nJohn\n,\n\n    \nlastName\n:\n \nDoe\n,\n\n    \nnumber\n:\n \n4111111111111111\n,\n\n    \nyear\n:\n \n2022\n,\n\n    \nmonth\n:\n \n12\n,\n\n    \ncvv\n:\n \n000\n\n  \n},\n\n  \noccupancy\n:\n \n[\n\n    \n{\n\n      \nroom\n:\n \n{\n\n        \nsequence\n:\n \n1\n\n      \n},\n\n      \noccupants\n:\n \n[\n\n        \n{\n\n          \nfirstName\n:\n \njohn\n,\n\n          \nlastName\n:\n \ndoe\n,\n\n          \noccupantType\n:\n \nADULT\n,\n\n          \nage\n:\n \n35\n\n        \n},\n\n        \n{\n\n          \nfirstName\n:\n \nalice\n,\n\n          \nlastName\n:\n \nwonder\n,\n\n          \noccupantType\n:\n \nADULT\n,\n\n          \nage\n:\n \n33\n\n        \n}\n\n      \n]\n\n    \n}\n\n  \n]\n\n\n}\n\n\n\n\n\n\n\nResult Object\n\n\n\n    \n\n        \n\n        \n\n        \n\n        \n\n    \n\n    \n\n        \n\n            \nArgument\n\n            \nType\n\n            \nNullable\n\n            \nDescription\n\n        \n\n    \n\n    \n\n        \n\n    \nResult.booking\n\n    \nobject[Booking]\n\n    \nno\n\n    \nBooking object\n\n\n\n\n\n    \nBooking.status\n\n    \nstring\n\n    \nno\n\n    \n\n        Flag indicating the current status of the booking. Available values are:\n        \n\n            \nCONFIRMED\n: Booking confirmed and payment processed successfully.\n\n            \nFAILED\n: Booking failed because of an error.\n\n            \nCANCELED\n: Booking cancelled successfully.\n\n        \n\n    \n\n\n\n\n\n    \nBooking.bookingRef\n\n    \nstring\n\n    \nno\n\n    \nUnique booking identifier\n\n\n\n\n\n    \nBooking.clientRef\n\n    \nstring\n\n    \nno\n\n    \nUnique booking identifier issued by the client\n\n\n\n\n\n    \nBooking.rateKey\n\n    \nstring\n\n    \nno\n\n    \nUnique rate identifier\n\n\n\n\n\n    \nBooking.hotelCode\n\n    \nstring\n\n    \nno\n\n    \nUnique hotel identifier\n\n\n\n\n\n    \nBooking.hotelName\n\n    \nstring\n\n    \nno\n\n    \nHotel name\n\n\n\n\n\n    \nBooking.destinationCode\n\n    \nstring\n\n    \nno\n\n    \nUnique destination identifier\n\n\n\n\n\n    \nBooking.destinationName\n\n    \nstring\n\n    \nno\n\n    \nDestination name\n\n\n\n\n\n    \nBooking.countryCode\n\n    \nstring\n\n    \nno\n\n    \nTwo letter country code (ISO 3166-1 alpha-2)\n\n\n\n\n\n    \nBooking.checkin\n\n    \nstring\n\n    \nno\n\n    \nYYYY-MM-DD\n (ISO 8601) formatted date string. Eg. 2017-11-12\n\n\n\n\n\n    \nBooking.checkout\n\n    \nstring\n\n    \nno\n\n    \nYYYY-MM-DD\n (ISO 8601) formatted date string. Eg. 2017-11-12\n\n\n\n\n\n    \nBooking.holder\n\n    \nobject[Holder]\n\n    \nno\n\n    \nHolder object contains information who places the booking\n\n\n\n\n\n    \nHolder.firstName\n\n    \nstring\n\n    \nyes\n\n    \nHolder' s first name\n\n\n\n\n\n    \nHolder.lastName\n\n    \nstring\n\n    \nyes\n\n    \nHolder' s last name\n\n\n\n\n\n    \nHolder.email\n\n    \nstring\n\n    \nno\n\n    \nHolder' s email address\n\n\n\n\n\n    \nHolder.phone\n\n    \nstring\n\n    \nno\n\n    \nHolder' s phone number\n\n\n\n\n\n    \nBooking.occupancies\n\n    \nlist[Occupancy]\n\n    \nno\n\n    \nOccupancy object contains information of individual occupants who will accomodate in the specified room.\n\n\n\n\n\n    \nOccupancy.occupants\n\n    \nlist[Occupant]\n\n    \nno\n\n    \nList of \nOccupant\n objects contains information about personal occupant information.\n\n\n\n\n\n    \nOccupant.occupantType\n\n    \nstring\n\n    \nno\n\n    \nOccupant type. Value can be either \nADULT\n or \nCHILD\n\n\n\n\n\n    \nOccupant.firstName\n\n    \nstring\n\n    \nno\n\n    \nOccupant's first name\n\n\n\n\n\n    \nOccupant.lastName\n\n    \nstring\n\n    \nno\n\n    \nOccupant's last name\n\n\n\n\n\n    \nOccupant.age\n\n    \ninteger\n\n    \nno\n\n    \nOccupant's age\n\n\n\n\n\n    \nroom\n\n    \nobject[Room]\n\n    \nno\n\n    \nRoom object\n\n\n\n\n\n    \nRoom.numberOfAdults\n\n    \ninteger\n\n    \nno\n\n    \nNumber of adults can fit into the room\n\n\n\n\n\n    \nRoom.childrenAges\n\n    \ninteger\n\n    \nno\n\n    \nChildren with specified ages can be accepted for this room.\n\n\n\n\n\n    \nRoom.roomDescription\n\n    \ninteger\n\n    \nno\n\n    \nRoom description describing the type of room.\n\n\n\n\n\n    \nRoom.sequence\n\n    \ninteger\n\n    \nno\n\n    \nIdentifies the selected room for specified occupants.\n\n\n\n\n\n    \nBooking.creationDate\n\n    \ninteger\n\n    \nno\n\n    \nOffset date time string in \nYYYY-MM-DDThh:mmTZD\n (ISO 8601) format indicating when the booking made.\n\n\n\n\n\n    \nBooking.total\n\n    \ndecimal\n\n    \nno\n\n    \nTotal amount of booked rate in specified currency in \nBooking.currency\n field\n\n\n\n\n\n    \nBooking.currency\n\n    \nstring\n\n    \nno\n\n    \nTwo letter country code (ISO 3166-1 alpha-2) of the amount for booked rate.\n\n\n\n\n\n    \nBooking.cancellationCost\n\n    \ndecimal\n\n    \nyes\n\n    \nCharged penalty amount when the booking is cancelled. If no penalty charged, this value should be \n0.00\n\n\n\n\n\n    \nBooking.balance\n\n    \ndecimal\n\n    \nno\n\n    \n\n        if booking cancelled and any penalty applied, this field indicates the final amount after the penalty amount deducted from total amount.\n        If booking is not cancelled this field should be equal to \nBooking.total\n amount.\n    \n\n\n\n\n\n    \nBooking.specialRequest\n\n    \nstring\n\n    \nno\n\n    \nSpecial requests asked by the holder\n\n\n\n\n\n    \nBooking.rateKey\n\n    \nstring\n\n    \nno\n\n    \nUnique identifier of the booked rate. Refer to \nCheck Rate\n documentation for further information.\n\n\n\n\n\n    \nBooking.rateType\n\n    \nstring\n\n    \nno\n\n    \nType of booked rate. Refer to \nCheck Rate\n documentation for further information.\n\n\n\n\n\n    \nBooking.boardType\n\n    \nstring\n\n    \nno\n\n    \nBoard type code of booked rate. Refer to \nCheck Rate\n documentation for further information.\n\n\n\n\n\n    \nBooking.boardName\n\n    \nstring\n\n    \nno\n\n    \nBoard type name of booked rate. Refer to \nCheck Rate\n documentation for further information.\n\n\n\n\n\n    \nBooking.nonrefundable\n\n    \nstring\n\n    \nno\n\n    \nFlag indicating wheter the booking is refundable or not.\nRefer to \nCheck Rate\n documentation for further information.\n\n\n\n\n\n    \nBooking.cancellationPolicies\n\n    \nlist[CancellationPolicy]\n\n    \nno\n\n    \nList of \nCancellationPolicy\n objects.\nRefer to \nCheck Rate\n documentation for further information.\n\n\n\n\n\n    \nBooking.commission\n\n    \ndecimal\n\n    \nyes\n\n    \nAmount of comission specified for commissionable rates.\nRefer to \nCheck Rate\n documentation for further information.\n\n\n\n\n\n    \nBooking.hotelRate\n\n    \ndecimal\n\n    \nyes\n\n    \nTotal amount of booking should be payed at hotel.\nRefer to \nCheck Rate\n documentation for further information.\n\n\n\n\n\n    \nBooking.hotelCurrency\n\n    \nstring\n\n    \nyes\n\n    \nCurrency value for \nBooking.hotelRate\n.\nRefer to \nCheck Rate\n documentation for further information.\n\n\n\n\n\n    \nBooking.remarks\n\n    \nstring\n\n    \nyes\n\n    \nComments from hotelier related to your booking.\nRefer to \nCheck Rate\n documentation for further information.\n\n\n\n\n\n\n\nExample Result Object\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n{\n\n  \nbooking\n:\n \n{\n\n    \nstatus\n:\n \nCONFIRMED\n,\n\n    \nbookingRef\n:\n \n55cda9\n,\n\n    \nclientRef\n:\n \nqwerty123456\n,\n\n    \nhotelCode\n:\n \nd31d12\n,\n\n    \ncheckin\n:\n \n2017-07-22\n,\n\n    \ncheckout\n:\n \n2017-07-25\n,\n\n    \nholder\n:\n \n{\n\n      \nfirstName\n:\n \njohn\n,\n\n      \nlastName\n:\n \ndoe\n,\n\n      \nemail\n:\n \njohndoe@example.org\n,\n\n      \nphone\n:\n \n+415000000\n\n    \n},\n\n    \noccupancies\n:\n \n[\n\n      \n{\n\n        \noccupants\n:\n \n[\n\n          \n{\n\n            \noccupantType\n:\n \nADULT\n,\n\n            \nage\n:\n \nnull\n,\n\n            \nfirstName\n:\n \njohn\n,\n\n            \nlastName\n:\n \ndoe\n\n          \n},\n\n          \n{\n\n            \noccupantType\n:\n \nADULT\n,\n\n            \nage\n:\n \nnull\n,\n\n            \nfirstName\n:\n \nalice\n,\n\n            \nlastName\n:\n \nwonder\n\n          \n}\n\n        \n],\n\n        \nroom\n:\n \n{\n\n          \nnumberOfAdults\n:\n \n2\n,\n\n          \nchildrenAges\n:\n \n[],\n\n          \nroomDescription\n:\n \nDOUBLE DELUXE CITY VIEW\n,\n\n          \nsequence\n:\n \n1\n\n        \n}\n\n      \n}\n\n    \n],\n\n    \ncreationDate\n:\n \n2017-05-17T12:00:00Z\n,\n\n    \nrateType\n:\n \nNET\n,\n\n    \nboardType\n:\n \nRO\n,\n\n    \nboardName\n:\n \nRoom Only\n,\n\n    \ncancellationPolicies\n:\n \n[\n\n      \n{\n\n        \namount\n:\n \n174.13\n,\n\n        \nfromDate\n:\n \n2017-07-19T23:59:00+03:00\n\n      \n}\n\n    \n],\n\n    \ntotal\n:\n \n585.08\n,\n\n    \ncurrency\n:\n \nEUR\n,\n\n    \nbalance\n:\n \n522.39\n,\n\n    \nrateKey\n:\n \n[Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|Prabrg|[jVOYrg|2|0]]\n,\n\n    \nhotelName\n:\n \nThe Marmara Taksim\n,\n\n    \ndestinationCode\n:\n \nc36ca9\n,\n\n    \ndestinationName\n:\n \nistanbul\n,\n\n    \ncountryCode\n:\n \nTR\n,\n\n    \nnonrefundable\n:\n \nfalse\n,\n\n    \ncancellationCost\n:\n \n0\n,\n\n    \ncommission\n:\n \nnull\n,\n\n    \nhotelRate\n:\n \nnull\n,\n\n    \nhotelCurrency\n:\n \nnull\n,\n\n    \nspecialRequest\n:\n \nnull\n,\n\n    \nremarks\n:\n \nCheck-in hour 15:00\n\n  \n}\n\n\n}", 
            "title": "Book Rate"
        }, 
        {
            "location": "/api_docs/book_rate/#introduction", 
            "text": "Perform booking by providing occupancy and payment information for any selected rate specified by the rate key.", 
            "title": "Introduction"
        }, 
        {
            "location": "/api_docs/book_rate/#definition", 
            "text": "1 POST https://api.ratemarkt.com/v1/bookrate", 
            "title": "Definition"
        }, 
        {
            "location": "/api_docs/book_rate/#query-object", 
            "text": "Argument \n             Type \n             Required \n             Description \n         \n     \n     \n         \n             clientRef \n             string \n             yes \n             Unique transaction identifier defined by client. It is required for avoiding dupe bookings or querying missing bookings \n         \n         \n             holder \n             object[Holder] \n             yes \n             Holder information who places the booking \n         \n         \n             Holder.firstName \n             string \n             yes \n             Holder's first name \n         \n         \n             Holder.lastName \n             string \n             yes \n             Holder's last name \n         \n         \n             Holder.email \n             string \n             no \n             Holder's email address \n         \n         \n             Holder.phone \n             string \n             no \n             Holder's phone number \n         \n         \n             occupancies \n             list[Occupancy] \n             yes \n             Information about the occupants those will accomodate at the booked rooms. \n         \n         \n             Occupancy.occupants \n             list[Occupant] \n             yes \n             \n                List of  Occupant  objects. \n                The number of occupants can not be more the number of pax information of the matching room object.\n                Each occupant should be declared by their name and age information.\n             \n         \n         \n             Occupant.firstName \n             string \n             yes \n             Occupant's first name \n         \n         \n             Occupant.lastName \n             string \n             yes \n             Occupant's last name \n         \n         \n             Occupant.age \n             integer \n             yes \n             Occupant's age \n         \n         \n             Occupant.occupantType \n             string \n             yes \n             \n                Type of occupant.  \n                It can either be the value of  ADULT  or  CHILD .\n             \n         \n         \n             Occupancy.room \n             object[Room] \n             yes \n             Room object containing the only value of its sequence number \n         \n         \n             Room.sequence \n             integer \n             yes \n             Room's sequence number. It is required for matching occupancy information with a room \n         \n         \n             creditCard \n             object[CreditCard] \n             no \n             Credit card information used for either for  DIRECT  type rates or online payment required rates. \n         \n         \n             CreditCard.firstName \n             string \n             yes \n             Card holder's first name \n         \n         \n             CreditCard.lastName \n             string \n             yes \n             Card holder's last name \n         \n         \n             CreditCard.number \n             string \n             yes \n             16 digit credit card number \n         \n         \n             CreditCard.year \n             string \n             yes \n             4 digit year identifier. E.g 2025 \n         \n         \n             CreditCard.month \n             string \n             yes \n             2 digit year identifier. E.g 12 \n         \n         \n             CreditCard.cvv \n             string \n             yes \n             Credit card verification number \n         \n         \n             specialRequest \n             string \n             no \n             Special requests asked by the holder", 
            "title": "Query Object"
        }, 
        {
            "location": "/api_docs/book_rate/#example-query-object", 
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39 { \n   rateKey :   [Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|Prabrg|[jVOYrg|2|0]] , \n   clientRef :   qwerty123456 , \n   holder :   { \n     email :   johndoe@example.org , \n     firstName :   john , \n     lastName :   doe , \n     phone :   +415050000000 \n   }, \n   creditCard :   { \n     firstName :   John , \n     lastName :   Doe , \n     number :   4111111111111111 , \n     year :   2022 , \n     month :   12 , \n     cvv :   000 \n   }, \n   occupancy :   [ \n     { \n       room :   { \n         sequence :   1 \n       }, \n       occupants :   [ \n         { \n           firstName :   john , \n           lastName :   doe , \n           occupantType :   ADULT , \n           age :   35 \n         }, \n         { \n           firstName :   alice , \n           lastName :   wonder , \n           occupantType :   ADULT , \n           age :   33 \n         } \n       ] \n     } \n   ]  }", 
            "title": "Example Query Object"
        }, 
        {
            "location": "/api_docs/book_rate/#result-object", 
            "text": "Argument \n             Type \n             Nullable \n             Description \n         \n     \n     \n         \n     Result.booking \n     object[Booking] \n     no \n     Booking object   \n     Booking.status \n     string \n     no \n     \n        Flag indicating the current status of the booking. Available values are:\n         \n             CONFIRMED : Booking confirmed and payment processed successfully. \n             FAILED : Booking failed because of an error. \n             CANCELED : Booking cancelled successfully. \n         \n       \n     Booking.bookingRef \n     string \n     no \n     Unique booking identifier   \n     Booking.clientRef \n     string \n     no \n     Unique booking identifier issued by the client   \n     Booking.rateKey \n     string \n     no \n     Unique rate identifier   \n     Booking.hotelCode \n     string \n     no \n     Unique hotel identifier   \n     Booking.hotelName \n     string \n     no \n     Hotel name   \n     Booking.destinationCode \n     string \n     no \n     Unique destination identifier   \n     Booking.destinationName \n     string \n     no \n     Destination name   \n     Booking.countryCode \n     string \n     no \n     Two letter country code (ISO 3166-1 alpha-2)   \n     Booking.checkin \n     string \n     no \n     YYYY-MM-DD  (ISO 8601) formatted date string. Eg. 2017-11-12   \n     Booking.checkout \n     string \n     no \n     YYYY-MM-DD  (ISO 8601) formatted date string. Eg. 2017-11-12   \n     Booking.holder \n     object[Holder] \n     no \n     Holder object contains information who places the booking   \n     Holder.firstName \n     string \n     yes \n     Holder' s first name   \n     Holder.lastName \n     string \n     yes \n     Holder' s last name   \n     Holder.email \n     string \n     no \n     Holder' s email address   \n     Holder.phone \n     string \n     no \n     Holder' s phone number   \n     Booking.occupancies \n     list[Occupancy] \n     no \n     Occupancy object contains information of individual occupants who will accomodate in the specified room.   \n     Occupancy.occupants \n     list[Occupant] \n     no \n     List of  Occupant  objects contains information about personal occupant information.   \n     Occupant.occupantType \n     string \n     no \n     Occupant type. Value can be either  ADULT  or  CHILD   \n     Occupant.firstName \n     string \n     no \n     Occupant's first name   \n     Occupant.lastName \n     string \n     no \n     Occupant's last name   \n     Occupant.age \n     integer \n     no \n     Occupant's age   \n     room \n     object[Room] \n     no \n     Room object   \n     Room.numberOfAdults \n     integer \n     no \n     Number of adults can fit into the room   \n     Room.childrenAges \n     integer \n     no \n     Children with specified ages can be accepted for this room.   \n     Room.roomDescription \n     integer \n     no \n     Room description describing the type of room.   \n     Room.sequence \n     integer \n     no \n     Identifies the selected room for specified occupants.   \n     Booking.creationDate \n     integer \n     no \n     Offset date time string in  YYYY-MM-DDThh:mmTZD  (ISO 8601) format indicating when the booking made.   \n     Booking.total \n     decimal \n     no \n     Total amount of booked rate in specified currency in  Booking.currency  field   \n     Booking.currency \n     string \n     no \n     Two letter country code (ISO 3166-1 alpha-2) of the amount for booked rate.   \n     Booking.cancellationCost \n     decimal \n     yes \n     Charged penalty amount when the booking is cancelled. If no penalty charged, this value should be  0.00   \n     Booking.balance \n     decimal \n     no \n     \n        if booking cancelled and any penalty applied, this field indicates the final amount after the penalty amount deducted from total amount.\n        If booking is not cancelled this field should be equal to  Booking.total  amount.\n       \n     Booking.specialRequest \n     string \n     no \n     Special requests asked by the holder   \n     Booking.rateKey \n     string \n     no \n     Unique identifier of the booked rate. Refer to  Check Rate  documentation for further information.   \n     Booking.rateType \n     string \n     no \n     Type of booked rate. Refer to  Check Rate  documentation for further information.   \n     Booking.boardType \n     string \n     no \n     Board type code of booked rate. Refer to  Check Rate  documentation for further information.   \n     Booking.boardName \n     string \n     no \n     Board type name of booked rate. Refer to  Check Rate  documentation for further information.   \n     Booking.nonrefundable \n     string \n     no \n     Flag indicating wheter the booking is refundable or not. Refer to  Check Rate  documentation for further information.   \n     Booking.cancellationPolicies \n     list[CancellationPolicy] \n     no \n     List of  CancellationPolicy  objects. Refer to  Check Rate  documentation for further information.   \n     Booking.commission \n     decimal \n     yes \n     Amount of comission specified for commissionable rates. Refer to  Check Rate  documentation for further information.   \n     Booking.hotelRate \n     decimal \n     yes \n     Total amount of booking should be payed at hotel. Refer to  Check Rate  documentation for further information.   \n     Booking.hotelCurrency \n     string \n     yes \n     Currency value for  Booking.hotelRate . Refer to  Check Rate  documentation for further information.   \n     Booking.remarks \n     string \n     yes \n     Comments from hotelier related to your booking. Refer to  Check Rate  documentation for further information.", 
            "title": "Result Object"
        }, 
        {
            "location": "/api_docs/book_rate/#example-result-object", 
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65 { \n   booking :   { \n     status :   CONFIRMED , \n     bookingRef :   55cda9 , \n     clientRef :   qwerty123456 , \n     hotelCode :   d31d12 , \n     checkin :   2017-07-22 , \n     checkout :   2017-07-25 , \n     holder :   { \n       firstName :   john , \n       lastName :   doe , \n       email :   johndoe@example.org , \n       phone :   +415000000 \n     }, \n     occupancies :   [ \n       { \n         occupants :   [ \n           { \n             occupantType :   ADULT , \n             age :   null , \n             firstName :   john , \n             lastName :   doe \n           }, \n           { \n             occupantType :   ADULT , \n             age :   null , \n             firstName :   alice , \n             lastName :   wonder \n           } \n         ], \n         room :   { \n           numberOfAdults :   2 , \n           childrenAges :   [], \n           roomDescription :   DOUBLE DELUXE CITY VIEW , \n           sequence :   1 \n         } \n       } \n     ], \n     creationDate :   2017-05-17T12:00:00Z , \n     rateType :   NET , \n     boardType :   RO , \n     boardName :   Room Only , \n     cancellationPolicies :   [ \n       { \n         amount :   174.13 , \n         fromDate :   2017-07-19T23:59:00+03:00 \n       } \n     ], \n     total :   585.08 , \n     currency :   EUR , \n     balance :   522.39 , \n     rateKey :   [Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|Prabrg|[jVOYrg|2|0]] , \n     hotelName :   The Marmara Taksim , \n     destinationCode :   c36ca9 , \n     destinationName :   istanbul , \n     countryCode :   TR , \n     nonrefundable :   false , \n     cancellationCost :   0 , \n     commission :   null , \n     hotelRate :   null , \n     hotelCurrency :   null , \n     specialRequest :   null , \n     remarks :   Check-in hour 15:00 \n   }  }", 
            "title": "Example Result Object"
        }, 
        {
            "location": "/api_docs/check_booking/", 
            "text": "Introduction\n\n\nCheck the latest booking status at Ratemark's records by using either booking reference or client reference.\nYou might want to use this resource to gather all the information about your booking whenever desired.\n\n\nDefinition\n\n\n1\nPOST https://api.ratemarkt.com/v1/checkbooking\n\n\n\n\n\n\nQuery Object\n\n\n\n    \n\n        \n\n        \n\n        \n\n        \n\n    \n\n    \n\n        \n\n            \nArgument\n\n            \nType\n\n            \nRequired\n\n            \nDescription\n\n        \n\n    \n\n    \n\n        \n\n            \nbookingRef\n\n            \nstring\n\n            \noptional*\n\n            \nUnique booking identifier\n\n        \n\n        \n\n            \nclientRef\n\n            \nstring\n\n            \noptional*\n\n            \nUnique booking identifier defined by client\n\n        \n\n    \n\n\n\n\n\n\n\nAbout Optional* Arguments\n\n\nYou should provide either \nbookingRef\n or \nclientRef\n argument to get your query work.\n\n\n\n\nExample Query Object\n\n\n1\n2\n3\n{\n\n  \nbookingRef\n:\n \n7616be\n\n\n}\n\n\n\n\n\n\n\nResult Object\n\n\n\n\nResult Object Hint\n\n\nWhile \nBook Rate\n resource returns a \nBooking\n object, this resource also returns exactly the same \nBooking\n object.\n\n\nSo you may want to reuse the same json parser logic in your client application.\n\n\n\n\n\n    \n\n        \n\n        \n\n        \n\n        \n\n    \n\n    \n\n        \n\n            \nArgument\n\n            \nType\n\n            \nNullable\n\n            \nDescription\n\n        \n\n    \n\n    \n\n        \n\n    \nResult.booking\n\n    \nobject[Booking]\n\n    \nno\n\n    \nBooking object\n\n\n\n\n\n    \nBooking.status\n\n    \nstring\n\n    \nno\n\n    \n\n        Flag indicating the current status of the booking. Available values are:\n        \n\n            \nCONFIRMED\n: Booking confirmed and payment processed successfully.\n\n            \nFAILED\n: Booking failed because of an error.\n\n            \nCANCELED\n: Booking cancelled successfully.\n\n        \n\n    \n\n\n\n\n\n    \nBooking.bookingRef\n\n    \nstring\n\n    \nno\n\n    \nUnique booking identifier\n\n\n\n\n\n    \nBooking.clientRef\n\n    \nstring\n\n    \nno\n\n    \nUnique booking identifier issued by the client\n\n\n\n\n\n    \nBooking.rateKey\n\n    \nstring\n\n    \nno\n\n    \nUnique rate identifier\n\n\n\n\n\n    \nBooking.hotelCode\n\n    \nstring\n\n    \nno\n\n    \nUnique hotel identifier\n\n\n\n\n\n    \nBooking.hotelName\n\n    \nstring\n\n    \nno\n\n    \nHotel name\n\n\n\n\n\n    \nBooking.destinationCode\n\n    \nstring\n\n    \nno\n\n    \nUnique destination identifier\n\n\n\n\n\n    \nBooking.destinationName\n\n    \nstring\n\n    \nno\n\n    \nDestination name\n\n\n\n\n\n    \nBooking.countryCode\n\n    \nstring\n\n    \nno\n\n    \nTwo letter country code (ISO 3166-1 alpha-2)\n\n\n\n\n\n    \nBooking.checkin\n\n    \nstring\n\n    \nno\n\n    \nYYYY-MM-DD\n (ISO 8601) formatted date string. Eg. 2017-11-12\n\n\n\n\n\n    \nBooking.checkout\n\n    \nstring\n\n    \nno\n\n    \nYYYY-MM-DD\n (ISO 8601) formatted date string. Eg. 2017-11-12\n\n\n\n\n\n    \nBooking.holder\n\n    \nobject[Holder]\n\n    \nno\n\n    \nHolder object contains information who places the booking\n\n\n\n\n\n    \nHolder.firstName\n\n    \nstring\n\n    \nyes\n\n    \nHolder' s first name\n\n\n\n\n\n    \nHolder.lastName\n\n    \nstring\n\n    \nyes\n\n    \nHolder' s last name\n\n\n\n\n\n    \nHolder.email\n\n    \nstring\n\n    \nno\n\n    \nHolder' s email address\n\n\n\n\n\n    \nHolder.phone\n\n    \nstring\n\n    \nno\n\n    \nHolder' s phone number\n\n\n\n\n\n    \nBooking.occupancies\n\n    \nlist[Occupancy]\n\n    \nno\n\n    \nOccupancy object contains information of individual occupants who will accomodate in the specified room.\n\n\n\n\n\n    \nOccupancy.occupants\n\n    \nlist[Occupant]\n\n    \nno\n\n    \nList of \nOccupant\n objects contains information about personal occupant information.\n\n\n\n\n\n    \nOccupant.occupantType\n\n    \nstring\n\n    \nno\n\n    \nOccupant type. Value can be either \nADULT\n or \nCHILD\n\n\n\n\n\n    \nOccupant.firstName\n\n    \nstring\n\n    \nno\n\n    \nOccupant's first name\n\n\n\n\n\n    \nOccupant.lastName\n\n    \nstring\n\n    \nno\n\n    \nOccupant's last name\n\n\n\n\n\n    \nOccupant.age\n\n    \ninteger\n\n    \nno\n\n    \nOccupant's age\n\n\n\n\n\n    \nroom\n\n    \nobject[Room]\n\n    \nno\n\n    \nRoom object\n\n\n\n\n\n    \nRoom.numberOfAdults\n\n    \ninteger\n\n    \nno\n\n    \nNumber of adults can fit into the room\n\n\n\n\n\n    \nRoom.childrenAges\n\n    \ninteger\n\n    \nno\n\n    \nChildren with specified ages can be accepted for this room.\n\n\n\n\n\n    \nRoom.roomDescription\n\n    \ninteger\n\n    \nno\n\n    \nRoom description describing the type of room.\n\n\n\n\n\n    \nRoom.sequence\n\n    \ninteger\n\n    \nno\n\n    \nIdentifies the selected room for specified occupants.\n\n\n\n\n\n    \nBooking.creationDate\n\n    \ninteger\n\n    \nno\n\n    \nOffset date time string in \nYYYY-MM-DDThh:mmTZD\n (ISO 8601) format indicating when the booking made.\n\n\n\n\n\n    \nBooking.total\n\n    \ndecimal\n\n    \nno\n\n    \nTotal amount of booked rate in specified currency in \nBooking.currency\n field\n\n\n\n\n\n    \nBooking.currency\n\n    \nstring\n\n    \nno\n\n    \nTwo letter country code (ISO 3166-1 alpha-2) of the amount for booked rate.\n\n\n\n\n\n    \nBooking.cancellationCost\n\n    \ndecimal\n\n    \nyes\n\n    \nCharged penalty amount when the booking is cancelled. If no penalty charged, this value should be \n0.00\n\n\n\n\n\n    \nBooking.balance\n\n    \ndecimal\n\n    \nno\n\n    \n\n        if booking cancelled and any penalty applied, this field indicates the final amount after the penalty amount deducted from total amount.\n        If booking is not cancelled this field should be equal to \nBooking.total\n amount.\n    \n\n\n\n\n\n    \nBooking.specialRequest\n\n    \nstring\n\n    \nno\n\n    \nSpecial requests asked by the holder\n\n\n\n\n\n    \nBooking.rateKey\n\n    \nstring\n\n    \nno\n\n    \nUnique identifier of the booked rate. Refer to \nCheck Rate\n documentation for further information.\n\n\n\n\n\n    \nBooking.rateType\n\n    \nstring\n\n    \nno\n\n    \nType of booked rate. Refer to \nCheck Rate\n documentation for further information.\n\n\n\n\n\n    \nBooking.boardType\n\n    \nstring\n\n    \nno\n\n    \nBoard type code of booked rate. Refer to \nCheck Rate\n documentation for further information.\n\n\n\n\n\n    \nBooking.boardName\n\n    \nstring\n\n    \nno\n\n    \nBoard type name of booked rate. Refer to \nCheck Rate\n documentation for further information.\n\n\n\n\n\n    \nBooking.nonrefundable\n\n    \nstring\n\n    \nno\n\n    \nFlag indicating wheter the booking is refundable or not.\nRefer to \nCheck Rate\n documentation for further information.\n\n\n\n\n\n    \nBooking.cancellationPolicies\n\n    \nlist[CancellationPolicy]\n\n    \nno\n\n    \nList of \nCancellationPolicy\n objects.\nRefer to \nCheck Rate\n documentation for further information.\n\n\n\n\n\n    \nBooking.commission\n\n    \ndecimal\n\n    \nyes\n\n    \nAmount of comission specified for commissionable rates.\nRefer to \nCheck Rate\n documentation for further information.\n\n\n\n\n\n    \nBooking.hotelRate\n\n    \ndecimal\n\n    \nyes\n\n    \nTotal amount of booking should be payed at hotel.\nRefer to \nCheck Rate\n documentation for further information.\n\n\n\n\n\n    \nBooking.hotelCurrency\n\n    \nstring\n\n    \nyes\n\n    \nCurrency value for \nBooking.hotelRate\n.\nRefer to \nCheck Rate\n documentation for further information.\n\n\n\n\n\n    \nBooking.remarks\n\n    \nstring\n\n    \nyes\n\n    \nComments from hotelier related to your booking.\nRefer to \nCheck Rate\n documentation for further information.\n\n\n\n\n\n\n\nExample Result Object\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n{\n\n  \nbooking\n:\n \n{\n\n    \nstatus\n:\n \nCONFIRMED\n,\n\n    \nbookingRef\n:\n \n55cda9\n,\n\n    \nclientRef\n:\n \nqwerty123456\n,\n\n    \nhotelCode\n:\n \nd31d12\n,\n\n    \ncheckin\n:\n \n2017-07-22\n,\n\n    \ncheckout\n:\n \n2017-07-25\n,\n\n    \nholder\n:\n \n{\n\n      \nfirstName\n:\n \njohn\n,\n\n      \nlastName\n:\n \ndoe\n,\n\n      \nemail\n:\n \njohndoe@example.org\n,\n\n      \nphone\n:\n \n+415000000\n\n    \n},\n\n    \noccupancies\n:\n \n[\n\n      \n{\n\n        \noccupants\n:\n \n[\n\n          \n{\n\n            \noccupantType\n:\n \nADULT\n,\n\n            \nage\n:\n \nnull\n,\n\n            \nfirstName\n:\n \njohn\n,\n\n            \nlastName\n:\n \ndoe\n\n          \n},\n\n          \n{\n\n            \noccupantType\n:\n \nADULT\n,\n\n            \nage\n:\n \nnull\n,\n\n            \nfirstName\n:\n \nalice\n,\n\n            \nlastName\n:\n \nwonder\n\n          \n}\n\n        \n],\n\n        \nroom\n:\n \n{\n\n          \nnumberOfAdults\n:\n \n2\n,\n\n          \nchildrenAges\n:\n \n[],\n\n          \nroomDescription\n:\n \nDOUBLE DELUXE CITY VIEW\n,\n\n          \nsequence\n:\n \n1\n\n        \n}\n\n      \n}\n\n    \n],\n\n    \ncreationDate\n:\n \n2017-05-17T12:00:00Z\n,\n\n    \nrateType\n:\n \nNET\n,\n\n    \nboardType\n:\n \nRO\n,\n\n    \nboardName\n:\n \nRoom Only\n,\n\n    \ncancellationPolicies\n:\n \n[\n\n      \n{\n\n        \namount\n:\n \n174.13\n,\n\n        \nfromDate\n:\n \n2017-07-19T23:59:00+03:00\n\n      \n}\n\n    \n],\n\n    \ntotal\n:\n \n585.08\n,\n\n    \ncurrency\n:\n \nEUR\n,\n\n    \nbalance\n:\n \n522.39\n,\n\n    \nrateKey\n:\n \n[Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|Prabrg|[jVOYrg|2|0]]\n,\n\n    \nhotelName\n:\n \nThe Marmara Taksim\n,\n\n    \ndestinationCode\n:\n \nc36ca9\n,\n\n    \ndestinationName\n:\n \nistanbul\n,\n\n    \ncountryCode\n:\n \nTR\n,\n\n    \nnonrefundable\n:\n \nfalse\n,\n\n    \ncancellationCost\n:\n \n0\n,\n\n    \ncommission\n:\n \nnull\n,\n\n    \nhotelRate\n:\n \nnull\n,\n\n    \nhotelCurrency\n:\n \nnull\n,\n\n    \nspecialRequest\n:\n \nnull\n,\n\n    \nremarks\n:\n \nCheck-in hour 15:00\n\n  \n}\n\n\n}", 
            "title": "Check Booking"
        }, 
        {
            "location": "/api_docs/check_booking/#introduction", 
            "text": "Check the latest booking status at Ratemark's records by using either booking reference or client reference.\nYou might want to use this resource to gather all the information about your booking whenever desired.", 
            "title": "Introduction"
        }, 
        {
            "location": "/api_docs/check_booking/#definition", 
            "text": "1 POST https://api.ratemarkt.com/v1/checkbooking", 
            "title": "Definition"
        }, 
        {
            "location": "/api_docs/check_booking/#query-object", 
            "text": "Argument \n             Type \n             Required \n             Description \n         \n     \n     \n         \n             bookingRef \n             string \n             optional* \n             Unique booking identifier \n         \n         \n             clientRef \n             string \n             optional* \n             Unique booking identifier defined by client \n         \n        About Optional* Arguments  You should provide either  bookingRef  or  clientRef  argument to get your query work.", 
            "title": "Query Object"
        }, 
        {
            "location": "/api_docs/check_booking/#example-query-object", 
            "text": "1\n2\n3 { \n   bookingRef :   7616be  }", 
            "title": "Example Query Object"
        }, 
        {
            "location": "/api_docs/check_booking/#result-object", 
            "text": "Result Object Hint  While  Book Rate  resource returns a  Booking  object, this resource also returns exactly the same  Booking  object.  So you may want to reuse the same json parser logic in your client application.   \n     \n         \n         \n         \n         \n     \n     \n         \n             Argument \n             Type \n             Nullable \n             Description \n         \n     \n     \n         \n     Result.booking \n     object[Booking] \n     no \n     Booking object   \n     Booking.status \n     string \n     no \n     \n        Flag indicating the current status of the booking. Available values are:\n         \n             CONFIRMED : Booking confirmed and payment processed successfully. \n             FAILED : Booking failed because of an error. \n             CANCELED : Booking cancelled successfully. \n         \n       \n     Booking.bookingRef \n     string \n     no \n     Unique booking identifier   \n     Booking.clientRef \n     string \n     no \n     Unique booking identifier issued by the client   \n     Booking.rateKey \n     string \n     no \n     Unique rate identifier   \n     Booking.hotelCode \n     string \n     no \n     Unique hotel identifier   \n     Booking.hotelName \n     string \n     no \n     Hotel name   \n     Booking.destinationCode \n     string \n     no \n     Unique destination identifier   \n     Booking.destinationName \n     string \n     no \n     Destination name   \n     Booking.countryCode \n     string \n     no \n     Two letter country code (ISO 3166-1 alpha-2)   \n     Booking.checkin \n     string \n     no \n     YYYY-MM-DD  (ISO 8601) formatted date string. Eg. 2017-11-12   \n     Booking.checkout \n     string \n     no \n     YYYY-MM-DD  (ISO 8601) formatted date string. Eg. 2017-11-12   \n     Booking.holder \n     object[Holder] \n     no \n     Holder object contains information who places the booking   \n     Holder.firstName \n     string \n     yes \n     Holder' s first name   \n     Holder.lastName \n     string \n     yes \n     Holder' s last name   \n     Holder.email \n     string \n     no \n     Holder' s email address   \n     Holder.phone \n     string \n     no \n     Holder' s phone number   \n     Booking.occupancies \n     list[Occupancy] \n     no \n     Occupancy object contains information of individual occupants who will accomodate in the specified room.   \n     Occupancy.occupants \n     list[Occupant] \n     no \n     List of  Occupant  objects contains information about personal occupant information.   \n     Occupant.occupantType \n     string \n     no \n     Occupant type. Value can be either  ADULT  or  CHILD   \n     Occupant.firstName \n     string \n     no \n     Occupant's first name   \n     Occupant.lastName \n     string \n     no \n     Occupant's last name   \n     Occupant.age \n     integer \n     no \n     Occupant's age   \n     room \n     object[Room] \n     no \n     Room object   \n     Room.numberOfAdults \n     integer \n     no \n     Number of adults can fit into the room   \n     Room.childrenAges \n     integer \n     no \n     Children with specified ages can be accepted for this room.   \n     Room.roomDescription \n     integer \n     no \n     Room description describing the type of room.   \n     Room.sequence \n     integer \n     no \n     Identifies the selected room for specified occupants.   \n     Booking.creationDate \n     integer \n     no \n     Offset date time string in  YYYY-MM-DDThh:mmTZD  (ISO 8601) format indicating when the booking made.   \n     Booking.total \n     decimal \n     no \n     Total amount of booked rate in specified currency in  Booking.currency  field   \n     Booking.currency \n     string \n     no \n     Two letter country code (ISO 3166-1 alpha-2) of the amount for booked rate.   \n     Booking.cancellationCost \n     decimal \n     yes \n     Charged penalty amount when the booking is cancelled. If no penalty charged, this value should be  0.00   \n     Booking.balance \n     decimal \n     no \n     \n        if booking cancelled and any penalty applied, this field indicates the final amount after the penalty amount deducted from total amount.\n        If booking is not cancelled this field should be equal to  Booking.total  amount.\n       \n     Booking.specialRequest \n     string \n     no \n     Special requests asked by the holder   \n     Booking.rateKey \n     string \n     no \n     Unique identifier of the booked rate. Refer to  Check Rate  documentation for further information.   \n     Booking.rateType \n     string \n     no \n     Type of booked rate. Refer to  Check Rate  documentation for further information.   \n     Booking.boardType \n     string \n     no \n     Board type code of booked rate. Refer to  Check Rate  documentation for further information.   \n     Booking.boardName \n     string \n     no \n     Board type name of booked rate. Refer to  Check Rate  documentation for further information.   \n     Booking.nonrefundable \n     string \n     no \n     Flag indicating wheter the booking is refundable or not. Refer to  Check Rate  documentation for further information.   \n     Booking.cancellationPolicies \n     list[CancellationPolicy] \n     no \n     List of  CancellationPolicy  objects. Refer to  Check Rate  documentation for further information.   \n     Booking.commission \n     decimal \n     yes \n     Amount of comission specified for commissionable rates. Refer to  Check Rate  documentation for further information.   \n     Booking.hotelRate \n     decimal \n     yes \n     Total amount of booking should be payed at hotel. Refer to  Check Rate  documentation for further information.   \n     Booking.hotelCurrency \n     string \n     yes \n     Currency value for  Booking.hotelRate . Refer to  Check Rate  documentation for further information.   \n     Booking.remarks \n     string \n     yes \n     Comments from hotelier related to your booking. Refer to  Check Rate  documentation for further information.", 
            "title": "Result Object"
        }, 
        {
            "location": "/api_docs/check_booking/#example-result-object", 
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65 { \n   booking :   { \n     status :   CONFIRMED , \n     bookingRef :   55cda9 , \n     clientRef :   qwerty123456 , \n     hotelCode :   d31d12 , \n     checkin :   2017-07-22 , \n     checkout :   2017-07-25 , \n     holder :   { \n       firstName :   john , \n       lastName :   doe , \n       email :   johndoe@example.org , \n       phone :   +415000000 \n     }, \n     occupancies :   [ \n       { \n         occupants :   [ \n           { \n             occupantType :   ADULT , \n             age :   null , \n             firstName :   john , \n             lastName :   doe \n           }, \n           { \n             occupantType :   ADULT , \n             age :   null , \n             firstName :   alice , \n             lastName :   wonder \n           } \n         ], \n         room :   { \n           numberOfAdults :   2 , \n           childrenAges :   [], \n           roomDescription :   DOUBLE DELUXE CITY VIEW , \n           sequence :   1 \n         } \n       } \n     ], \n     creationDate :   2017-05-17T12:00:00Z , \n     rateType :   NET , \n     boardType :   RO , \n     boardName :   Room Only , \n     cancellationPolicies :   [ \n       { \n         amount :   174.13 , \n         fromDate :   2017-07-19T23:59:00+03:00 \n       } \n     ], \n     total :   585.08 , \n     currency :   EUR , \n     balance :   522.39 , \n     rateKey :   [Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|Prabrg|[jVOYrg|2|0]] , \n     hotelName :   The Marmara Taksim , \n     destinationCode :   c36ca9 , \n     destinationName :   istanbul , \n     countryCode :   TR , \n     nonrefundable :   false , \n     cancellationCost :   0 , \n     commission :   null , \n     hotelRate :   null , \n     hotelCurrency :   null , \n     specialRequest :   null , \n     remarks :   Check-in hour 15:00 \n   }  }", 
            "title": "Example Result Object"
        }, 
        {
            "location": "/api_docs/cancel_booking/", 
            "text": "Introduction\n\n\nCancels the selected booking by providing either booking reference or client reference.\n\n\nIf the cancellation complies to any cancellation policy rule, the specified amount of penalty will be deducted from the total refund amount of booking.\n\n\nIf the booking already is a nonredundable one, nothing will be refunded.\n\n\nDefinition\n\n\n1\nPOST https://api.ratemarkt.com/v1/cancelbooking\n\n\n\n\n\n\nQuery Object\n\n\n\n    \n\n        \n\n        \n\n        \n\n        \n\n    \n\n    \n\n        \n\n            \nArgument\n\n            \nType\n\n            \nRequired\n\n            \nDescription\n\n        \n\n    \n\n    \n\n        \n\n            \nbookingRef\n\n            \nstring\n\n            \noptional*\n\n            \nUnique booking identifier\n\n        \n\n        \n\n            \nclientRef\n\n            \nstring\n\n            \noptional*\n\n            \nUnique booking identifier defined by client\n\n        \n\n    \n\n\n\n\n\n\n\nAbout Optional* Arguments\n\n\nYou should provide either \nbookingRef\n or \nclientRef\n argument to get your query work.\n\n\n\n\nExample Query Object\n\n\n1\n2\n3\n{\n\n  \nbookingRef\n:\n \n7616be\n\n\n}\n\n\n\n\n\n\n\nResult Object\n\n\n\n\nResult Object Hint\n\n\nWhile \nBook Rate\n resource returns a \nBooking\n object, this resource also returns exactly the same \nBooking\n object.\n\n\nSo you may want to reuse the same json parser logic in your client application.\n\n\n\n\n\n    \n\n        \n\n        \n\n        \n\n        \n\n    \n\n    \n\n        \n\n            \nArgument\n\n            \nType\n\n            \nNullable\n\n            \nDescription\n\n        \n\n    \n\n    \n\n        \n\n    \nResult.booking\n\n    \nobject[Booking]\n\n    \nno\n\n    \nBooking object\n\n\n\n\n\n    \nBooking.status\n\n    \nstring\n\n    \nno\n\n    \n\n        Flag indicating the current status of the booking. Available values are:\n        \n\n            \nCONFIRMED\n: Booking confirmed and payment processed successfully.\n\n            \nFAILED\n: Booking failed because of an error.\n\n            \nCANCELED\n: Booking cancelled successfully.\n\n        \n\n    \n\n\n\n\n\n    \nBooking.bookingRef\n\n    \nstring\n\n    \nno\n\n    \nUnique booking identifier\n\n\n\n\n\n    \nBooking.clientRef\n\n    \nstring\n\n    \nno\n\n    \nUnique booking identifier issued by the client\n\n\n\n\n\n    \nBooking.rateKey\n\n    \nstring\n\n    \nno\n\n    \nUnique rate identifier\n\n\n\n\n\n    \nBooking.hotelCode\n\n    \nstring\n\n    \nno\n\n    \nUnique hotel identifier\n\n\n\n\n\n    \nBooking.hotelName\n\n    \nstring\n\n    \nno\n\n    \nHotel name\n\n\n\n\n\n    \nBooking.destinationCode\n\n    \nstring\n\n    \nno\n\n    \nUnique destination identifier\n\n\n\n\n\n    \nBooking.destinationName\n\n    \nstring\n\n    \nno\n\n    \nDestination name\n\n\n\n\n\n    \nBooking.countryCode\n\n    \nstring\n\n    \nno\n\n    \nTwo letter country code (ISO 3166-1 alpha-2)\n\n\n\n\n\n    \nBooking.checkin\n\n    \nstring\n\n    \nno\n\n    \nYYYY-MM-DD\n (ISO 8601) formatted date string. Eg. 2017-11-12\n\n\n\n\n\n    \nBooking.checkout\n\n    \nstring\n\n    \nno\n\n    \nYYYY-MM-DD\n (ISO 8601) formatted date string. Eg. 2017-11-12\n\n\n\n\n\n    \nBooking.holder\n\n    \nobject[Holder]\n\n    \nno\n\n    \nHolder object contains information who places the booking\n\n\n\n\n\n    \nHolder.firstName\n\n    \nstring\n\n    \nyes\n\n    \nHolder' s first name\n\n\n\n\n\n    \nHolder.lastName\n\n    \nstring\n\n    \nyes\n\n    \nHolder' s last name\n\n\n\n\n\n    \nHolder.email\n\n    \nstring\n\n    \nno\n\n    \nHolder' s email address\n\n\n\n\n\n    \nHolder.phone\n\n    \nstring\n\n    \nno\n\n    \nHolder' s phone number\n\n\n\n\n\n    \nBooking.occupancies\n\n    \nlist[Occupancy]\n\n    \nno\n\n    \nOccupancy object contains information of individual occupants who will accomodate in the specified room.\n\n\n\n\n\n    \nOccupancy.occupants\n\n    \nlist[Occupant]\n\n    \nno\n\n    \nList of \nOccupant\n objects contains information about personal occupant information.\n\n\n\n\n\n    \nOccupant.occupantType\n\n    \nstring\n\n    \nno\n\n    \nOccupant type. Value can be either \nADULT\n or \nCHILD\n\n\n\n\n\n    \nOccupant.firstName\n\n    \nstring\n\n    \nno\n\n    \nOccupant's first name\n\n\n\n\n\n    \nOccupant.lastName\n\n    \nstring\n\n    \nno\n\n    \nOccupant's last name\n\n\n\n\n\n    \nOccupant.age\n\n    \ninteger\n\n    \nno\n\n    \nOccupant's age\n\n\n\n\n\n    \nroom\n\n    \nobject[Room]\n\n    \nno\n\n    \nRoom object\n\n\n\n\n\n    \nRoom.numberOfAdults\n\n    \ninteger\n\n    \nno\n\n    \nNumber of adults can fit into the room\n\n\n\n\n\n    \nRoom.childrenAges\n\n    \ninteger\n\n    \nno\n\n    \nChildren with specified ages can be accepted for this room.\n\n\n\n\n\n    \nRoom.roomDescription\n\n    \ninteger\n\n    \nno\n\n    \nRoom description describing the type of room.\n\n\n\n\n\n    \nRoom.sequence\n\n    \ninteger\n\n    \nno\n\n    \nIdentifies the selected room for specified occupants.\n\n\n\n\n\n    \nBooking.creationDate\n\n    \ninteger\n\n    \nno\n\n    \nOffset date time string in \nYYYY-MM-DDThh:mmTZD\n (ISO 8601) format indicating when the booking made.\n\n\n\n\n\n    \nBooking.total\n\n    \ndecimal\n\n    \nno\n\n    \nTotal amount of booked rate in specified currency in \nBooking.currency\n field\n\n\n\n\n\n    \nBooking.currency\n\n    \nstring\n\n    \nno\n\n    \nTwo letter country code (ISO 3166-1 alpha-2) of the amount for booked rate.\n\n\n\n\n\n    \nBooking.cancellationCost\n\n    \ndecimal\n\n    \nyes\n\n    \nCharged penalty amount when the booking is cancelled. If no penalty charged, this value should be \n0.00\n\n\n\n\n\n    \nBooking.balance\n\n    \ndecimal\n\n    \nno\n\n    \n\n        if booking cancelled and any penalty applied, this field indicates the final amount after the penalty amount deducted from total amount.\n        If booking is not cancelled this field should be equal to \nBooking.total\n amount.\n    \n\n\n\n\n\n    \nBooking.specialRequest\n\n    \nstring\n\n    \nno\n\n    \nSpecial requests asked by the holder\n\n\n\n\n\n    \nBooking.rateKey\n\n    \nstring\n\n    \nno\n\n    \nUnique identifier of the booked rate. Refer to \nCheck Rate\n documentation for further information.\n\n\n\n\n\n    \nBooking.rateType\n\n    \nstring\n\n    \nno\n\n    \nType of booked rate. Refer to \nCheck Rate\n documentation for further information.\n\n\n\n\n\n    \nBooking.boardType\n\n    \nstring\n\n    \nno\n\n    \nBoard type code of booked rate. Refer to \nCheck Rate\n documentation for further information.\n\n\n\n\n\n    \nBooking.boardName\n\n    \nstring\n\n    \nno\n\n    \nBoard type name of booked rate. Refer to \nCheck Rate\n documentation for further information.\n\n\n\n\n\n    \nBooking.nonrefundable\n\n    \nstring\n\n    \nno\n\n    \nFlag indicating wheter the booking is refundable or not.\nRefer to \nCheck Rate\n documentation for further information.\n\n\n\n\n\n    \nBooking.cancellationPolicies\n\n    \nlist[CancellationPolicy]\n\n    \nno\n\n    \nList of \nCancellationPolicy\n objects.\nRefer to \nCheck Rate\n documentation for further information.\n\n\n\n\n\n    \nBooking.commission\n\n    \ndecimal\n\n    \nyes\n\n    \nAmount of comission specified for commissionable rates.\nRefer to \nCheck Rate\n documentation for further information.\n\n\n\n\n\n    \nBooking.hotelRate\n\n    \ndecimal\n\n    \nyes\n\n    \nTotal amount of booking should be payed at hotel.\nRefer to \nCheck Rate\n documentation for further information.\n\n\n\n\n\n    \nBooking.hotelCurrency\n\n    \nstring\n\n    \nyes\n\n    \nCurrency value for \nBooking.hotelRate\n.\nRefer to \nCheck Rate\n documentation for further information.\n\n\n\n\n\n    \nBooking.remarks\n\n    \nstring\n\n    \nyes\n\n    \nComments from hotelier related to your booking.\nRefer to \nCheck Rate\n documentation for further information.\n\n\n\n\n\n\n\nExample Result Object\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n{\n\n  \nbooking\n:\n \n{\n\n    \nstatus\n:\n \nCANCELLED\n,\n\n    \nbookingRef\n:\n \n55cda9\n,\n\n    \nclientRef\n:\n \nqwerty123456\n,\n\n    \nhotelCode\n:\n \nd31d12\n,\n\n    \ncheckin\n:\n \n2017-07-22\n,\n\n    \ncheckout\n:\n \n2017-07-25\n,\n\n    \nholder\n:\n \n{\n\n      \nfirstName\n:\n \njohn\n,\n\n      \nlastName\n:\n \ndoe\n,\n\n      \nemail\n:\n \njohndoe@example.org\n,\n\n      \nphone\n:\n \n+415000000\n\n    \n},\n\n    \noccupancies\n:\n \n[\n\n      \n{\n\n        \noccupants\n:\n \n[\n\n          \n{\n\n            \noccupantType\n:\n \nADULT\n,\n\n            \nage\n:\n \nnull\n,\n\n            \nfirstName\n:\n \njohn\n,\n\n            \nlastName\n:\n \ndoe\n\n          \n},\n\n          \n{\n\n            \noccupantType\n:\n \nADULT\n,\n\n            \nage\n:\n \nnull\n,\n\n            \nfirstName\n:\n \nalice\n,\n\n            \nlastName\n:\n \nwonder\n\n          \n}\n\n        \n],\n\n        \nroom\n:\n \n{\n\n          \nnumberOfAdults\n:\n \n2\n,\n\n          \nchildrenAges\n:\n \n[],\n\n          \nroomDescription\n:\n \nDOUBLE DELUXE CITY VIEW\n,\n\n          \nsequence\n:\n \n1\n\n        \n}\n\n      \n}\n\n    \n],\n\n    \ncreationDate\n:\n \n2017-05-17T12:00:00Z\n,\n\n    \nrateType\n:\n \nNET\n,\n\n    \nboardType\n:\n \nRO\n,\n\n    \nboardName\n:\n \nRoom Only\n,\n\n    \ncancellationPolicies\n:\n \n[\n\n      \n{\n\n        \namount\n:\n \n174.13\n,\n\n        \nfromDate\n:\n \n2017-07-19T23:59:00+03:00\n\n      \n}\n\n    \n],\n\n    \ntotal\n:\n \n585.08\n,\n\n    \ncurrency\n:\n \nEUR\n,\n\n    \nbalance\n:\n \n410.95\n,\n\n    \nrateKey\n:\n \n[Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|Prabrg|[jVOYrg|2|0]]\n,\n\n    \nhotelName\n:\n \nThe Marmara Taksim\n,\n\n    \ndestinationCode\n:\n \nc36ca9\n,\n\n    \ndestinationName\n:\n \nistanbul\n,\n\n    \ncountryCode\n:\n \nTR\n,\n\n    \nnonrefundable\n:\n \nfalse\n,\n\n    \ncancellationCost\n:\n \n174.13\n,\n\n    \ncommission\n:\n \nnull\n,\n\n    \nhotelRate\n:\n \nnull\n,\n\n    \nhotelCurrency\n:\n \nnull\n,\n\n    \nspecialRequest\n:\n \nnull\n,\n\n    \nremarks\n:\n \nCheck-in hour 15:00\n\n  \n}\n\n\n}", 
            "title": "Cancel Booking"
        }, 
        {
            "location": "/api_docs/cancel_booking/#introduction", 
            "text": "Cancels the selected booking by providing either booking reference or client reference.  If the cancellation complies to any cancellation policy rule, the specified amount of penalty will be deducted from the total refund amount of booking.  If the booking already is a nonredundable one, nothing will be refunded.", 
            "title": "Introduction"
        }, 
        {
            "location": "/api_docs/cancel_booking/#definition", 
            "text": "1 POST https://api.ratemarkt.com/v1/cancelbooking", 
            "title": "Definition"
        }, 
        {
            "location": "/api_docs/cancel_booking/#query-object", 
            "text": "Argument \n             Type \n             Required \n             Description \n         \n     \n     \n         \n             bookingRef \n             string \n             optional* \n             Unique booking identifier \n         \n         \n             clientRef \n             string \n             optional* \n             Unique booking identifier defined by client \n         \n        About Optional* Arguments  You should provide either  bookingRef  or  clientRef  argument to get your query work.", 
            "title": "Query Object"
        }, 
        {
            "location": "/api_docs/cancel_booking/#example-query-object", 
            "text": "1\n2\n3 { \n   bookingRef :   7616be  }", 
            "title": "Example Query Object"
        }, 
        {
            "location": "/api_docs/cancel_booking/#result-object", 
            "text": "Result Object Hint  While  Book Rate  resource returns a  Booking  object, this resource also returns exactly the same  Booking  object.  So you may want to reuse the same json parser logic in your client application.   \n     \n         \n         \n         \n         \n     \n     \n         \n             Argument \n             Type \n             Nullable \n             Description \n         \n     \n     \n         \n     Result.booking \n     object[Booking] \n     no \n     Booking object   \n     Booking.status \n     string \n     no \n     \n        Flag indicating the current status of the booking. Available values are:\n         \n             CONFIRMED : Booking confirmed and payment processed successfully. \n             FAILED : Booking failed because of an error. \n             CANCELED : Booking cancelled successfully. \n         \n       \n     Booking.bookingRef \n     string \n     no \n     Unique booking identifier   \n     Booking.clientRef \n     string \n     no \n     Unique booking identifier issued by the client   \n     Booking.rateKey \n     string \n     no \n     Unique rate identifier   \n     Booking.hotelCode \n     string \n     no \n     Unique hotel identifier   \n     Booking.hotelName \n     string \n     no \n     Hotel name   \n     Booking.destinationCode \n     string \n     no \n     Unique destination identifier   \n     Booking.destinationName \n     string \n     no \n     Destination name   \n     Booking.countryCode \n     string \n     no \n     Two letter country code (ISO 3166-1 alpha-2)   \n     Booking.checkin \n     string \n     no \n     YYYY-MM-DD  (ISO 8601) formatted date string. Eg. 2017-11-12   \n     Booking.checkout \n     string \n     no \n     YYYY-MM-DD  (ISO 8601) formatted date string. Eg. 2017-11-12   \n     Booking.holder \n     object[Holder] \n     no \n     Holder object contains information who places the booking   \n     Holder.firstName \n     string \n     yes \n     Holder' s first name   \n     Holder.lastName \n     string \n     yes \n     Holder' s last name   \n     Holder.email \n     string \n     no \n     Holder' s email address   \n     Holder.phone \n     string \n     no \n     Holder' s phone number   \n     Booking.occupancies \n     list[Occupancy] \n     no \n     Occupancy object contains information of individual occupants who will accomodate in the specified room.   \n     Occupancy.occupants \n     list[Occupant] \n     no \n     List of  Occupant  objects contains information about personal occupant information.   \n     Occupant.occupantType \n     string \n     no \n     Occupant type. Value can be either  ADULT  or  CHILD   \n     Occupant.firstName \n     string \n     no \n     Occupant's first name   \n     Occupant.lastName \n     string \n     no \n     Occupant's last name   \n     Occupant.age \n     integer \n     no \n     Occupant's age   \n     room \n     object[Room] \n     no \n     Room object   \n     Room.numberOfAdults \n     integer \n     no \n     Number of adults can fit into the room   \n     Room.childrenAges \n     integer \n     no \n     Children with specified ages can be accepted for this room.   \n     Room.roomDescription \n     integer \n     no \n     Room description describing the type of room.   \n     Room.sequence \n     integer \n     no \n     Identifies the selected room for specified occupants.   \n     Booking.creationDate \n     integer \n     no \n     Offset date time string in  YYYY-MM-DDThh:mmTZD  (ISO 8601) format indicating when the booking made.   \n     Booking.total \n     decimal \n     no \n     Total amount of booked rate in specified currency in  Booking.currency  field   \n     Booking.currency \n     string \n     no \n     Two letter country code (ISO 3166-1 alpha-2) of the amount for booked rate.   \n     Booking.cancellationCost \n     decimal \n     yes \n     Charged penalty amount when the booking is cancelled. If no penalty charged, this value should be  0.00   \n     Booking.balance \n     decimal \n     no \n     \n        if booking cancelled and any penalty applied, this field indicates the final amount after the penalty amount deducted from total amount.\n        If booking is not cancelled this field should be equal to  Booking.total  amount.\n       \n     Booking.specialRequest \n     string \n     no \n     Special requests asked by the holder   \n     Booking.rateKey \n     string \n     no \n     Unique identifier of the booked rate. Refer to  Check Rate  documentation for further information.   \n     Booking.rateType \n     string \n     no \n     Type of booked rate. Refer to  Check Rate  documentation for further information.   \n     Booking.boardType \n     string \n     no \n     Board type code of booked rate. Refer to  Check Rate  documentation for further information.   \n     Booking.boardName \n     string \n     no \n     Board type name of booked rate. Refer to  Check Rate  documentation for further information.   \n     Booking.nonrefundable \n     string \n     no \n     Flag indicating wheter the booking is refundable or not. Refer to  Check Rate  documentation for further information.   \n     Booking.cancellationPolicies \n     list[CancellationPolicy] \n     no \n     List of  CancellationPolicy  objects. Refer to  Check Rate  documentation for further information.   \n     Booking.commission \n     decimal \n     yes \n     Amount of comission specified for commissionable rates. Refer to  Check Rate  documentation for further information.   \n     Booking.hotelRate \n     decimal \n     yes \n     Total amount of booking should be payed at hotel. Refer to  Check Rate  documentation for further information.   \n     Booking.hotelCurrency \n     string \n     yes \n     Currency value for  Booking.hotelRate . Refer to  Check Rate  documentation for further information.   \n     Booking.remarks \n     string \n     yes \n     Comments from hotelier related to your booking. Refer to  Check Rate  documentation for further information.", 
            "title": "Result Object"
        }, 
        {
            "location": "/api_docs/cancel_booking/#example-result-object", 
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65 { \n   booking :   { \n     status :   CANCELLED , \n     bookingRef :   55cda9 , \n     clientRef :   qwerty123456 , \n     hotelCode :   d31d12 , \n     checkin :   2017-07-22 , \n     checkout :   2017-07-25 , \n     holder :   { \n       firstName :   john , \n       lastName :   doe , \n       email :   johndoe@example.org , \n       phone :   +415000000 \n     }, \n     occupancies :   [ \n       { \n         occupants :   [ \n           { \n             occupantType :   ADULT , \n             age :   null , \n             firstName :   john , \n             lastName :   doe \n           }, \n           { \n             occupantType :   ADULT , \n             age :   null , \n             firstName :   alice , \n             lastName :   wonder \n           } \n         ], \n         room :   { \n           numberOfAdults :   2 , \n           childrenAges :   [], \n           roomDescription :   DOUBLE DELUXE CITY VIEW , \n           sequence :   1 \n         } \n       } \n     ], \n     creationDate :   2017-05-17T12:00:00Z , \n     rateType :   NET , \n     boardType :   RO , \n     boardName :   Room Only , \n     cancellationPolicies :   [ \n       { \n         amount :   174.13 , \n         fromDate :   2017-07-19T23:59:00+03:00 \n       } \n     ], \n     total :   585.08 , \n     currency :   EUR , \n     balance :   410.95 , \n     rateKey :   [Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|Prabrg|[jVOYrg|2|0]] , \n     hotelName :   The Marmara Taksim , \n     destinationCode :   c36ca9 , \n     destinationName :   istanbul , \n     countryCode :   TR , \n     nonrefundable :   false , \n     cancellationCost :   174.13 , \n     commission :   null , \n     hotelRate :   null , \n     hotelCurrency :   null , \n     specialRequest :   null , \n     remarks :   Check-in hour 15:00 \n   }  }", 
            "title": "Example Result Object"
        }, 
        {
            "location": "/api_docs/errors/", 
            "text": "Introduction\n\n\nRatemarkt API might raise errors in certain cases.\n\n\nIn order to distinguish different return types, Ratemarkt uses conventional HTTP status codes mapped to certain circumstances.\n\n\nAs the HTTP standard stated, all successful queries return HTTP status 20X with the desired result object in JSON format.\nFor any unsuccessful result, Ratemarkt again tries to map the error to the most relevant HTTP status with an explanatory \nError\n object in response body using JSON format.\n\n\nError Object\n\n\n\n    \n\n        \n\n        \n\n        \n\n        \n\n    \n\n    \n\n        \n\n            \nArgument\n\n            \nType\n\n            \nNullable\n\n            \nDescription\n\n        \n\n    \n\n    \n\n        \n\n            \nerrorCode\n\n            \ninteger\n\n            \nno\n\n            \nPredefined error code. Refer to error status reference.\n\n        \n\n        \n\n            \nerrorMessage\n\n            \nstring\n\n            \nno\n\n            \nExplanatory error description\n\n        \n\n        \n\n            \nerrorCode\n\n            \ninteger\n\n            \nyes\n\n            \nMore detailed information about the error if available.\n\n        \n\n    \n\n\n\n\n\nExample Error Object\n\n\n1\n2\n3\n4\n5\n6\n7\nHTTP\n1\n/\n1\n \n410\n \nGone\n\n\n\n{\n\n  \nerrorCode\n:\n \n41000\n,\n\n  \nmessage\n:\n \nNot available error\n,\n\n  \ndetail\n:\n \nRequested rate is no longer available\n\n\n}\n\n\n\n\n\n\n\nError Reference\n\n\n\n    \n\n        \n\n        \n\n        \n\n        \n\n    \n\n    \n\n        \n\n            \nHTTP Status Code\n\n            \nError Code\n\n            \nDescription\n\n            \nResolution\n\n        \n\n    \n\n    \n\n        \n\n            \n400\n\n            \n4000\n\n            \nValidation Error\n\n            \nCheck your query object and fix arguments if needed according to relevant \nQuery\n Object reference\n\n        \n\n        \n\n            \n401\n\n            \n40100\n\n            \nAuthentication Error\n\n            \nNo valid API key provided.\n\n        \n\n        \n\n            \n403\n\n            \n40300\n\n            \nAuthorization Error\n\n            \nYou're not permitted to access to the requested resource. Try with an authorized API key.\n\n        \n\n        \n\n            \n404\n\n            \n40400\n\n            \nNot Found Error\n\n            \nRequested resource does not exists. Check your API resource url.\n\n        \n\n        \n\n            \n409\n\n            \n40900\n\n            \nIllegal State Error\n\n            \nSome conflict occured. Please consult to detail message for further resolution.\n\n        \n\n        \n\n            \n410\n\n            \n41000\n\n            \nNot Available Error\n\n            \nRequested hotel or rate no more available. Try another one or change your date range or pax infromation.\n\n        \n\n        \n\n            \n429\n\n            \n42900\n\n            \nRate Limit Exceeded Error\n\n            \nYou have limited number of API access within a certain amount of time. Reduce your number of API access.\n\n        \n\n        \n\n            \n500\n\n            \n50000\n\n            \nSystem Error\n\n            \nConsult to detail message for further resolution.\n\n        \n\n        \n\n            \n500\n\n            \n51000\n\n            \nPayment Error\n\n            \nPayment could not be received. Try another payment option or provide another payment data.\n\n        \n\n        \n\n            \n503\n\n            \n50300\n\n            \nService Unavailable Error\n\n            \nUnknown system error occured. Consult to detail message for further resolution.", 
            "title": "Errors"
        }, 
        {
            "location": "/api_docs/errors/#introduction", 
            "text": "Ratemarkt API might raise errors in certain cases.  In order to distinguish different return types, Ratemarkt uses conventional HTTP status codes mapped to certain circumstances.  As the HTTP standard stated, all successful queries return HTTP status 20X with the desired result object in JSON format.\nFor any unsuccessful result, Ratemarkt again tries to map the error to the most relevant HTTP status with an explanatory  Error  object in response body using JSON format.", 
            "title": "Introduction"
        }, 
        {
            "location": "/api_docs/errors/#error-object", 
            "text": "Argument \n             Type \n             Nullable \n             Description \n         \n     \n     \n         \n             errorCode \n             integer \n             no \n             Predefined error code. Refer to error status reference. \n         \n         \n             errorMessage \n             string \n             no \n             Explanatory error description \n         \n         \n             errorCode \n             integer \n             yes \n             More detailed information about the error if available.", 
            "title": "Error Object"
        }, 
        {
            "location": "/api_docs/errors/#example-error-object", 
            "text": "1\n2\n3\n4\n5\n6\n7 HTTP 1 / 1   410   Gone  { \n   errorCode :   41000 , \n   message :   Not available error , \n   detail :   Requested rate is no longer available  }", 
            "title": "Example Error Object"
        }, 
        {
            "location": "/api_docs/errors/#error-reference", 
            "text": "HTTP Status Code \n             Error Code \n             Description \n             Resolution \n         \n     \n     \n         \n             400 \n             4000 \n             Validation Error \n             Check your query object and fix arguments if needed according to relevant  Query  Object reference \n         \n         \n             401 \n             40100 \n             Authentication Error \n             No valid API key provided. \n         \n         \n             403 \n             40300 \n             Authorization Error \n             You're not permitted to access to the requested resource. Try with an authorized API key. \n         \n         \n             404 \n             40400 \n             Not Found Error \n             Requested resource does not exists. Check your API resource url. \n         \n         \n             409 \n             40900 \n             Illegal State Error \n             Some conflict occured. Please consult to detail message for further resolution. \n         \n         \n             410 \n             41000 \n             Not Available Error \n             Requested hotel or rate no more available. Try another one or change your date range or pax infromation. \n         \n         \n             429 \n             42900 \n             Rate Limit Exceeded Error \n             You have limited number of API access within a certain amount of time. Reduce your number of API access. \n         \n         \n             500 \n             50000 \n             System Error \n             Consult to detail message for further resolution. \n         \n         \n             500 \n             51000 \n             Payment Error \n             Payment could not be received. Try another payment option or provide another payment data. \n         \n         \n             503 \n             50300 \n             Service Unavailable Error \n             Unknown system error occured. Consult to detail message for further resolution.", 
            "title": "Error Reference"
        }, 
        {
            "location": "/api_docs/client_libraries/", 
            "text": "Introduction\n\n\nWe have growing number of client libraries in different popular programming languages. Please find them below.\nAlso any contributions are very welcome and appreciated so much.\n\n\nJava Client Library\n\n\nYou can use our Java SDK also as client library for Ratemarkt. Please see our \nSDK Documentation\n for detailed information.\n\n\nhttps://github.com/ratemarkt/ratemarkt-sdk/\n\n\nPython Client Library\n\n\nhttps://github.com/ratemarkt/ratemarkt-python-client/\n\n\nPhp Client Library\n\n\nhttps://github.com/ratemarkt/ratemarkt-php-client/", 
            "title": "Client Libraries"
        }, 
        {
            "location": "/api_docs/client_libraries/#introduction", 
            "text": "We have growing number of client libraries in different popular programming languages. Please find them below.\nAlso any contributions are very welcome and appreciated so much.", 
            "title": "Introduction"
        }, 
        {
            "location": "/api_docs/client_libraries/#java-client-library", 
            "text": "You can use our Java SDK also as client library for Ratemarkt. Please see our  SDK Documentation  for detailed information.  https://github.com/ratemarkt/ratemarkt-sdk/", 
            "title": "Java Client Library"
        }, 
        {
            "location": "/api_docs/client_libraries/#python-client-library", 
            "text": "https://github.com/ratemarkt/ratemarkt-python-client/", 
            "title": "Python Client Library"
        }, 
        {
            "location": "/api_docs/client_libraries/#php-client-library", 
            "text": "https://github.com/ratemarkt/ratemarkt-php-client/", 
            "title": "Php Client Library"
        }, 
        {
            "location": "/sdk_docs/getting_started/", 
            "text": "Coming soon.", 
            "title": "Getting Started"
        }, 
        {
            "location": "/api_specs/getting_started/", 
            "text": "Coming soon.", 
            "title": "Getting Started"
        }, 
        {
            "location": "/open_source/", 
            "text": "Coming soon.", 
            "title": "Open Source"
        }, 
        {
            "location": "/faq/", 
            "text": "Coming soon.", 
            "title": "F.A.Q"
        }
    ]
}