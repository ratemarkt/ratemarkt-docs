{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome to Ratemarkt Docs\n\n\nHere you can find plenty of documentation about Ratemarkt.\n\n\n\n\nWhat is Ratemarkt?\n\n\nFor a comprehensive introduction for Ratemarkt please visit \nRatemarkt Homepage\n first.\n\n\n\n\nGetting Started with Ratemark\n\n\nPlease choose the most suitable topic below you're looking for.\n\n\n\n\nUser's Guide\n Find out more about how to use every feature of Ratemarkt.\n\n\nApi Docs\n - Get integrated with Ratemarkt Client API.\n\n\nSDK Docs\n - Extend Ratemarkt Client API functionality using SDK.\n\n\nAPI Specs\n - Generic Supplier API Specs to take place as a Supplier in Ratemarkt\n\n\n\n\nQuestions?\n\n\nWe'd love to help you in any case you get stuck with Ratemarkt.\nPlease first find answers to the most encountered questions in our \nF.A.Q\n page or reach us by using our \nSupport Center\n\n\nIf you like, you may drop us an email at", 
            "title": "Home"
        }, 
        {
            "location": "/#welcome-to-ratemarkt-docs", 
            "text": "Here you can find plenty of documentation about Ratemarkt.   What is Ratemarkt?  For a comprehensive introduction for Ratemarkt please visit  Ratemarkt Homepage  first.", 
            "title": "Welcome to Ratemarkt Docs"
        }, 
        {
            "location": "/#getting-started-with-ratemark", 
            "text": "Please choose the most suitable topic below you're looking for.   User's Guide  Find out more about how to use every feature of Ratemarkt.  Api Docs  - Get integrated with Ratemarkt Client API.  SDK Docs  - Extend Ratemarkt Client API functionality using SDK.  API Specs  - Generic Supplier API Specs to take place as a Supplier in Ratemarkt", 
            "title": "Getting Started with Ratemark"
        }, 
        {
            "location": "/#questions", 
            "text": "We'd love to help you in any case you get stuck with Ratemarkt.\nPlease first find answers to the most encountered questions in our  F.A.Q  page or reach us by using our  Support Center  If you like, you may drop us an email at", 
            "title": "Questions?"
        }, 
        {
            "location": "/users_guide/getting_started/", 
            "text": "", 
            "title": "Getting Started"
        }, 
        {
            "location": "/api_docs/getting_started/", 
            "text": "Getting Started\n\n\nWelcome to Ratemarkt Client API \n\n\nIntroduction\n\n\nRatemarkt Client API is a quite intuitive HTTP based JSON API designed to make it very easy to get integrated with Ratemarkt as a client.\n\n\nIt just requires a single API key put in HTTP headers to get authenticated and introduces only a few resources in total to get all the job done with ease.\n\n\nLocation\n\n\nRatemarkt API is currently located at \napi.ratemarkt.com\n domain under \nv1\n directory of which the directory name also denotes the current API version you use.\n\n\nAny API call requires a secure \nHTTPS\n connection (\nHTTP\n over \nSSL\n) and must be authenticated by using an API key to get granted for API resources.\n\n\nHere is the base url for any API call.\n\n\n1\nhttps://api.ratemarkt.com/v1/\n\n\n\n\n\n\nFor instance, you should call the url below for check hotels endpoint.\n\n\n1\nhttps://api.ratemarkt.com/v1/checkhotels\n\n\n\n\n\n\nAuthentication\n\n\nIn order to get autheticated against Ratemarkt API please see \nAuthentication\n page. Once you get authenticated you will be able to access the resources below.\n\n\nResources\n\n\nAll the API resources below accepts a JSON query object via HTTP post method for the sake of simplicity.\n\n\n\n    \n\n        \n\n        \n\n        \n\n    \n\n    \n\n        \n\n            \nName\n\n            \nResource Path\n\n            \nDescription\n\n        \n\n    \n\n    \n\n        \n\n            \nCheck Hotels\n\n            \n/checkhotels\n\n            \nGet availabile hotels by using a destination id or a list of hotel codes.\n\n        \n\n        \n\n            \nCheck Hotel\n\n            \n/checkhotel\n\n            \nSingle hotel availability for more recent data.\n\n        \n\n        \n\n            \nCheck Rate\n\n            \n/checkrate\n\n            \nSingle rate availability with the most recent data.\n\n        \n\n        \n\n            \nBook Rate\n\n            \n/bookrate\n\n            \nMake a booking from a selected rate by using its rate key.\n\n        \n\n        \n\n            \nCheck Booking\n\n            \n/checkbooking\n\n            \nQuery the booking status using either booking reference or client reference.\n\n        \n\n        \n\n            \nCancel Booking\n\n            \n/cancelbooking\n\n            \nCancel refered booking when desired.\n\n        \n\n    \n\n\n\n\n\nErrors\n\n\nTo see how Ratemarkt API handles exceptional situations and errors please refer to our \nErrors\n pages.\n\n\nClient Libraries\n\n\nAre you looking for a client library for your favorite programming language?\nThen you should take a look at our \nClient Libraries\n section .\n\n\nExample API Request / Response\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n$ curl -X POST -H \nAuthorization: Bearer \nYOUR_API_KEY_HERE\n https://api.ratemarkt.com/v1/checkrate -d\n{\n\n\n    \nrateKey\n: \n[Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|5pyO3Q|[jVOYrg|2|0]]\n\n\n}\n\n...\n\n{\n\n  \nhotel\n: \n{\n\n    \nhotelCode\n: \nd31d12\n,\n    \nhotelName\n: \nThe Marmara Taksim\n,\n    \ndestinationCode\n: \nc36ca9\n,\n    \ndestinationName\n: \nistanbul\n,\n    \ncountryCode\n: \nTR\n,\n    \nrates\n: \n[\n\n      \n{\n\n        \nrateType\n: \nNET\n,\n        \nrateKey\n: \n[Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|5pyO3Q|[jVOYrg|2|0]]\n,\n        \nnonrefundable\n: false,\n        \nboardName\n: \nBED AND BREAKFAST\n,\n        \nrate\n: \n591\n.19,\n        \ncurrency\n: \nEUR\n,\n        \nrooms\n: \n[\n\n          \n{\n\n            \nnumberOfAdults\n: \n2\n,\n            \nnumberOfChildren\n: \n0\n,\n            \nroomDescription\n: \nDOUBLE DELUXE CITY VIEW\n,\n            \nsequence\n: \n1\n\n          \n}\n\n        \n]\n,\n        \ncancellationPolicies\n: \n[\n\n          \n{\n\n            \namount\n: \n175\n.95,\n            \nfromDate\n: \n2017-07-19T23:59:00+03:00\n\n          \n}\n\n        \n]\n,\n        \nremarks\n: \nCONTRACT VALID FOR JUNIOR ROOM TYPES .  Check-in hour 15:00 - .\n,\n        \ncommission\n: null,\n        \nhotelCurrency\n: null,\n        \nhotelRate\n: null\n      \n}\n\n    \n]\n\n  \n}\n\n\n}", 
            "title": "Getting Started"
        }, 
        {
            "location": "/api_docs/getting_started/#getting-started", 
            "text": "Welcome to Ratemarkt Client API", 
            "title": "Getting Started"
        }, 
        {
            "location": "/api_docs/getting_started/#introduction", 
            "text": "Ratemarkt Client API is a quite intuitive HTTP based JSON API designed to make it very easy to get integrated with Ratemarkt as a client.  It just requires a single API key put in HTTP headers to get authenticated and introduces only a few resources in total to get all the job done with ease.", 
            "title": "Introduction"
        }, 
        {
            "location": "/api_docs/getting_started/#location", 
            "text": "Ratemarkt API is currently located at  api.ratemarkt.com  domain under  v1  directory of which the directory name also denotes the current API version you use.  Any API call requires a secure  HTTPS  connection ( HTTP  over  SSL ) and must be authenticated by using an API key to get granted for API resources.  Here is the base url for any API call.  1 https://api.ratemarkt.com/v1/   For instance, you should call the url below for check hotels endpoint.  1 https://api.ratemarkt.com/v1/checkhotels", 
            "title": "Location"
        }, 
        {
            "location": "/api_docs/getting_started/#authentication", 
            "text": "In order to get autheticated against Ratemarkt API please see  Authentication  page. Once you get authenticated you will be able to access the resources below.", 
            "title": "Authentication"
        }, 
        {
            "location": "/api_docs/getting_started/#resources", 
            "text": "All the API resources below accepts a JSON query object via HTTP post method for the sake of simplicity.  \n     \n         \n         \n         \n     \n     \n         \n             Name \n             Resource Path \n             Description \n         \n     \n     \n         \n             Check Hotels \n             /checkhotels \n             Get availabile hotels by using a destination id or a list of hotel codes. \n         \n         \n             Check Hotel \n             /checkhotel \n             Single hotel availability for more recent data. \n         \n         \n             Check Rate \n             /checkrate \n             Single rate availability with the most recent data. \n         \n         \n             Book Rate \n             /bookrate \n             Make a booking from a selected rate by using its rate key. \n         \n         \n             Check Booking \n             /checkbooking \n             Query the booking status using either booking reference or client reference. \n         \n         \n             Cancel Booking \n             /cancelbooking \n             Cancel refered booking when desired.", 
            "title": "Resources"
        }, 
        {
            "location": "/api_docs/getting_started/#errors", 
            "text": "To see how Ratemarkt API handles exceptional situations and errors please refer to our  Errors  pages.", 
            "title": "Errors"
        }, 
        {
            "location": "/api_docs/getting_started/#client-libraries", 
            "text": "Are you looking for a client library for your favorite programming language?\nThen you should take a look at our  Client Libraries  section .", 
            "title": "Client Libraries"
        }, 
        {
            "location": "/api_docs/getting_started/#example-api-request-response", 
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42 $ curl -X POST -H  Authorization: Bearer  YOUR_API_KEY_HERE  https://api.ratemarkt.com/v1/checkrate -d {       rateKey :  [Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|5pyO3Q|[jVOYrg|2|0]]  } \n... { \n   hotel :  { \n     hotelCode :  d31d12 ,\n     hotelName :  The Marmara Taksim ,\n     destinationCode :  c36ca9 ,\n     destinationName :  istanbul ,\n     countryCode :  TR ,\n     rates :  [ \n       { \n         rateType :  NET ,\n         rateKey :  [Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|5pyO3Q|[jVOYrg|2|0]] ,\n         nonrefundable : false,\n         boardName :  BED AND BREAKFAST ,\n         rate :  591 .19,\n         currency :  EUR ,\n         rooms :  [ \n           { \n             numberOfAdults :  2 ,\n             numberOfChildren :  0 ,\n             roomDescription :  DOUBLE DELUXE CITY VIEW ,\n             sequence :  1 \n           } \n         ] ,\n         cancellationPolicies :  [ \n           { \n             amount :  175 .95,\n             fromDate :  2017-07-19T23:59:00+03:00 \n           } \n         ] ,\n         remarks :  CONTRACT VALID FOR JUNIOR ROOM TYPES .  Check-in hour 15:00 - . ,\n         commission : null,\n         hotelCurrency : null,\n         hotelRate : null\n       } \n     ] \n   }  }", 
            "title": "Example API Request / Response"
        }, 
        {
            "location": "/api_docs/authentication/", 
            "text": "Authenitcation\n\n\nIntroduction\n\n\nIn order to get authenticated against Ratemarkt API you should first request an API Key from your Ratemarkt account holder.\n\n\n\n\nHow to Obtain an API Key\n\n\nPlease see \nClient Accounts\n at \nUser's Guide\n section on how to create a client account to generate API Key tied to that account.\n\n\n\n\n\n\nSecure you API Keys\n\n\nWhile the data on the network is transmitted over a secure connection to the Ratemarkt API servers, securing your API Keys in the wild is your own duty.\n\n\nPlease take care of your API keys and keep' em in highly secure environments otherwise attackers would get benefit from your keys on behalf of you once they capture them.\n\n\n\n\nOnce you obtain an API Key, the rest is quite easy though. Just put your API Key into your http headers while you make request to Ratemarkt API to able to get authenticated.\n\n\nExample\n\n\n1\n2\n$ curl -H \nAuthorization: Bearer \nYOUR_API_KEY_HERE\n\\\n    https://api.ratemarkt.com/v1/checkhotels\n -d\nREQUEST_BODY_JSON", 
            "title": "Authentication"
        }, 
        {
            "location": "/api_docs/authentication/#authenitcation", 
            "text": "", 
            "title": "Authenitcation"
        }, 
        {
            "location": "/api_docs/authentication/#introduction", 
            "text": "In order to get authenticated against Ratemarkt API you should first request an API Key from your Ratemarkt account holder.   How to Obtain an API Key  Please see  Client Accounts  at  User's Guide  section on how to create a client account to generate API Key tied to that account.    Secure you API Keys  While the data on the network is transmitted over a secure connection to the Ratemarkt API servers, securing your API Keys in the wild is your own duty.  Please take care of your API keys and keep' em in highly secure environments otherwise attackers would get benefit from your keys on behalf of you once they capture them.   Once you obtain an API Key, the rest is quite easy though. Just put your API Key into your http headers while you make request to Ratemarkt API to able to get authenticated.", 
            "title": "Introduction"
        }, 
        {
            "location": "/api_docs/authentication/#example", 
            "text": "1\n2 $ curl -H  Authorization: Bearer  YOUR_API_KEY_HERE \\\n    https://api.ratemarkt.com/v1/checkhotels  -d REQUEST_BODY_JSON", 
            "title": "Example"
        }, 
        {
            "location": "/api_docs/check_hotels/", 
            "text": "Check Hotels\n\n\nIntroduction\n\n\nYou can check for hotels available for any provided date range and pax information by specifying either a destination code or a list of hotel codes.\n\n\nThis resource is the first and the only required step before performing any booking but it is not the preferable way of doing because of higher probability of availability errors at the booking step.\n\n\n\n\nBeware of Availability Errors\n\n\nWe strongly recommend using \nCheck Hotel\n and \nCheck Rate\n resources for retrieving the most recent availability and price information for hotels to prevent availability failures at the time of booking.\n\n\n\n\nBecause of higher amount of traffic populated on this step, most suppliers and Ratemarkt itself by nature serves the most of the availability information from cache storages.\nServing from cache storages may cause outdated data being served and can be misleading for clients at the time of booking.\n\n\nSo it is highly recommended using further availability resources such as \nCheck Hotel\n and \nCheck Rate\n before proceeding to booking step in order to prevent booking failures caused by availability errors.\n\n\nDefinition\n\n\n1\nPOST https://api.ratemarkt.com/v1/checkhotels\n\n\n\n\n\n\nQuery Object\n\n\n\n    \n\n        \n\n        \n\n        \n\n        \n\n    \n\n    \n\n        \n\n            \nArgument\n\n            \nType\n\n            \nRequired\n\n            \nDescription\n\n        \n\n    \n\n    \n\n        \n\n            \ndestinationCode\n\n            \nstring\n\n            \noptional*\n\n            \nDestination code.\n\n        \n\n        \n\n            \nhotelCodes\n\n            \nlist[string]\n\n            \noptional*\n\n            \nList of hotel codes.\n\n        \n\n        \n\n            \ncheckin\n\n            \nstring\n\n            \nyes\n\n            \nYYYY-MM-DD\n (ISO 8601) formatted date string. Eg. 2017-11-12\n\n        \n\n        \n\n            \ncheckout\n\n            \nstring\n\n            \nyes\n\n            \nYYYY-MM-DD\n (ISO 8601) formatted date string. Eg. 2017-11-15\n\n        \n\n        \n\n            \npaxes\n\n            \nlist[Pax]\n\n            \nyes\n\n            \nList of pax objects. Each pax object corresponds to a room. Multi room queries need more than one pax object.\n\n        \n\n        \n\n            \nPax.numberOfAdults\n\n            \ninteger\n\n            \nyes\n\n            \nNumber of adults for the specified room.\n\n        \n\n        \n\n            \nPax.childrenAges\n\n            \nlist[integer]\n\n            \nyes\n\n            \nList of children ages for the specified room.\n\n        \n\n        \n\n            \ncurrency\n\n            \nstring\n\n            \nyes\n\n            \nThree letter currency code (ISO-4217). Only USD, EUR and GBP currencies are supported at the moment.\n\n        \n\n        \n\n            \nnationality\n\n            \nstring\n\n            \nyes\n\n            \nTwo letter country code (ISO 3166-1 alpha-2) for occupants passport nationality.\n\n        \n\n    \n\n\n\n\n\n\n\nAbout Optional* Arguments\n\n\nYou should provide either \ndestinationCode\n or \nhotelCodes\n argument to get your availability query work.\n\n\n\n\n\n\nBeware of Destination Based Queries\n\n\nSome popular travel destinations contain huge amount of hotels thus your queries may take much longer time then expected.\n\n\nWe strongly recommend hotel list based queries so that you can perform your queries for only the hotels you interested in and get back corresponding results in much shorter times rather than retrieving a bulk.\n\n\n\n\nExample Query Objects\n\n\nSingle room query for certain hotels\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n{\n\n    \nhotelCodes\n:\n \n[\n\n        \nd31d12\n,\n\n        \n69af45\n,\n\n        \n984767\n\n    \n],\n\n    \ncheckin\n:\n \n2017-07-22\n,\n\n    \ncheckout\n:\n \n2017-07-25\n,\n\n    \npaxes\n:\n \n[\n\n        \n{\n\n            \nchildrenAges\n:\n \n[],\n\n            \nnumberOfAdults\n:\n \n2\n\n        \n}\n\n    \n],\n\n    \ncurrency\n:\n \nUSD\n,\n\n    \nnationality\n:\n \nUS\n\n\n}\n\n\n\n\n\n\n\nMulti room query for a certain destination\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n{\n\n    \ndestinationCode\n:\n \nd31d12\n,\n\n    \ncheckin\n:\n \n2017-07-22\n,\n\n    \ncheckout\n:\n \n2017-07-25\n,\n   \n    \npaxes\n:\n \n[\n\n        \n{\n\n            \nchildrenAges\n:\n \n[],\n\n            \nnumberOfAdults\n:\n \n1\n\n        \n},\n\n        \n{\n\n            \nchildrenAges\n:\n \n[\n\n                \n3\n,\n\n                \n5\n\n            \n],\n\n            \nnumberOfAdults\n:\n \n2\n\n        \n}\n\n    \n],\n\n    \ncurrency\n:\n \nUSD\n,\n\n    \nnationality\n:\n \nUS\n\n\n}\n\n\n\n\n\n\n\nResult Object\n\n\n\n    \n\n        \n\n        \n\n        \n\n        \n\n    \n\n    \n\n        \n\n            \nArgument\n\n            \nType\n\n            \nNullable\n\n            \nDescription\n\n        \n\n    \n\n    \n\n        \n\n            \nhotels\n\n            \nlist[Hotel]\n\n            \nno\n\n            \nList of available hotels\n\n        \n\n                \n\n            \nHotel.hotelCode\n\n            \nstring\n\n            \nno\n\n            \nUnique hotel identifier\n\n        \n\n        \n\n            \nHotel.hotelName\n\n            \nstring\n\n            \nno\n\n            \nName of the hotel\n\n        \n\n        \n\n            \nHotel.destinationCode\n\n            \nstring\n\n            \nno\n\n            \nUnique destination identifier of the hotel\n\n        \n\n        \n\n            \nHotel.destinationName\n\n            \nstring\n\n            \nno\n\n            \nName of the destination\n\n        \n\n        \n\n            \nHotel.countryCode\n\n            \nstring\n\n            \nno\n\n            \nTwo letter country code (ISO 3166-1 alpha-2) of the hotel\n\n        \n\n        \n\n            \nHotel.rates\n\n            \nlist[Rate]\n\n            \nno\n\n            \nList of rate objects. Each rate corresponds to a hotel room combined with a service level which means a bookable product with a price for each hotel.\n\n        \n\n        \n\n            \nRate.rateType\n\n            \nstring\n\n            \nno\n\n            \nType of the rate. There are three types:\n                \n\n                    \nNET\n: This type of rate can be selled by applying any margin on top of it.\n\n                    \nSALE\n: Commissionable rate which should be selled exactly at the given rate.\n\n                    \nDIRECT\n: Commissionable rate which the amount is payed directly to the hotelier by the occupants at the time of arrival. \n\n                \n\n                For commissionable rates, the amount of commission for the merchant is denoted at \nRate.commission\n field.\n            \n\n        \n\n        \n\n            \nRate.rateKey\n\n            \nstring\n\n            \nno\n\n            \nUnique identifier for each rate.\n\n        \n\n        \n\n            \nRate.nonrefundable\n\n            \nboolean\n\n            \nyes\n\n            \n\n                Flag denoting whether the rate is refundable or not. It means that if any nonrefundable rate is booked, cancellation of that booking won't be refunded in any cases.\n\n                Value can be \nnull\n in some cases so please refer to the corresponding \nRate.cancellation_policies\n field for that rate for money refunding policy at the time of cancellation.\n            \n\n        \n\n        \n\n            \nRate.boardName\n\n            \nstring\n\n            \nno\n\n            \nBoarding type of the rate. It can be any arbitrary identifier depending on corresponding hotel's boarding policy.\n\n        \n\n        \n\n            \nRate.rate\n\n            \ndecimal\n\n            \nno\n\n            \nTotal amount of the rate at given currency specified in \nRate.currency\n field.\n\n        \n\n        \n\n            \nRate.currency\n\n            \nstring\n\n            \nno\n\n            \nThree letter currency code (ISO-4217) of the total amount for the rate specified in \nRate.rate\n field\n\n        \n\n        \n\n            \nRate.rooms\n\n            \nlist[Room]\n\n            \nno\n\n            \n\n                List of room objects.\n\n                \nPlease not that the number of rooms are not guaranteed to match the number of pax objects specified in \nmulti-pax\n queries.\n\n                Some rates might return single room separately to conform the number of paxes specified in the query while some might return multi rooms per rate.\n\n                \nIf you choose separate rates for your multi pax query you should perform individual bookings for each of those rates separately.\n\n            \n\n        \n\n        \n\n            \nRoom.numberOfAdults\n\n            \ninteger\n\n            \nno\n\n            \nMaximum number of adults can fit into this room\n\n        \n\n        \n\n            \nRoom.childrenAges\n\n            \nlist[integer]\n\n            \nno\n\n            \nChildren with specified ages can be accepted for this room.\n\n        \n\n        \n\n            \nRoom.roomDescription\n\n            \nstring\n\n            \nno\n\n            \nAny arbitrary description for this room which the hotelier specified.\n\n        \n\n        \n\n            \nRoom.roomSequence\n\n            \ninteger\n\n            \nno\n\n            \nRoom sequence identifier which is useful at the time of booking in order to specify which occupant set will be matched with which room.\n\n        \n\n        \n\n            \nRate.cancellationPolicies\n\n            \nlist[CancellationPolicy]\n\n            \nno\n\n            \n\n                List of CancellationPolicy objects.\n\n                Cancellation policies indicates the amount of penalty charged and deducted from the total refund amount of the booking at the time of cancellation performed after the specified date and time.\n            \n\n        \n\n        \n\n            \nCancellationPolicy.amount\n\n            \ndecimal\n\n            \nno\n\n            \nPenalty amount in rate's currency specified in \nRate.currency\n field\n\n        \n\n        \n\n            \nCancellationPolicy.fromDate\n\n            \nstring\n\n            \nno\n\n            \nOffset date time string in \nYYYY-MM-DDThh:mmTZD\n (ISO 8601) format indicating from when the polciy applied.\n\n        \n\n        \n\n            \nRate.remarks\n\n            \nstring\n\n            \nyes\n\n            \nAny comments, warnings or policies applied by the hotel displayed here if available.\n\n        \n\n        \n\n            \nRate.commission\n\n            \ndecimal\n\n            \nyes\n\n            \nAmount of comission specified for commissionable rates.\n\n        \n\n        \n\n            \nRate.hotelRate\n\n            \ndecimal\n\n            \nyes\n\n            \n\n                Total amount of rate in hotelier's currency specified in \nhotelCurrency\n field which will be payed to the hotelier by the occupants at the time of arrival.\n                This field should not be \nnull\n when the \nRate.rateType\n is \nDIRECT\n\n            \n\n        \n\n        \n\n            \nRate.hotelCurrency\n\n            \nstring\n\n            \nyes\n\n            \nThree letter currency code (ISO-4217) of the total amount for the hotel rate specified in \nRate.hotelRate\n field\n\n        \n\n\n\n\n\nExample Result Objects\n\n\nSingle Room Result Object\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n{\n\n    \nhotels\n:\n \n[\n\n        \n{\n\n            \ncountryCode\n:\n \nTR\n,\n\n            \ndestinationCode\n:\n \nc36ca9\n,\n\n            \ndestinationName\n:\n \nistanbul\n,\n\n            \nhotelCode\n:\n \nd31d12\n,\n\n            \nhotelName\n:\n \nThe Marmara Taksim\n,\n\n            \nrates\n:\n \n[\n\n                \n{\n\n                    \nboardName\n:\n \nROOM ONLY\n,\n\n                    \ncancellationPolicies\n:\n \n[\n\n                        \n{\n\n                            \namount\n:\n \n146.78\n,\n\n                            \nfromDate\n:\n \n2017-07-19T23:59:00+03:00\n\n                        \n}\n\n                    \n],\n\n                    \ncommission\n:\n \nnull\n,\n\n                    \ncurrency\n:\n \nEUR\n,\n\n                    \nhotelCurrency\n:\n \nnull\n,\n\n                    \nhotelRate\n:\n \nnull\n,\n\n                    \nnonrefundable\n:\n \nfalse\n,\n\n                    \nrate\n:\n \n493.18\n,\n\n                    \nrateKey\n:\n \n[Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|Prabrg|[jVOYrg|2|0]]\n,\n\n                    \nrateType\n:\n \nNET\n,\n\n                    \nremarks\n:\n \nnull\n,\n\n                    \nrooms\n:\n \n[\n\n                        \n{\n\n                            \nnumberOfAdults\n:\n \n2\n,\n\n                            \nnumberOfChildren\n:\n \n0\n,\n\n                            \nroomDescription\n:\n \nDOUBLE DELUXE CITY VIEW\n,\n\n                            \nsequence\n:\n \n1\n\n                        \n}\n\n                    \n]\n\n                \n},\n\n                \n{\n\n                    \nboardName\n:\n \nROOM ONLY\n,\n\n                    \ncancellationPolicies\n:\n \n[\n\n                        \n{\n\n                            \namount\n:\n \n174.13\n,\n\n                            \nfromDate\n:\n \n2017-07-19T23:59:00+03:00\n\n                        \n}\n\n                    \n],\n\n                    \ncommission\n:\n \nnull\n,\n\n                    \ncurrency\n:\n \nEUR\n,\n\n                    \nhotelCurrency\n:\n \nnull\n,\n\n                    \nhotelRate\n:\n \nnull\n,\n\n                    \nnonrefundable\n:\n \nfalse\n,\n\n                    \nrate\n:\n \n585.08\n,\n\n                    \nrateKey\n:\n \n[Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|Prabrg|[jVOYrg|2|0]]\n,\n\n                    \nrateType\n:\n \nNET\n,\n\n                    \nremarks\n:\n \nnull\n,\n\n                    \nrooms\n:\n \n[\n\n                        \n{\n\n                            \nnumberOfAdults\n:\n \n2\n,\n\n                            \nnumberOfChildren\n:\n \n0\n,\n\n                            \nroomDescription\n:\n \nDOUBLE DELUXE CITY VIEW\n,\n\n                            \nsequence\n:\n \n1\n\n                        \n}\n\n                    \n]\n\n                \n},\n\n                \n{\n\n                    \nboardName\n:\n \nBED AND BREAKFAST\n,\n\n                    \ncancellationPolicies\n:\n \n[\n\n                        \n{\n\n                            \namount\n:\n \n175.94\n,\n\n                            \nfromDate\n:\n \n2017-07-19T23:59:00+03:00\n\n                        \n}\n\n                    \n],\n\n                    \ncommission\n:\n \nnull\n,\n\n                    \ncurrency\n:\n \nEUR\n,\n\n                    \nhotelCurrency\n:\n \nnull\n,\n\n                    \nhotelRate\n:\n \nnull\n,\n\n                    \nnonrefundable\n:\n \nfalse\n,\n\n                    \nrate\n:\n \n591.19\n,\n\n                    \nrateKey\n:\n \n[Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|5pyO3Q|[jVOYrg|2|0]]\n,\n\n                    \nrateType\n:\n \nNET\n,\n\n                    \nremarks\n:\n \nnull\n,\n\n                    \nrooms\n:\n \n[\n\n                        \n{\n\n                            \nnumberOfAdults\n:\n \n2\n,\n\n                            \nnumberOfChildren\n:\n \n0\n,\n\n                            \nroomDescription\n:\n \nDOUBLE DELUXE CITY VIEW\n,\n\n                            \nsequence\n:\n \n1\n\n                        \n}\n\n                    \n]\n\n                \n}\n\n            \n]\n\n        \n}\n\n    \n]\n\n\n}", 
            "title": "Check Hotels"
        }, 
        {
            "location": "/api_docs/check_hotels/#check-hotels", 
            "text": "", 
            "title": "Check Hotels"
        }, 
        {
            "location": "/api_docs/check_hotels/#introduction", 
            "text": "You can check for hotels available for any provided date range and pax information by specifying either a destination code or a list of hotel codes.  This resource is the first and the only required step before performing any booking but it is not the preferable way of doing because of higher probability of availability errors at the booking step.   Beware of Availability Errors  We strongly recommend using  Check Hotel  and  Check Rate  resources for retrieving the most recent availability and price information for hotels to prevent availability failures at the time of booking.   Because of higher amount of traffic populated on this step, most suppliers and Ratemarkt itself by nature serves the most of the availability information from cache storages.\nServing from cache storages may cause outdated data being served and can be misleading for clients at the time of booking.  So it is highly recommended using further availability resources such as  Check Hotel  and  Check Rate  before proceeding to booking step in order to prevent booking failures caused by availability errors.", 
            "title": "Introduction"
        }, 
        {
            "location": "/api_docs/check_hotels/#definition", 
            "text": "1 POST https://api.ratemarkt.com/v1/checkhotels", 
            "title": "Definition"
        }, 
        {
            "location": "/api_docs/check_hotels/#query-object", 
            "text": "Argument \n             Type \n             Required \n             Description \n         \n     \n     \n         \n             destinationCode \n             string \n             optional* \n             Destination code. \n         \n         \n             hotelCodes \n             list[string] \n             optional* \n             List of hotel codes. \n         \n         \n             checkin \n             string \n             yes \n             YYYY-MM-DD  (ISO 8601) formatted date string. Eg. 2017-11-12 \n         \n         \n             checkout \n             string \n             yes \n             YYYY-MM-DD  (ISO 8601) formatted date string. Eg. 2017-11-15 \n         \n         \n             paxes \n             list[Pax] \n             yes \n             List of pax objects. Each pax object corresponds to a room. Multi room queries need more than one pax object. \n         \n         \n             Pax.numberOfAdults \n             integer \n             yes \n             Number of adults for the specified room. \n         \n         \n             Pax.childrenAges \n             list[integer] \n             yes \n             List of children ages for the specified room. \n         \n         \n             currency \n             string \n             yes \n             Three letter currency code (ISO-4217). Only USD, EUR and GBP currencies are supported at the moment. \n         \n         \n             nationality \n             string \n             yes \n             Two letter country code (ISO 3166-1 alpha-2) for occupants passport nationality. \n         \n        About Optional* Arguments  You should provide either  destinationCode  or  hotelCodes  argument to get your availability query work.    Beware of Destination Based Queries  Some popular travel destinations contain huge amount of hotels thus your queries may take much longer time then expected.  We strongly recommend hotel list based queries so that you can perform your queries for only the hotels you interested in and get back corresponding results in much shorter times rather than retrieving a bulk.", 
            "title": "Query Object"
        }, 
        {
            "location": "/api_docs/check_hotels/#example-query-objects", 
            "text": "", 
            "title": "Example Query Objects"
        }, 
        {
            "location": "/api_docs/check_hotels/#single-room-query-for-certain-hotels", 
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17 { \n     hotelCodes :   [ \n         d31d12 , \n         69af45 , \n         984767 \n     ], \n     checkin :   2017-07-22 , \n     checkout :   2017-07-25 , \n     paxes :   [ \n         { \n             childrenAges :   [], \n             numberOfAdults :   2 \n         } \n     ], \n     currency :   USD , \n     nationality :   US  }", 
            "title": "Single room query for certain hotels"
        }, 
        {
            "location": "/api_docs/check_hotels/#multi-room-query-for-a-certain-destination", 
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20 { \n     destinationCode :   d31d12 , \n     checkin :   2017-07-22 , \n     checkout :   2017-07-25 ,    \n     paxes :   [ \n         { \n             childrenAges :   [], \n             numberOfAdults :   1 \n         }, \n         { \n             childrenAges :   [ \n                 3 , \n                 5 \n             ], \n             numberOfAdults :   2 \n         } \n     ], \n     currency :   USD , \n     nationality :   US  }", 
            "title": "Multi room query for a certain destination"
        }, 
        {
            "location": "/api_docs/check_hotels/#result-object", 
            "text": "Argument \n             Type \n             Nullable \n             Description \n         \n     \n     \n         \n             hotels \n             list[Hotel] \n             no \n             List of available hotels \n         \n                 \n             Hotel.hotelCode \n             string \n             no \n             Unique hotel identifier \n         \n         \n             Hotel.hotelName \n             string \n             no \n             Name of the hotel \n         \n         \n             Hotel.destinationCode \n             string \n             no \n             Unique destination identifier of the hotel \n         \n         \n             Hotel.destinationName \n             string \n             no \n             Name of the destination \n         \n         \n             Hotel.countryCode \n             string \n             no \n             Two letter country code (ISO 3166-1 alpha-2) of the hotel \n         \n         \n             Hotel.rates \n             list[Rate] \n             no \n             List of rate objects. Each rate corresponds to a hotel room combined with a service level which means a bookable product with a price for each hotel. \n         \n         \n             Rate.rateType \n             string \n             no \n             Type of the rate. There are three types:\n                 \n                     NET : This type of rate can be selled by applying any margin on top of it. \n                     SALE : Commissionable rate which should be selled exactly at the given rate. \n                     DIRECT : Commissionable rate which the amount is payed directly to the hotelier by the occupants at the time of arrival.  \n                 \n                For commissionable rates, the amount of commission for the merchant is denoted at  Rate.commission  field.\n             \n         \n         \n             Rate.rateKey \n             string \n             no \n             Unique identifier for each rate. \n         \n         \n             Rate.nonrefundable \n             boolean \n             yes \n             \n                Flag denoting whether the rate is refundable or not. It means that if any nonrefundable rate is booked, cancellation of that booking won't be refunded in any cases. \n                Value can be  null  in some cases so please refer to the corresponding  Rate.cancellation_policies  field for that rate for money refunding policy at the time of cancellation.\n             \n         \n         \n             Rate.boardName \n             string \n             no \n             Boarding type of the rate. It can be any arbitrary identifier depending on corresponding hotel's boarding policy. \n         \n         \n             Rate.rate \n             decimal \n             no \n             Total amount of the rate at given currency specified in  Rate.currency  field. \n         \n         \n             Rate.currency \n             string \n             no \n             Three letter currency code (ISO-4217) of the total amount for the rate specified in  Rate.rate  field \n         \n         \n             Rate.rooms \n             list[Room] \n             no \n             \n                List of room objects. \n                 Please not that the number of rooms are not guaranteed to match the number of pax objects specified in  multi-pax  queries. \n                Some rates might return single room separately to conform the number of paxes specified in the query while some might return multi rooms per rate. \n                 If you choose separate rates for your multi pax query you should perform individual bookings for each of those rates separately. \n             \n         \n         \n             Room.numberOfAdults \n             integer \n             no \n             Maximum number of adults can fit into this room \n         \n         \n             Room.childrenAges \n             list[integer] \n             no \n             Children with specified ages can be accepted for this room. \n         \n         \n             Room.roomDescription \n             string \n             no \n             Any arbitrary description for this room which the hotelier specified. \n         \n         \n             Room.roomSequence \n             integer \n             no \n             Room sequence identifier which is useful at the time of booking in order to specify which occupant set will be matched with which room. \n         \n         \n             Rate.cancellationPolicies \n             list[CancellationPolicy] \n             no \n             \n                List of CancellationPolicy objects. \n                Cancellation policies indicates the amount of penalty charged and deducted from the total refund amount of the booking at the time of cancellation performed after the specified date and time.\n             \n         \n         \n             CancellationPolicy.amount \n             decimal \n             no \n             Penalty amount in rate's currency specified in  Rate.currency  field \n         \n         \n             CancellationPolicy.fromDate \n             string \n             no \n             Offset date time string in  YYYY-MM-DDThh:mmTZD  (ISO 8601) format indicating from when the polciy applied. \n         \n         \n             Rate.remarks \n             string \n             yes \n             Any comments, warnings or policies applied by the hotel displayed here if available. \n         \n         \n             Rate.commission \n             decimal \n             yes \n             Amount of comission specified for commissionable rates. \n         \n         \n             Rate.hotelRate \n             decimal \n             yes \n             \n                Total amount of rate in hotelier's currency specified in  hotelCurrency  field which will be payed to the hotelier by the occupants at the time of arrival.\n                This field should not be  null  when the  Rate.rateType  is  DIRECT \n             \n         \n         \n             Rate.hotelCurrency \n             string \n             yes \n             Three letter currency code (ISO-4217) of the total amount for the hotel rate specified in  Rate.hotelRate  field", 
            "title": "Result Object"
        }, 
        {
            "location": "/api_docs/check_hotels/#example-result-objects", 
            "text": "", 
            "title": "Example Result Objects"
        }, 
        {
            "location": "/api_docs/check_hotels/#single-room-result-object", 
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91 { \n     hotels :   [ \n         { \n             countryCode :   TR , \n             destinationCode :   c36ca9 , \n             destinationName :   istanbul , \n             hotelCode :   d31d12 , \n             hotelName :   The Marmara Taksim , \n             rates :   [ \n                 { \n                     boardName :   ROOM ONLY , \n                     cancellationPolicies :   [ \n                         { \n                             amount :   146.78 , \n                             fromDate :   2017-07-19T23:59:00+03:00 \n                         } \n                     ], \n                     commission :   null , \n                     currency :   EUR , \n                     hotelCurrency :   null , \n                     hotelRate :   null , \n                     nonrefundable :   false , \n                     rate :   493.18 , \n                     rateKey :   [Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|Prabrg|[jVOYrg|2|0]] , \n                     rateType :   NET , \n                     remarks :   null , \n                     rooms :   [ \n                         { \n                             numberOfAdults :   2 , \n                             numberOfChildren :   0 , \n                             roomDescription :   DOUBLE DELUXE CITY VIEW , \n                             sequence :   1 \n                         } \n                     ] \n                 }, \n                 { \n                     boardName :   ROOM ONLY , \n                     cancellationPolicies :   [ \n                         { \n                             amount :   174.13 , \n                             fromDate :   2017-07-19T23:59:00+03:00 \n                         } \n                     ], \n                     commission :   null , \n                     currency :   EUR , \n                     hotelCurrency :   null , \n                     hotelRate :   null , \n                     nonrefundable :   false , \n                     rate :   585.08 , \n                     rateKey :   [Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|Prabrg|[jVOYrg|2|0]] , \n                     rateType :   NET , \n                     remarks :   null , \n                     rooms :   [ \n                         { \n                             numberOfAdults :   2 , \n                             numberOfChildren :   0 , \n                             roomDescription :   DOUBLE DELUXE CITY VIEW , \n                             sequence :   1 \n                         } \n                     ] \n                 }, \n                 { \n                     boardName :   BED AND BREAKFAST , \n                     cancellationPolicies :   [ \n                         { \n                             amount :   175.94 , \n                             fromDate :   2017-07-19T23:59:00+03:00 \n                         } \n                     ], \n                     commission :   null , \n                     currency :   EUR , \n                     hotelCurrency :   null , \n                     hotelRate :   null , \n                     nonrefundable :   false , \n                     rate :   591.19 , \n                     rateKey :   [Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|5pyO3Q|[jVOYrg|2|0]] , \n                     rateType :   NET , \n                     remarks :   null , \n                     rooms :   [ \n                         { \n                             numberOfAdults :   2 , \n                             numberOfChildren :   0 , \n                             roomDescription :   DOUBLE DELUXE CITY VIEW , \n                             sequence :   1 \n                         } \n                     ] \n                 } \n             ] \n         } \n     ]  }", 
            "title": "Single Room Result Object"
        }, 
        {
            "location": "/api_docs/check_hotel/", 
            "text": "Introduction\n\n\nCheck single hotel availability for any given date range and pax information. This method is intented to provide cacheless, most recent availability data for requested hotel. If the hotel has no any single rate for the query submitted, client receives not available error.\n\n\nDefinition\n\n\n1\nPOST https://api.ratemarkt.com/v1/checkhotel\n\n\n\n\n\n\nQuery Object\n\n\n\n    \n\n        \n\n        \n\n        \n\n        \n\n    \n\n    \n\n        \n\n            \nArgument\n\n            \nType\n\n            \nRequired\n\n            \nDescription\n\n        \n\n    \n\n    \n\n        \n\n            \nhotelCode\n\n            \nstring\n\n            \nyes\n\n            \nUnique hotel identifier\n\n        \n\n        \n\n            \ncheckin\n\n            \nstring\n\n            \nyes\n\n            \nYYYY-MM-DD\n (ISO 8601) formatted date string. Eg. 2017-11-12\n\n        \n\n        \n\n            \ncheckout\n\n            \nstring\n\n            \nyes\n\n            \nYYYY-MM-DD\n (ISO 8601) formatted date string. Eg. 2017-11-15\n\n        \n\n        \n\n            \npaxes\n\n            \nlist[Pax]\n\n            \nyes\n\n            \nList of pax objects. Each pax object corresponds to a room. Multi room queries need more than one pax object.\n\n        \n\n        \n\n            \nPax.numberOfAdults\n\n            \ninteger\n\n            \nyes\n\n            \nNumber of adults for the specified room.\n\n        \n\n        \n\n            \nPax.childrenAges\n\n            \nlist[integer]\n\n            \nyes\n\n            \nList of children ages for the specified room.\n\n        \n\n        \n\n            \ncurrency\n\n            \nstring\n\n            \nyes\n\n            \nThree letter currency code (ISO-4217). Only USD, EUR and GBP currencies are supported at the moment.\n\n        \n\n        \n\n            \nnationality\n\n            \nstring\n\n            \nyes\n\n            \nTwo letter country code (ISO 3166-1 alpha-2) for occupants passport nationality.\n\n        \n\n    \n\n\n\n\n\nExample Query Objects\n\n\nSingle room query for the specified hotel\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n{\n\n    \nhotelCode\n:\n \nd31d12\n,\n\n    \ncheckin\n:\n \n2017-07-22\n,\n\n    \ncheckout\n:\n \n2017-07-25\n,\n\n    \npaxes\n:\n \n[{\n\n        \nnumberOfAdults\n:\n \n2\n,\n\n        \nchildrenAges\n:\n \n[]\n\n    \n}],\n\n    \ncurrency\n:\n \nUSD\n,\n\n    \nnationality\n:\n \nUS\n\n\n}\n\n\n\n\n\n\n\nMulti room query for the specified hotel\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n{\n\n    \ncheckin\n:\n \n2017-07-22\n,\n\n    \ncheckout\n:\n \n2017-07-25\n,\n\n    \ncurrency\n:\n \nUSD\n,\n\n    \nhotelCode\n:\n \nd31d12\n,\n\n    \nnationality\n:\n \nUS\n,\n\n    \npaxes\n:\n \n[\n\n        \n{\n\n            \nchildrenAges\n:\n \n[],\n\n            \nnumberOfAdults\n:\n \n1\n\n        \n},\n\n        \n{\n\n            \nchildrenAges\n:\n \n[\n\n                \n3\n,\n\n                \n5\n\n            \n],\n\n            \nnumberOfAdults\n:\n \n2\n\n        \n}\n\n    \n]\n\n\n}\n\n\n\n\n\n\n\nResult Object\n\n\n\n\nResult Object Hint\n\n\nWhile \nCheck Hotels\n resource returns a list of hotel objects, this resource returns a single hotel object using exactly the same attributes. So you may want to reuse the same json parser logic in your client application.\n\n\n\n\n\n    \n\n        \n\n        \n\n        \n\n        \n\n    \n\n    \n\n        \n\n            \nArgument\n\n            \nType\n\n            \nNullable\n\n            \nDescription\n\n        \n\n    \n\n    \n\n                \n\n            \nHotel.hotelCode\n\n            \nstring\n\n            \nno\n\n            \nUnique hotel identifier\n\n        \n\n        \n\n            \nHotel.hotelName\n\n            \nstring\n\n            \nno\n\n            \nName of the hotel\n\n        \n\n        \n\n            \nHotel.destinationCode\n\n            \nstring\n\n            \nno\n\n            \nUnique destination identifier of the hotel\n\n        \n\n        \n\n            \nHotel.destinationName\n\n            \nstring\n\n            \nno\n\n            \nName of the destination\n\n        \n\n        \n\n            \nHotel.countryCode\n\n            \nstring\n\n            \nno\n\n            \nTwo letter country code (ISO 3166-1 alpha-2) of the hotel\n\n        \n\n        \n\n            \nHotel.rates\n\n            \nlist[Rate]\n\n            \nno\n\n            \nList of rate objects. Each rate corresponds to a hotel room combined with a service level which means a bookable product with a price for each hotel.\n\n        \n\n        \n\n            \nRate.rateType\n\n            \nstring\n\n            \nno\n\n            \nType of the rate. There are three types:\n                \n\n                    \nNET\n: This type of rate can be selled by applying any margin on top of it.\n\n                    \nSALE\n: Commissionable rate which should be selled exactly at the given rate.\n\n                    \nDIRECT\n: Commissionable rate which the amount is payed directly to the hotelier by the occupants at the time of arrival. \n\n                \n\n                For commissionable rates, the amount of commission for the merchant is denoted at \nRate.commission\n field.\n            \n\n        \n\n        \n\n            \nRate.rateKey\n\n            \nstring\n\n            \nno\n\n            \nUnique identifier for each rate.\n\n        \n\n        \n\n            \nRate.nonrefundable\n\n            \nboolean\n\n            \nyes\n\n            \n\n                Flag denoting whether the rate is refundable or not. It means that if any nonrefundable rate is booked, cancellation of that booking won't be refunded in any cases.\n\n                Value can be \nnull\n in some cases so please refer to the corresponding \nRate.cancellation_policies\n field for that rate for money refunding policy at the time of cancellation.\n            \n\n        \n\n        \n\n            \nRate.boardName\n\n            \nstring\n\n            \nno\n\n            \nBoarding type of the rate. It can be any arbitrary identifier depending on corresponding hotel's boarding policy.\n\n        \n\n        \n\n            \nRate.rate\n\n            \ndecimal\n\n            \nno\n\n            \nTotal amount of the rate at given currency specified in \nRate.currency\n field.\n\n        \n\n        \n\n            \nRate.currency\n\n            \nstring\n\n            \nno\n\n            \nThree letter currency code (ISO-4217) of the total amount for the rate specified in \nRate.rate\n field\n\n        \n\n        \n\n            \nRate.rooms\n\n            \nlist[Room]\n\n            \nno\n\n            \n\n                List of room objects.\n\n                \nPlease not that the number of rooms are not guaranteed to match the number of pax objects specified in \nmulti-pax\n queries.\n\n                Some rates might return single room separately to conform the number of paxes specified in the query while some might return multi rooms per rate.\n\n                \nIf you choose separate rates for your multi pax query you should perform individual bookings for each of those rates separately.\n\n            \n\n        \n\n        \n\n            \nRoom.numberOfAdults\n\n            \ninteger\n\n            \nno\n\n            \nMaximum number of adults can fit into this room\n\n        \n\n        \n\n            \nRoom.childrenAges\n\n            \nlist[integer]\n\n            \nno\n\n            \nChildren with specified ages can be accepted for this room.\n\n        \n\n        \n\n            \nRoom.roomDescription\n\n            \nstring\n\n            \nno\n\n            \nAny arbitrary description for this room which the hotelier specified.\n\n        \n\n        \n\n            \nRoom.roomSequence\n\n            \ninteger\n\n            \nno\n\n            \nRoom sequence identifier which is useful at the time of booking in order to specify which occupant set will be matched with which room.\n\n        \n\n        \n\n            \nRate.cancellationPolicies\n\n            \nlist[CancellationPolicy]\n\n            \nno\n\n            \n\n                List of CancellationPolicy objects.\n\n                Cancellation policies indicates the amount of penalty charged and deducted from the total refund amount of the booking at the time of cancellation performed after the specified date and time.\n            \n\n        \n\n        \n\n            \nCancellationPolicy.amount\n\n            \ndecimal\n\n            \nno\n\n            \nPenalty amount in rate's currency specified in \nRate.currency\n field\n\n        \n\n        \n\n            \nCancellationPolicy.fromDate\n\n            \nstring\n\n            \nno\n\n            \nOffset date time string in \nYYYY-MM-DDThh:mmTZD\n (ISO 8601) format indicating from when the polciy applied.\n\n        \n\n        \n\n            \nRate.remarks\n\n            \nstring\n\n            \nyes\n\n            \nAny comments, warnings or policies applied by the hotel displayed here if available.\n\n        \n\n        \n\n            \nRate.commission\n\n            \ndecimal\n\n            \nyes\n\n            \nAmount of comission specified for commissionable rates.\n\n        \n\n        \n\n            \nRate.hotelRate\n\n            \ndecimal\n\n            \nyes\n\n            \n\n                Total amount of rate in hotelier's currency specified in \nhotelCurrency\n field which will be payed to the hotelier by the occupants at the time of arrival.\n                This field should not be \nnull\n when the \nRate.rateType\n is \nDIRECT\n\n            \n\n        \n\n        \n\n            \nRate.hotelCurrency\n\n            \nstring\n\n            \nyes\n\n            \nThree letter currency code (ISO-4217) of the total amount for the hotel rate specified in \nRate.hotelRate\n field\n\n        \n\n\n\n\n\nExample Result Objects\n\n\nSingle Room Result Object\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n{\n\n    \nhotel\n:\n \n{\n\n        \ncountryCode\n:\n \nTR\n,\n\n        \ndestinationCode\n:\n \nc36ca9\n,\n\n        \ndestinationName\n:\n \nistanbul\n,\n\n        \nhotelCode\n:\n \nd31d12\n,\n\n        \nhotelName\n:\n \nThe Marmara Taksim\n,\n\n        \nrates\n:\n \n[\n\n            \n{\n\n                \nboardName\n:\n \nROOM ONLY\n,\n\n                \ncancellationPolicies\n:\n \n[\n\n                    \n{\n\n                        \namount\n:\n \n146.78\n,\n\n                        \nfromDate\n:\n \n2017-07-19T23:59:00+03:00\n\n                    \n}\n\n                \n],\n\n                \ncommission\n:\n \nnull\n,\n\n                \ncurrency\n:\n \nEUR\n,\n\n                \nhotelCurrency\n:\n \nnull\n,\n\n                \nhotelRate\n:\n \nnull\n,\n\n                \nnonrefundable\n:\n \nfalse\n,\n\n                \nrate\n:\n \n493.18\n,\n\n                \nrateKey\n:\n \n[Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|Prabrg|[jVOYrg|2|0]]\n,\n\n                \nrateType\n:\n \nNET\n,\n\n                \nremarks\n:\n \nnull\n,\n\n                \nrooms\n:\n \n[\n\n                    \n{\n\n                        \nnumberOfAdults\n:\n \n2\n,\n\n                        \nnumberOfChildren\n:\n \n0\n,\n\n                        \nroomDescription\n:\n \nDOUBLE DELUXE CITY VIEW\n,\n\n                        \nsequence\n:\n \n1\n\n                    \n}\n\n                \n]\n\n            \n},\n\n            \n{\n\n                \nboardName\n:\n \nROOM ONLY\n,\n\n                \ncancellationPolicies\n:\n \n[\n\n                    \n{\n\n                        \namount\n:\n \n174.13\n,\n\n                        \nfromDate\n:\n \n2017-07-19T23:59:00+03:00\n\n                    \n}\n\n                \n],\n\n                \ncommission\n:\n \nnull\n,\n\n                \ncurrency\n:\n \nEUR\n,\n\n                \nhotelCurrency\n:\n \nnull\n,\n\n                \nhotelRate\n:\n \nnull\n,\n\n                \nnonrefundable\n:\n \nfalse\n,\n\n                \nrate\n:\n \n585.08\n,\n\n                \nrateKey\n:\n \n[Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|Prabrg|[jVOYrg|2|0]]\n,\n\n                \nrateType\n:\n \nNET\n,\n\n                \nremarks\n:\n \nnull\n,\n\n                \nrooms\n:\n \n[\n\n                    \n{\n\n                        \nnumberOfAdults\n:\n \n2\n,\n\n                        \nnumberOfChildren\n:\n \n0\n,\n\n                        \nroomDescription\n:\n \nDOUBLE DELUXE CITY VIEW\n,\n\n                        \nsequence\n:\n \n1\n\n                    \n}\n\n                \n]\n\n            \n},\n\n            \n{\n\n                \nboardName\n:\n \nBED AND BREAKFAST\n,\n\n                \ncancellationPolicies\n:\n \n[\n\n                    \n{\n\n                        \namount\n:\n \n175.94\n,\n\n                        \nfromDate\n:\n \n2017-07-19T23:59:00+03:00\n\n                    \n}\n\n                \n],\n\n                \ncommission\n:\n \nnull\n,\n\n                \ncurrency\n:\n \nEUR\n,\n\n                \nhotelCurrency\n:\n \nnull\n,\n\n                \nhotelRate\n:\n \nnull\n,\n\n                \nnonrefundable\n:\n \nfalse\n,\n\n                \nrate\n:\n \n591.19\n,\n\n                \nrateKey\n:\n \n[Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|5pyO3Q|[jVOYrg|2|0]]\n,\n\n                \nrateType\n:\n \nNET\n,\n\n                \nremarks\n:\n \nnull\n,\n\n                \nrooms\n:\n \n[\n\n                    \n{\n\n                        \nnumberOfAdults\n:\n \n2\n,\n\n                        \nnumberOfChildren\n:\n \n0\n,\n\n                        \nroomDescription\n:\n \nDOUBLE DELUXE CITY VIEW\n,\n\n                        \nsequence\n:\n \n1\n\n                    \n}\n\n                \n]\n\n            \n}\n\n        \n]\n\n    \n}\n\n\n}", 
            "title": "Check Hotel"
        }, 
        {
            "location": "/api_docs/check_hotel/#introduction", 
            "text": "Check single hotel availability for any given date range and pax information. This method is intented to provide cacheless, most recent availability data for requested hotel. If the hotel has no any single rate for the query submitted, client receives not available error.", 
            "title": "Introduction"
        }, 
        {
            "location": "/api_docs/check_hotel/#definition", 
            "text": "1 POST https://api.ratemarkt.com/v1/checkhotel", 
            "title": "Definition"
        }, 
        {
            "location": "/api_docs/check_hotel/#query-object", 
            "text": "Argument \n             Type \n             Required \n             Description \n         \n     \n     \n         \n             hotelCode \n             string \n             yes \n             Unique hotel identifier \n         \n         \n             checkin \n             string \n             yes \n             YYYY-MM-DD  (ISO 8601) formatted date string. Eg. 2017-11-12 \n         \n         \n             checkout \n             string \n             yes \n             YYYY-MM-DD  (ISO 8601) formatted date string. Eg. 2017-11-15 \n         \n         \n             paxes \n             list[Pax] \n             yes \n             List of pax objects. Each pax object corresponds to a room. Multi room queries need more than one pax object. \n         \n         \n             Pax.numberOfAdults \n             integer \n             yes \n             Number of adults for the specified room. \n         \n         \n             Pax.childrenAges \n             list[integer] \n             yes \n             List of children ages for the specified room. \n         \n         \n             currency \n             string \n             yes \n             Three letter currency code (ISO-4217). Only USD, EUR and GBP currencies are supported at the moment. \n         \n         \n             nationality \n             string \n             yes \n             Two letter country code (ISO 3166-1 alpha-2) for occupants passport nationality.", 
            "title": "Query Object"
        }, 
        {
            "location": "/api_docs/check_hotel/#example-query-objects", 
            "text": "", 
            "title": "Example Query Objects"
        }, 
        {
            "location": "/api_docs/check_hotel/#single-room-query-for-the-specified-hotel", 
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11 { \n     hotelCode :   d31d12 , \n     checkin :   2017-07-22 , \n     checkout :   2017-07-25 , \n     paxes :   [{ \n         numberOfAdults :   2 , \n         childrenAges :   [] \n     }], \n     currency :   USD , \n     nationality :   US  }", 
            "title": "Single room query for the specified hotel"
        }, 
        {
            "location": "/api_docs/check_hotel/#multi-room-query-for-the-specified-hotel", 
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20 { \n     checkin :   2017-07-22 , \n     checkout :   2017-07-25 , \n     currency :   USD , \n     hotelCode :   d31d12 , \n     nationality :   US , \n     paxes :   [ \n         { \n             childrenAges :   [], \n             numberOfAdults :   1 \n         }, \n         { \n             childrenAges :   [ \n                 3 , \n                 5 \n             ], \n             numberOfAdults :   2 \n         } \n     ]  }", 
            "title": "Multi room query for the specified hotel"
        }, 
        {
            "location": "/api_docs/check_hotel/#result-object", 
            "text": "Result Object Hint  While  Check Hotels  resource returns a list of hotel objects, this resource returns a single hotel object using exactly the same attributes. So you may want to reuse the same json parser logic in your client application.   \n     \n         \n         \n         \n         \n     \n     \n         \n             Argument \n             Type \n             Nullable \n             Description \n         \n     \n     \n                 \n             Hotel.hotelCode \n             string \n             no \n             Unique hotel identifier \n         \n         \n             Hotel.hotelName \n             string \n             no \n             Name of the hotel \n         \n         \n             Hotel.destinationCode \n             string \n             no \n             Unique destination identifier of the hotel \n         \n         \n             Hotel.destinationName \n             string \n             no \n             Name of the destination \n         \n         \n             Hotel.countryCode \n             string \n             no \n             Two letter country code (ISO 3166-1 alpha-2) of the hotel \n         \n         \n             Hotel.rates \n             list[Rate] \n             no \n             List of rate objects. Each rate corresponds to a hotel room combined with a service level which means a bookable product with a price for each hotel. \n         \n         \n             Rate.rateType \n             string \n             no \n             Type of the rate. There are three types:\n                 \n                     NET : This type of rate can be selled by applying any margin on top of it. \n                     SALE : Commissionable rate which should be selled exactly at the given rate. \n                     DIRECT : Commissionable rate which the amount is payed directly to the hotelier by the occupants at the time of arrival.  \n                 \n                For commissionable rates, the amount of commission for the merchant is denoted at  Rate.commission  field.\n             \n         \n         \n             Rate.rateKey \n             string \n             no \n             Unique identifier for each rate. \n         \n         \n             Rate.nonrefundable \n             boolean \n             yes \n             \n                Flag denoting whether the rate is refundable or not. It means that if any nonrefundable rate is booked, cancellation of that booking won't be refunded in any cases. \n                Value can be  null  in some cases so please refer to the corresponding  Rate.cancellation_policies  field for that rate for money refunding policy at the time of cancellation.\n             \n         \n         \n             Rate.boardName \n             string \n             no \n             Boarding type of the rate. It can be any arbitrary identifier depending on corresponding hotel's boarding policy. \n         \n         \n             Rate.rate \n             decimal \n             no \n             Total amount of the rate at given currency specified in  Rate.currency  field. \n         \n         \n             Rate.currency \n             string \n             no \n             Three letter currency code (ISO-4217) of the total amount for the rate specified in  Rate.rate  field \n         \n         \n             Rate.rooms \n             list[Room] \n             no \n             \n                List of room objects. \n                 Please not that the number of rooms are not guaranteed to match the number of pax objects specified in  multi-pax  queries. \n                Some rates might return single room separately to conform the number of paxes specified in the query while some might return multi rooms per rate. \n                 If you choose separate rates for your multi pax query you should perform individual bookings for each of those rates separately. \n             \n         \n         \n             Room.numberOfAdults \n             integer \n             no \n             Maximum number of adults can fit into this room \n         \n         \n             Room.childrenAges \n             list[integer] \n             no \n             Children with specified ages can be accepted for this room. \n         \n         \n             Room.roomDescription \n             string \n             no \n             Any arbitrary description for this room which the hotelier specified. \n         \n         \n             Room.roomSequence \n             integer \n             no \n             Room sequence identifier which is useful at the time of booking in order to specify which occupant set will be matched with which room. \n         \n         \n             Rate.cancellationPolicies \n             list[CancellationPolicy] \n             no \n             \n                List of CancellationPolicy objects. \n                Cancellation policies indicates the amount of penalty charged and deducted from the total refund amount of the booking at the time of cancellation performed after the specified date and time.\n             \n         \n         \n             CancellationPolicy.amount \n             decimal \n             no \n             Penalty amount in rate's currency specified in  Rate.currency  field \n         \n         \n             CancellationPolicy.fromDate \n             string \n             no \n             Offset date time string in  YYYY-MM-DDThh:mmTZD  (ISO 8601) format indicating from when the polciy applied. \n         \n         \n             Rate.remarks \n             string \n             yes \n             Any comments, warnings or policies applied by the hotel displayed here if available. \n         \n         \n             Rate.commission \n             decimal \n             yes \n             Amount of comission specified for commissionable rates. \n         \n         \n             Rate.hotelRate \n             decimal \n             yes \n             \n                Total amount of rate in hotelier's currency specified in  hotelCurrency  field which will be payed to the hotelier by the occupants at the time of arrival.\n                This field should not be  null  when the  Rate.rateType  is  DIRECT \n             \n         \n         \n             Rate.hotelCurrency \n             string \n             yes \n             Three letter currency code (ISO-4217) of the total amount for the hotel rate specified in  Rate.hotelRate  field", 
            "title": "Result Object"
        }, 
        {
            "location": "/api_docs/check_hotel/#example-result-objects", 
            "text": "", 
            "title": "Example Result Objects"
        }, 
        {
            "location": "/api_docs/check_hotel/#single-room-result-object", 
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89 { \n     hotel :   { \n         countryCode :   TR , \n         destinationCode :   c36ca9 , \n         destinationName :   istanbul , \n         hotelCode :   d31d12 , \n         hotelName :   The Marmara Taksim , \n         rates :   [ \n             { \n                 boardName :   ROOM ONLY , \n                 cancellationPolicies :   [ \n                     { \n                         amount :   146.78 , \n                         fromDate :   2017-07-19T23:59:00+03:00 \n                     } \n                 ], \n                 commission :   null , \n                 currency :   EUR , \n                 hotelCurrency :   null , \n                 hotelRate :   null , \n                 nonrefundable :   false , \n                 rate :   493.18 , \n                 rateKey :   [Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|Prabrg|[jVOYrg|2|0]] , \n                 rateType :   NET , \n                 remarks :   null , \n                 rooms :   [ \n                     { \n                         numberOfAdults :   2 , \n                         numberOfChildren :   0 , \n                         roomDescription :   DOUBLE DELUXE CITY VIEW , \n                         sequence :   1 \n                     } \n                 ] \n             }, \n             { \n                 boardName :   ROOM ONLY , \n                 cancellationPolicies :   [ \n                     { \n                         amount :   174.13 , \n                         fromDate :   2017-07-19T23:59:00+03:00 \n                     } \n                 ], \n                 commission :   null , \n                 currency :   EUR , \n                 hotelCurrency :   null , \n                 hotelRate :   null , \n                 nonrefundable :   false , \n                 rate :   585.08 , \n                 rateKey :   [Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|Prabrg|[jVOYrg|2|0]] , \n                 rateType :   NET , \n                 remarks :   null , \n                 rooms :   [ \n                     { \n                         numberOfAdults :   2 , \n                         numberOfChildren :   0 , \n                         roomDescription :   DOUBLE DELUXE CITY VIEW , \n                         sequence :   1 \n                     } \n                 ] \n             }, \n             { \n                 boardName :   BED AND BREAKFAST , \n                 cancellationPolicies :   [ \n                     { \n                         amount :   175.94 , \n                         fromDate :   2017-07-19T23:59:00+03:00 \n                     } \n                 ], \n                 commission :   null , \n                 currency :   EUR , \n                 hotelCurrency :   null , \n                 hotelRate :   null , \n                 nonrefundable :   false , \n                 rate :   591.19 , \n                 rateKey :   [Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|5pyO3Q|[jVOYrg|2|0]] , \n                 rateType :   NET , \n                 remarks :   null , \n                 rooms :   [ \n                     { \n                         numberOfAdults :   2 , \n                         numberOfChildren :   0 , \n                         roomDescription :   DOUBLE DELUXE CITY VIEW , \n                         sequence :   1 \n                     } \n                 ] \n             } \n         ] \n     }  }", 
            "title": "Single Room Result Object"
        }, 
        {
            "location": "/api_docs/check_rate/", 
            "text": "Introduction\n\n\nCheck for single rate availability for a given rate key. This method is intended to provide the most recent availability data for any selected rate. You'd better check for a rate at least once just before proceeding to booking step.\n\n\nIf rate has gone at the time of query, client receives not available error.\n\n\nDefinition\n\n\n1\nPOST https://api.ratemarkt.com/v1/checkrate\n\n\n\n\n\n\nQuery Object\n\n\n\n    \n\n        \n\n        \n\n        \n\n        \n\n    \n\n    \n\n        \n\n            \nArgument\n\n            \nType\n\n            \nRequired\n\n            \nDescription\n\n        \n\n    \n\n    \n\n        \n\n            \nrateKey\n\n            \nstring\n\n            \nyes\n\n            \nUnique rate identifier\n\n        \n\n    \n\n\n\n\n\nExample Query Object\n\n\n1\n2\n3\n{\n\n    \nrateKey\n:\n \n[Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|Prabrg|[jVOYrg|2|0]]\n\n\n}\n\n\n\n\n\n\n\nResult Object\n\n\n\n\nResult Object Hint\n\n\nWhile \nCheck Hotel\n resource returns a hotel object, this resource also returns exactly the same hotel object except it holds only a single rate object in \nrates\n field.\n\n\nSo you may want to reuse the same json parser logic in your client application.\n\n\n\n\n\n    \n\n        \n\n        \n\n        \n\n        \n\n    \n\n    \n\n        \n\n            \nArgument\n\n            \nType\n\n            \nNullable\n\n            \nDescription\n\n        \n\n    \n\n    \n\n                \n\n            \nHotel.hotelCode\n\n            \nstring\n\n            \nno\n\n            \nUnique hotel identifier\n\n        \n\n        \n\n            \nHotel.hotelName\n\n            \nstring\n\n            \nno\n\n            \nName of the hotel\n\n        \n\n        \n\n            \nHotel.destinationCode\n\n            \nstring\n\n            \nno\n\n            \nUnique destination identifier of the hotel\n\n        \n\n        \n\n            \nHotel.destinationName\n\n            \nstring\n\n            \nno\n\n            \nName of the destination\n\n        \n\n        \n\n            \nHotel.countryCode\n\n            \nstring\n\n            \nno\n\n            \nTwo letter country code (ISO 3166-1 alpha-2) of the hotel\n\n        \n\n        \n\n            \nHotel.rates\n\n            \nlist[Rate]\n\n            \nno\n\n            \nList of rate objects. Each rate corresponds to a hotel room combined with a service level which means a bookable product with a price for each hotel.\n\n        \n\n        \n\n            \nRate.rateType\n\n            \nstring\n\n            \nno\n\n            \nType of the rate. There are three types:\n                \n\n                    \nNET\n: This type of rate can be selled by applying any margin on top of it.\n\n                    \nSALE\n: Commissionable rate which should be selled exactly at the given rate.\n\n                    \nDIRECT\n: Commissionable rate which the amount is payed directly to the hotelier by the occupants at the time of arrival. \n\n                \n\n                For commissionable rates, the amount of commission for the merchant is denoted at \nRate.commission\n field.\n            \n\n        \n\n        \n\n            \nRate.rateKey\n\n            \nstring\n\n            \nno\n\n            \nUnique identifier for each rate.\n\n        \n\n        \n\n            \nRate.nonrefundable\n\n            \nboolean\n\n            \nyes\n\n            \n\n                Flag denoting whether the rate is refundable or not. It means that if any nonrefundable rate is booked, cancellation of that booking won't be refunded in any cases.\n\n                Value can be \nnull\n in some cases so please refer to the corresponding \nRate.cancellation_policies\n field for that rate for money refunding policy at the time of cancellation.\n            \n\n        \n\n        \n\n            \nRate.boardName\n\n            \nstring\n\n            \nno\n\n            \nBoarding type of the rate. It can be any arbitrary identifier depending on corresponding hotel's boarding policy.\n\n        \n\n        \n\n            \nRate.rate\n\n            \ndecimal\n\n            \nno\n\n            \nTotal amount of the rate at given currency specified in \nRate.currency\n field.\n\n        \n\n        \n\n            \nRate.currency\n\n            \nstring\n\n            \nno\n\n            \nThree letter currency code (ISO-4217) of the total amount for the rate specified in \nRate.rate\n field\n\n        \n\n        \n\n            \nRate.rooms\n\n            \nlist[Room]\n\n            \nno\n\n            \n\n                List of room objects.\n\n                \nPlease not that the number of rooms are not guaranteed to match the number of pax objects specified in \nmulti-pax\n queries.\n\n                Some rates might return single room separately to conform the number of paxes specified in the query while some might return multi rooms per rate.\n\n                \nIf you choose separate rates for your multi pax query you should perform individual bookings for each of those rates separately.\n\n            \n\n        \n\n        \n\n            \nRoom.numberOfAdults\n\n            \ninteger\n\n            \nno\n\n            \nMaximum number of adults can fit into this room\n\n        \n\n        \n\n            \nRoom.childrenAges\n\n            \nlist[integer]\n\n            \nno\n\n            \nChildren with specified ages can be accepted for this room.\n\n        \n\n        \n\n            \nRoom.roomDescription\n\n            \nstring\n\n            \nno\n\n            \nAny arbitrary description for this room which the hotelier specified.\n\n        \n\n        \n\n            \nRoom.roomSequence\n\n            \ninteger\n\n            \nno\n\n            \nRoom sequence identifier which is useful at the time of booking in order to specify which occupant set will be matched with which room.\n\n        \n\n        \n\n            \nRate.cancellationPolicies\n\n            \nlist[CancellationPolicy]\n\n            \nno\n\n            \n\n                List of CancellationPolicy objects.\n\n                Cancellation policies indicates the amount of penalty charged and deducted from the total refund amount of the booking at the time of cancellation performed after the specified date and time.\n            \n\n        \n\n        \n\n            \nCancellationPolicy.amount\n\n            \ndecimal\n\n            \nno\n\n            \nPenalty amount in rate's currency specified in \nRate.currency\n field\n\n        \n\n        \n\n            \nCancellationPolicy.fromDate\n\n            \nstring\n\n            \nno\n\n            \nOffset date time string in \nYYYY-MM-DDThh:mmTZD\n (ISO 8601) format indicating from when the polciy applied.\n\n        \n\n        \n\n            \nRate.remarks\n\n            \nstring\n\n            \nyes\n\n            \nAny comments, warnings or policies applied by the hotel displayed here if available.\n\n        \n\n        \n\n            \nRate.commission\n\n            \ndecimal\n\n            \nyes\n\n            \nAmount of comission specified for commissionable rates.\n\n        \n\n        \n\n            \nRate.hotelRate\n\n            \ndecimal\n\n            \nyes\n\n            \n\n                Total amount of rate in hotelier's currency specified in \nhotelCurrency\n field which will be payed to the hotelier by the occupants at the time of arrival.\n                This field should not be \nnull\n when the \nRate.rateType\n is \nDIRECT\n\n            \n\n        \n\n        \n\n            \nRate.hotelCurrency\n\n            \nstring\n\n            \nyes\n\n            \nThree letter currency code (ISO-4217) of the total amount for the hotel rate specified in \nRate.hotelRate\n field\n\n        \n\n\n\n\n\nExample Result Objects\n\n\nSingle Room Result Object\n\n\n\n\nHolding Single Rate \n\n\nNote that the hotel object contains only a single rate object which is queried by the given rate key.\n\n\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n{\n\n    \nhotel\n:\n \n{\n\n        \ncountryCode\n:\n \nTR\n,\n\n        \ndestinationCode\n:\n \nc36ca9\n,\n\n        \ndestinationName\n:\n \nistanbul\n,\n\n        \nhotelCode\n:\n \nd31d12\n,\n\n        \nhotelName\n:\n \nThe Marmara Taksim\n,\n\n        \nrates\n:\n \n[\n\n            \n{\n\n                \nboardName\n:\n \nROOM ONLY\n,\n\n                \ncancellationPolicies\n:\n \n[\n\n                    \n{\n\n                        \namount\n:\n \n146.78\n,\n\n                        \nfromDate\n:\n \n2017-07-19T23:59:00+03:00\n\n                    \n}\n\n                \n],\n\n                \ncommission\n:\n \nnull\n,\n\n                \ncurrency\n:\n \nEUR\n,\n\n                \nhotelCurrency\n:\n \nnull\n,\n\n                \nhotelRate\n:\n \nnull\n,\n\n                \nnonrefundable\n:\n \nfalse\n,\n\n                \nrate\n:\n \n493.18\n,\n\n                \nrateKey\n:\n \n[Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|Prabrg|[jVOYrg|2|0]]\n,\n\n                \nrateType\n:\n \nNET\n,\n\n                \nremarks\n:\n \nnull\n,\n\n                \nrooms\n:\n \n[\n\n                    \n{\n\n                        \nnumberOfAdults\n:\n \n2\n,\n\n                        \nnumberOfChildren\n:\n \n0\n,\n\n                        \nroomDescription\n:\n \nDOUBLE DELUXE CITY VIEW\n,\n\n                        \nsequence\n:\n \n1\n\n                    \n}\n\n                \n]\n\n            \n}\n\n        \n]\n\n    \n}\n\n\n}", 
            "title": "Check Rate"
        }, 
        {
            "location": "/api_docs/check_rate/#introduction", 
            "text": "Check for single rate availability for a given rate key. This method is intended to provide the most recent availability data for any selected rate. You'd better check for a rate at least once just before proceeding to booking step.  If rate has gone at the time of query, client receives not available error.", 
            "title": "Introduction"
        }, 
        {
            "location": "/api_docs/check_rate/#definition", 
            "text": "1 POST https://api.ratemarkt.com/v1/checkrate", 
            "title": "Definition"
        }, 
        {
            "location": "/api_docs/check_rate/#query-object", 
            "text": "Argument \n             Type \n             Required \n             Description \n         \n     \n     \n         \n             rateKey \n             string \n             yes \n             Unique rate identifier", 
            "title": "Query Object"
        }, 
        {
            "location": "/api_docs/check_rate/#example-query-object", 
            "text": "1\n2\n3 { \n     rateKey :   [Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|Prabrg|[jVOYrg|2|0]]  }", 
            "title": "Example Query Object"
        }, 
        {
            "location": "/api_docs/check_rate/#result-object", 
            "text": "Result Object Hint  While  Check Hotel  resource returns a hotel object, this resource also returns exactly the same hotel object except it holds only a single rate object in  rates  field.  So you may want to reuse the same json parser logic in your client application.   \n     \n         \n         \n         \n         \n     \n     \n         \n             Argument \n             Type \n             Nullable \n             Description \n         \n     \n     \n                 \n             Hotel.hotelCode \n             string \n             no \n             Unique hotel identifier \n         \n         \n             Hotel.hotelName \n             string \n             no \n             Name of the hotel \n         \n         \n             Hotel.destinationCode \n             string \n             no \n             Unique destination identifier of the hotel \n         \n         \n             Hotel.destinationName \n             string \n             no \n             Name of the destination \n         \n         \n             Hotel.countryCode \n             string \n             no \n             Two letter country code (ISO 3166-1 alpha-2) of the hotel \n         \n         \n             Hotel.rates \n             list[Rate] \n             no \n             List of rate objects. Each rate corresponds to a hotel room combined with a service level which means a bookable product with a price for each hotel. \n         \n         \n             Rate.rateType \n             string \n             no \n             Type of the rate. There are three types:\n                 \n                     NET : This type of rate can be selled by applying any margin on top of it. \n                     SALE : Commissionable rate which should be selled exactly at the given rate. \n                     DIRECT : Commissionable rate which the amount is payed directly to the hotelier by the occupants at the time of arrival.  \n                 \n                For commissionable rates, the amount of commission for the merchant is denoted at  Rate.commission  field.\n             \n         \n         \n             Rate.rateKey \n             string \n             no \n             Unique identifier for each rate. \n         \n         \n             Rate.nonrefundable \n             boolean \n             yes \n             \n                Flag denoting whether the rate is refundable or not. It means that if any nonrefundable rate is booked, cancellation of that booking won't be refunded in any cases. \n                Value can be  null  in some cases so please refer to the corresponding  Rate.cancellation_policies  field for that rate for money refunding policy at the time of cancellation.\n             \n         \n         \n             Rate.boardName \n             string \n             no \n             Boarding type of the rate. It can be any arbitrary identifier depending on corresponding hotel's boarding policy. \n         \n         \n             Rate.rate \n             decimal \n             no \n             Total amount of the rate at given currency specified in  Rate.currency  field. \n         \n         \n             Rate.currency \n             string \n             no \n             Three letter currency code (ISO-4217) of the total amount for the rate specified in  Rate.rate  field \n         \n         \n             Rate.rooms \n             list[Room] \n             no \n             \n                List of room objects. \n                 Please not that the number of rooms are not guaranteed to match the number of pax objects specified in  multi-pax  queries. \n                Some rates might return single room separately to conform the number of paxes specified in the query while some might return multi rooms per rate. \n                 If you choose separate rates for your multi pax query you should perform individual bookings for each of those rates separately. \n             \n         \n         \n             Room.numberOfAdults \n             integer \n             no \n             Maximum number of adults can fit into this room \n         \n         \n             Room.childrenAges \n             list[integer] \n             no \n             Children with specified ages can be accepted for this room. \n         \n         \n             Room.roomDescription \n             string \n             no \n             Any arbitrary description for this room which the hotelier specified. \n         \n         \n             Room.roomSequence \n             integer \n             no \n             Room sequence identifier which is useful at the time of booking in order to specify which occupant set will be matched with which room. \n         \n         \n             Rate.cancellationPolicies \n             list[CancellationPolicy] \n             no \n             \n                List of CancellationPolicy objects. \n                Cancellation policies indicates the amount of penalty charged and deducted from the total refund amount of the booking at the time of cancellation performed after the specified date and time.\n             \n         \n         \n             CancellationPolicy.amount \n             decimal \n             no \n             Penalty amount in rate's currency specified in  Rate.currency  field \n         \n         \n             CancellationPolicy.fromDate \n             string \n             no \n             Offset date time string in  YYYY-MM-DDThh:mmTZD  (ISO 8601) format indicating from when the polciy applied. \n         \n         \n             Rate.remarks \n             string \n             yes \n             Any comments, warnings or policies applied by the hotel displayed here if available. \n         \n         \n             Rate.commission \n             decimal \n             yes \n             Amount of comission specified for commissionable rates. \n         \n         \n             Rate.hotelRate \n             decimal \n             yes \n             \n                Total amount of rate in hotelier's currency specified in  hotelCurrency  field which will be payed to the hotelier by the occupants at the time of arrival.\n                This field should not be  null  when the  Rate.rateType  is  DIRECT \n             \n         \n         \n             Rate.hotelCurrency \n             string \n             yes \n             Three letter currency code (ISO-4217) of the total amount for the hotel rate specified in  Rate.hotelRate  field", 
            "title": "Result Object"
        }, 
        {
            "location": "/api_docs/check_rate/#example-result-objects", 
            "text": "", 
            "title": "Example Result Objects"
        }, 
        {
            "location": "/api_docs/check_rate/#single-room-result-object", 
            "text": "Holding Single Rate   Note that the hotel object contains only a single rate object which is queried by the given rate key.    1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37 { \n     hotel :   { \n         countryCode :   TR , \n         destinationCode :   c36ca9 , \n         destinationName :   istanbul , \n         hotelCode :   d31d12 , \n         hotelName :   The Marmara Taksim , \n         rates :   [ \n             { \n                 boardName :   ROOM ONLY , \n                 cancellationPolicies :   [ \n                     { \n                         amount :   146.78 , \n                         fromDate :   2017-07-19T23:59:00+03:00 \n                     } \n                 ], \n                 commission :   null , \n                 currency :   EUR , \n                 hotelCurrency :   null , \n                 hotelRate :   null , \n                 nonrefundable :   false , \n                 rate :   493.18 , \n                 rateKey :   [Q9k|3|USD|US|[[2|[]]]]_[AJ62Fw|ANMdEg|NET|0|Prabrg|[jVOYrg|2|0]] , \n                 rateType :   NET , \n                 remarks :   null , \n                 rooms :   [ \n                     { \n                         numberOfAdults :   2 , \n                         numberOfChildren :   0 , \n                         roomDescription :   DOUBLE DELUXE CITY VIEW , \n                         sequence :   1 \n                     } \n                 ] \n             } \n         ] \n     }  }", 
            "title": "Single Room Result Object"
        }, 
        {
            "location": "/api_docs/book_rate/", 
            "text": "", 
            "title": "Book Rate"
        }, 
        {
            "location": "/api_docs/check_booking/", 
            "text": "", 
            "title": "Check Booking"
        }, 
        {
            "location": "/api_docs/cancel_booking/", 
            "text": "", 
            "title": "Cancel Booking"
        }, 
        {
            "location": "/api_docs/errors/", 
            "text": "", 
            "title": "Errors"
        }, 
        {
            "location": "/api_docs/client_libraries/", 
            "text": "", 
            "title": "Client Libraries"
        }, 
        {
            "location": "/sdk_docs/getting_started/", 
            "text": "", 
            "title": "Getting Started"
        }, 
        {
            "location": "/api_specs/getting_started/", 
            "text": "", 
            "title": "Getting Started"
        }, 
        {
            "location": "/open_source/", 
            "text": "", 
            "title": "Open Source"
        }, 
        {
            "location": "/faq/", 
            "text": "", 
            "title": "F.A.Q"
        }
    ]
}